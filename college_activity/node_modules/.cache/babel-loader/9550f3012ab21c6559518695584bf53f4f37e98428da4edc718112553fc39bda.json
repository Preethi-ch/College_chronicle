{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\newpost.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState } from \"react\";\n// // import \"./Newpost.css\";\n\n// const NewPost = () => {\n//   const [fileNames, setFileNames] = useState([]); // Array to store file names\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n\n//   // Handle file selection\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0]; // Get the selected file\n//     if (file) {\n//       // Add the selected file's name to the list of file names\n//       setFileNames((prevFileNames) => [...prevFileNames, file.name]);\n//     }\n//   };\n\n//   // Handle post submission\n//   const handlePost = () => {\n//     alert(\"Post submitted successfully!\");\n//     console.log({\n//       title,\n//       description,\n//       category,\n//       subCategory,\n//       fileNames,\n//     });\n//   };\n\n//   // Handle saving the post as a draft\n//   const handleSaveDraft = () => {\n//     alert(\"Post saved as draft!\");\n//     console.log({\n//       title,\n//       description,\n//       category,\n//       subCategory,\n//       fileNames,\n//     });\n//   };\n\n//   // Remove file from the list\n//   const handleRemoveFile = (fileName) => {\n//     setFileNames((prevFileNames) => prevFileNames.filter((name) => name !== fileName));\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File upload section */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {fileNames.length > 0\n//               ? fileNames.join(\", \") // Display all uploaded file names\n//               : \"Click to browse or drop files here\"}\n//           </label>\n//           <input\n//             type=\"file\"\n//             id=\"fileInput\"\n//             onChange={handleFileChange}\n//             style={{ display: \"none\" }}\n//           />\n//         </div>\n\n//         {/* Title Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title for the file\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n\n//         {/* Description Input */}\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         {/* Category Selection */}\n//         <select\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>Select a category</option>\n//           <option value=\"category1\">Category 1</option>\n//           <option value=\"category2\">Category 2</option>\n//         </select>\n\n//         {/* Subcategory Selection */}\n//         <select\n//           value={subCategory}\n//           onChange={(e) => setSubCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>Select a subcategory</option>\n//           <option value=\"subcategory1\">Subcategory 1</option>\n//           <option value=\"subcategory2\">Subcategory 2</option>\n//         </select>\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button\n//             type=\"button\"\n//             className=\"save-draft\"\n//             onClick={handleSaveDraft}\n//           >\n//             Save as Draft\n//           </button>\n//           <button\n//             type=\"button\"\n//             className=\"post\"\n//             onClick={handlePost}\n//           >\n//             Post\n//           </button>\n//         </div>\n\n//         {/* Display the list of uploaded files with Remove option */}\n//         {fileNames.length > 0 && (\n//           <div className=\"uploaded-files\">\n//             <h4>Uploaded Files:</h4>\n//             <ul>\n//               {fileNames.map((fileName, index) => (\n//                 <li key={index}>\n//                   {fileName}\n//                   <span\n//                     onClick={() => handleRemoveFile(fileName)}\n//                     className=\"remove-file\"\n//                   >\n//                     Ã—\n//                   </span>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const NewPost = () => {\n//   const [fileNames, setFileNames] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n\n//   // Handle file selection\n//   const handleFileChange = (event) => {\n//     const files = Array.from(event.target.files); // Get all selected files\n//     if (files) {\n//       const fileNames = files.map((file) => file.name);\n//       setFileNames(fileNames);\n//     }\n//   };\n\n//   // Handle post submission\n//   const handlePost = async () => {\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n\n//     // Append files to formData\n//     const files = document.getElementById(\"fileInput\").files;\n//     Array.from(files).forEach((file) => {\n//       formData.append(\"media\", file);\n//     });\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n\n//       alert(\"Post submitted successfully!\");\n//       console.log(response.data);\n//     } catch (err) {\n//       alert(\"Failed to submit post!\");\n//       console.error(err);\n//     }\n//   };\n\n//   // Handle saving the post as a draft\n//   const handleSaveDraft = () => {\n//     alert(\"Post saved as draft!\");\n//     console.log({\n//       title,\n//       description,\n//       category,\n//       subCategory,\n//       fileNames,\n//     });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File upload section */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {fileNames.length > 0\n//               ? fileNames.join(\", \")\n//               : \"Click to browse or drop files here\"}\n//           </label>\n//           <input\n//             type=\"file\"\n//             id=\"fileInput\"\n//             onChange={handleFileChange}\n//             multiple\n//           />\n//         </div>\n\n//         {/* Title Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title for the file\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n\n//         {/* Description Input */}\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         {/* Category Selection */}\n//         <select\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>Select a category</option>\n//           <option value=\"category1\">Category 1</option>\n//           <option value=\"category2\">Category 2</option>\n//         </select>\n\n//         {/* Subcategory Selection */}\n//         <select\n//           value={subCategory}\n//           onChange={(e) => setSubCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>Select a subcategory</option>\n//           <option value=\"subcategory1\">Subcategory 1</option>\n//           <option value=\"subcategory2\">Subcategory 2</option>\n//         </select>\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={handleSaveDraft}>\n//             Save as Draft\n//           </button>\n//           <button type=\"button\" onClick={handlePost}>\n//             Post\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\nconst NewPost = () => {\n  _s();\n  const [fileNames, setFileNames] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [uploaderEmail, setUploaderEmail] = useState(\"\");\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files);\n    if (files) {\n      const fileNames = files.map(file => file.name);\n      setFileNames(fileNames);\n    }\n  };\n  const handlePost = async () => {\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"uploaderEmail\", uploaderEmail);\n    const files = document.getElementById(\"fileInput\").files;\n    if (!files.length) {\n      alert(\"Please upload at least one file.\");\n      return;\n    }\n    Array.from(files).forEach(file => {\n      formData.append(\"media\", file);\n    });\n    try {\n      const response = await axios.post(\"http://localhost:3002/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Post submitted successfully!\");\n      console.log(response.data);\n    } catch (err) {\n      alert(\"Failed to submit post!\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      value: uploaderEmail,\n      onChange: e => setUploaderEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"bxLiWP6TlOJIyQ7pO99XUXNE01s=\");\n_c = NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["NewPost","_s","fileNames","setFileNames","useState","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","uploaderEmail","setUploaderEmail","handleFileChange","event","files","Array","from","target","map","file","name","handlePost","formData","FormData","append","document","getElementById","length","alert","forEach","response","axios","post","headers","console","log","data","err","error","_jsxDEV","children","type","placeholder","value","onChange","e","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// // import \"./Newpost.css\";\r\n\r\n// const NewPost = () => {\r\n//   const [fileNames, setFileNames] = useState([]); // Array to store file names\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n\r\n//   // Handle file selection\r\n//   const handleFileChange = (event) => {\r\n//     const file = event.target.files[0]; // Get the selected file\r\n//     if (file) {\r\n//       // Add the selected file's name to the list of file names\r\n//       setFileNames((prevFileNames) => [...prevFileNames, file.name]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle post submission\r\n//   const handlePost = () => {\r\n//     alert(\"Post submitted successfully!\");\r\n//     console.log({\r\n//       title,\r\n//       description,\r\n//       category,\r\n//       subCategory,\r\n//       fileNames,\r\n//     });\r\n//   };\r\n\r\n//   // Handle saving the post as a draft\r\n//   const handleSaveDraft = () => {\r\n//     alert(\"Post saved as draft!\");\r\n//     console.log({\r\n//       title,\r\n//       description,\r\n//       category,\r\n//       subCategory,\r\n//       fileNames,\r\n//     });\r\n//   };\r\n\r\n//   // Remove file from the list\r\n//   const handleRemoveFile = (fileName) => {\r\n//     setFileNames((prevFileNames) => prevFileNames.filter((name) => name !== fileName));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File upload section */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {fileNames.length > 0\r\n//               ? fileNames.join(\", \") // Display all uploaded file names\r\n//               : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"fileInput\"\r\n//             onChange={handleFileChange}\r\n//             style={{ display: \"none\" }}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Title Input */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title for the file\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         {/* Description Input */}\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         {/* Category Selection */}\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => setCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>Select a category</option>\r\n//           <option value=\"category1\">Category 1</option>\r\n//           <option value=\"category2\">Category 2</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Selection */}\r\n//         <select\r\n//           value={subCategory}\r\n//           onChange={(e) => setSubCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>Select a subcategory</option>\r\n//           <option value=\"subcategory1\">Subcategory 1</option>\r\n//           <option value=\"subcategory2\">Subcategory 2</option>\r\n//         </select>\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button\r\n//             type=\"button\"\r\n//             className=\"save-draft\"\r\n//             onClick={handleSaveDraft}\r\n//           >\r\n//             Save as Draft\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             className=\"post\"\r\n//             onClick={handlePost}\r\n//           >\r\n//             Post\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Display the list of uploaded files with Remove option */}\r\n//         {fileNames.length > 0 && (\r\n//           <div className=\"uploaded-files\">\r\n//             <h4>Uploaded Files:</h4>\r\n//             <ul>\r\n//               {fileNames.map((fileName, index) => (\r\n//                 <li key={index}>\r\n//                   {fileName}\r\n//                   <span\r\n//                     onClick={() => handleRemoveFile(fileName)}\r\n//                     className=\"remove-file\"\r\n//                   >\r\n//                     Ã—\r\n//                   </span>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const NewPost = () => {\r\n//   const [fileNames, setFileNames] = useState([]);\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n\r\n//   // Handle file selection\r\n//   const handleFileChange = (event) => {\r\n//     const files = Array.from(event.target.files); // Get all selected files\r\n//     if (files) {\r\n//       const fileNames = files.map((file) => file.name);\r\n//       setFileNames(fileNames);\r\n//     }\r\n//   };\r\n\r\n//   // Handle post submission\r\n//   const handlePost = async () => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n\r\n//     // Append files to formData\r\n//     const files = document.getElementById(\"fileInput\").files;\r\n//     Array.from(files).forEach((file) => {\r\n//       formData.append(\"media\", file);\r\n//     });\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/upload\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       });\r\n\r\n//       alert(\"Post submitted successfully!\");\r\n//       console.log(response.data);\r\n//     } catch (err) {\r\n//       alert(\"Failed to submit post!\");\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   // Handle saving the post as a draft\r\n//   const handleSaveDraft = () => {\r\n//     alert(\"Post saved as draft!\");\r\n//     console.log({\r\n//       title,\r\n//       description,\r\n//       category,\r\n//       subCategory,\r\n//       fileNames,\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File upload section */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {fileNames.length > 0\r\n//               ? fileNames.join(\", \")\r\n//               : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"fileInput\"\r\n//             onChange={handleFileChange}\r\n//             multiple\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Title Input */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title for the file\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         {/* Description Input */}\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         {/* Category Selection */}\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => setCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>Select a category</option>\r\n//           <option value=\"category1\">Category 1</option>\r\n//           <option value=\"category2\">Category 2</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Selection */}\r\n//         <select\r\n//           value={subCategory}\r\n//           onChange={(e) => setSubCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>Select a subcategory</option>\r\n//           <option value=\"subcategory1\">Subcategory 1</option>\r\n//           <option value=\"subcategory2\">Subcategory 2</option>\r\n//         </select>\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={handleSaveDraft}>\r\n//             Save as Draft\r\n//           </button>\r\n//           <button type=\"button\" onClick={handlePost}>\r\n//             Post\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n\r\n\r\nconst NewPost = () => {\r\n  const [fileNames, setFileNames] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [uploaderEmail, setUploaderEmail] = useState(\"\");\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    if (files) {\r\n      const fileNames = files.map((file) => file.name);\r\n      setFileNames(fileNames);\r\n    }\r\n  };\r\n\r\n  const handlePost = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"uploaderEmail\", uploaderEmail);\r\n\r\n    const files = document.getElementById(\"fileInput\").files;\r\n    if (!files.length) {\r\n      alert(\"Please upload at least one file.\");\r\n      return;\r\n    }\r\n\r\n    Array.from(files).forEach((file) => {\r\n      formData.append(\"media\", file);\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3002/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      alert(\"Post submitted successfully!\");\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      alert(\"Failed to submit post!\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Other components */}\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        value={uploaderEmail}\r\n        onChange={(e) => setUploaderEmail(e.target.value)}\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}