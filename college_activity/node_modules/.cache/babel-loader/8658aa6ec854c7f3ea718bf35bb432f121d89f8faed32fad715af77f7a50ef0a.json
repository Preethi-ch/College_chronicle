{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Postspage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Postspage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Postspage = ({\n  userEmail\n}) => {\n  _s();\n  // Receive userEmail as a prop\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    console.log(\"User email received as prop:\", userEmail);\n    const fetchPosts = async () => {\n      if (!userEmail) {\n        console.log(\"User email is not available, skipping fetch.\");\n        return;\n      }\n      console.log(\"Fetching posts for user:\", userEmail);\n      try {\n        const response = await axios.get(`http://localhost:3000/postview/posted?email=${userEmail}`);\n        console.log(\"Posts fetched from backend:\", response.data);\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [userEmail]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Postspage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Postspage;\nexport default Postspage;\nvar _c;\n$RefreshReg$(_c, \"Postspage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Postspage","userEmail","_s","posts","setPosts","console","log","fetchPosts","response","get","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","title","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Postspage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Postspage.css\";\r\n\r\nconst Postspage = ({ userEmail }) => {  // Receive userEmail as a prop\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"User email received as prop:\", userEmail);\r\n\r\n    const fetchPosts = async () => {\r\n      if (!userEmail) {\r\n        console.log(\"User email is not available, skipping fetch.\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"Fetching posts for user:\", userEmail);\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/postview/posted?email=${userEmail}`);\r\n        console.log(\"Posts fetched from backend:\", response.data);\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [userEmail]);\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1>User Posts</h1>\r\n      {posts.length === 0 ? (\r\n        <p>No posts available.</p>\r\n      ) : (\r\n        posts.map((post) => (\r\n          <div key={post._id} className=\"post-card\">\r\n            <h3>{post.title}</h3>\r\n            <p>{post.description}</p>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postspage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAG;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEL,SAAS,CAAC;IAEtD,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACN,SAAS,EAAE;QACdI,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;QAC3D;MACF;MAEAD,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,SAAS,CAAC;MAElD,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,+CAA+CR,SAAS,EAAE,CAAC;QAC5FI,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEE,QAAQ,CAACE,IAAI,CAAC;QACzDN,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,oBACEF,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBd,KAAK,CAACe,MAAM,KAAK,CAAC,gBACjBnB,OAAA;MAAAc,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE1Bd,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACbrB,OAAA;MAAoBa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACvCd,OAAA;QAAAc,QAAA,EAAKO,IAAI,CAACC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBlB,OAAA;QAAAc,QAAA,EAAIO,IAAI,CAACE;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFjBG,IAAI,CAACG,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAzCIF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}