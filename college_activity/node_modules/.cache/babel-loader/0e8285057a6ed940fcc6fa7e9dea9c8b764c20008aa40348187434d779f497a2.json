{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./Newpost.css\";\n\n// const NewPost = ({ userEmail }) => {\n//   const [fileNames, setFileNames] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [link, setLink] = useState(\"\"); // üîπ New state for the link field\n//   const [files, setFiles] = useState([]);\n//   const [showCancelDialog, setShowCancelDialog] = useState(false); // üîπ For confirmation popup\n\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n//     setFileNames((prevNames) => [...prevNames, ...selectedFiles.map((file) => file.name)]);\n//   };\n\n//   const handleFileRemove = (index) => {\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\n//     setFileNames((prevNames) => prevNames.filter((_, i) => i !== index));\n//   };\n\n//   const resetForm = () => {\n//     setFileNames([]);\n//     setTitle(\"\");\n//     setDescription(\"\");\n//     setCategory(\"\");\n//     setSubCategory(\"\");\n//     setLink(\"\");\n//     setFiles([]);\n//   };\n\n//   const handleSubmit = async (isDraft = false) => {\n//     if (!title || !description || !category) {\n//       alert(\"Please fill all the required fields!\");\n//       return;\n//     }\n\n//     if (!userEmail) {\n//       alert(\"Error: User email is missing!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");  \n//     formData.append(\"uploaderEmail\", userEmail);\n//     formData.append(\"link\", link); // üîπ Add link to form data\n\n//     files.forEach((file) => formData.append(\"media\", file));\n\n//     try {\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (response.ok) {\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n//         resetForm();\n//       } else {\n//         const error = await response.json();\n//         alert(`Error: ${error.error}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting post:\", error);\n//       alert(\"Failed to submit post. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File Upload Section (Images, Videos, Documents) */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {fileNames.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\n//           </label>\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\n//         </div>\n\n//         <div className=\"uploaded-files\">\n//           {fileNames.map((fileName, index) => (\n//             <div key={index} className=\"file-item\">\n//               <span>{fileName}</span>\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>\n//                 ‚ùå\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Text Fields */}\n//         <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n//         <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\n\n//         {/* Link Field */}\n//         <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\n\n//         {/* Category Selection */}\n//         <select value={category} onChange={(e) => { setCategory(e.target.value); setSubCategory(\"\"); }} required>\n//           <option value=\"\" disabled>Select a category</option>\n//           <option value=\"events\">Events</option>\n//           <option value=\"clubs\">Clubs</option>\n//           <option value=\"academics\">Academics</option>\n//           <option value=\"notices\">Notices</option>\n//           <option value=\"skillhub\">Skillhub</option>\n//           <option value=\"placements\">Placements</option>\n//         </select>\n\n//         {/* Subcategory Dropdown (if applicable) */}\n//         {category && subCategoriesMap[category]?.length > 0 && (\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\n//             <option value=\"\" disabled>Select a subcategory</option>\n//             {subCategoriesMap[category].map((sub, index) => (\n//               <option key={index} value={sub.toLowerCase()}>{sub}</option>\n//             ))}\n//           </select>\n//         )}\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\n//           <button type=\"button\" className=\"cancel-button\" onClick={() => setShowCancelDialog(true)}>Cancel</button>\n//         </div>\n//       </form>\n\n//       {/* Cancel Confirmation Dialog */}\n//       {showCancelDialog && (\n//         <div className=\"popup-overlay\">\n//           <div className=\"popup\">\n//             <p>Are you sure you want to cancel this post?</p>\n//             <button className=\"confirm-btn\" onClick={() => { setShowCancelDialog(false); resetForm(); }}>Yes, Cancel</button>\n//             <button className=\"cancel-btn\" onClick={() => setShowCancelDialog(false)}>No, Keep Editing</button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\nimport React, { useState } from \"react\";\nimport \"./Newpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = ({\n  userEmail\n}) => {\n  _s();\n  var _subCategoriesMap$cat;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [link, setLink] = useState(\"\"); // New state for the link field\n  const [files, setFiles] = useState([]);\n  const [mediaPreviews, setMediaPreviews] = useState([]); // To preview uploaded media\n\n  const subCategoriesMap = {\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"]\n  };\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(prevFiles => [...prevFiles, ...selectedFiles]);\n    const previews = selectedFiles.map(file => {\n      if (file.type.startsWith(\"image\")) {\n        return {\n          type: \"image\",\n          url: URL.createObjectURL(file)\n        };\n      } else if (file.type === \"application/pdf\") {\n        return {\n          type: \"pdf\",\n          url: URL.createObjectURL(file)\n        };\n      } else if (file.type.startsWith(\"video\")) {\n        return {\n          type: \"video\",\n          url: URL.createObjectURL(file)\n        };\n      }\n      return null;\n    }).filter(Boolean);\n    setMediaPreviews(prevPreviews => [...prevPreviews, ...previews]);\n  };\n  const handleFileRemove = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n    setMediaPreviews(prevPreviews => prevPreviews.filter((_, i) => i !== index));\n  };\n  const resetForm = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setLink(\"\");\n    setFiles([]);\n    setMediaPreviews([]);\n  };\n  const handleSubmit = async (isDraft = false) => {\n    if (!title || !description || !category) {\n      alert(\"Please fill all the required fields!\");\n      return;\n    }\n    if (!userEmail) {\n      alert(\"Error: User email is missing!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n    formData.append(\"uploaderEmail\", userEmail);\n    formData.append(\"link\", link);\n    files.forEach(file => formData.append(\"media\", file));\n    try {\n      const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n        resetForm();\n      } else {\n        const error = await response.json();\n        alert(`Error: ${error.error}`);\n      }\n    } catch (error) {\n      console.error(\"Error submitting post:\", error);\n      alert(\"Failed to submit post. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange,\n          multiple: true,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: mediaPreviews.map((media, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [media.type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: media.url,\n            alt: \"Preview\",\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 42\n          }, this), media.type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n            width: \"200\",\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: media.url,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), media.type === \"pdf\" && /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: media.url,\n            title: \"PDF Preview\",\n            width: \"100%\",\n            height: \"200px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-button\",\n            onClick: () => handleFileRemove(index),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter link (if any)\",\n        value: link,\n        onChange: e => setLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => {\n          setCategory(e.target.value);\n          setSubCategory(\"\");\n        },\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"events\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"clubs\",\n          children: \"Clubs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"academics\",\n          children: \"Academics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"notices\",\n          children: \"Notices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"skillhub\",\n          children: \"Skillhub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"placements\",\n          children: \"Placements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), category && ((_subCategoriesMap$cat = subCategoriesMap[category]) === null || _subCategoriesMap$cat === void 0 ? void 0 : _subCategoriesMap$cat.length) > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: subCategory,\n        onChange: e => setSubCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), subCategoriesMap[category].map((sub, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sub.toLowerCase(),\n          children: sub\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(false),\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(true),\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: resetForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"oAiO66U1ng5Bd20N13upl8atLeE=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewPost","userEmail","_s","_subCategoriesMap$cat","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","link","setLink","files","setFiles","mediaPreviews","setMediaPreviews","subCategoriesMap","clubs","academics","skillhub","handleFileChange","event","selectedFiles","Array","from","target","prevFiles","previews","map","file","type","startsWith","url","URL","createObjectURL","filter","Boolean","prevPreviews","handleFileRemove","index","_","i","resetForm","handleSubmit","isDraft","alert","formData","FormData","append","forEach","response","fetch","method","body","ok","error","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","id","onChange","multiple","style","display","media","src","alt","width","controls","height","onClick","placeholder","value","e","required","disabled","sub","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Newpost.css\";\r\n\r\n// const NewPost = ({ userEmail }) => {\r\n//   const [fileNames, setFileNames] = useState([]);\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [link, setLink] = useState(\"\"); // üîπ New state for the link field\r\n//   const [files, setFiles] = useState([]);\r\n//   const [showCancelDialog, setShowCancelDialog] = useState(false); // üîπ For confirmation popup\r\n\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n//     setFileNames((prevNames) => [...prevNames, ...selectedFiles.map((file) => file.name)]);\r\n//   };\r\n\r\n//   const handleFileRemove = (index) => {\r\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n//     setFileNames((prevNames) => prevNames.filter((_, i) => i !== index));\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setFileNames([]);\r\n//     setTitle(\"\");\r\n//     setDescription(\"\");\r\n//     setCategory(\"\");\r\n//     setSubCategory(\"\");\r\n//     setLink(\"\");\r\n//     setFiles([]);\r\n//   };\r\n\r\n//   const handleSubmit = async (isDraft = false) => {\r\n//     if (!title || !description || !category) {\r\n//       alert(\"Please fill all the required fields!\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!userEmail) {\r\n//       alert(\"Error: User email is missing!\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");  \r\n//     formData.append(\"uploaderEmail\", userEmail);\r\n//     formData.append(\"link\", link); // üîπ Add link to form data\r\n\r\n//     files.forEach((file) => formData.append(\"media\", file));\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n//         resetForm();\r\n//       } else {\r\n//         const error = await response.json();\r\n//         alert(`Error: ${error.error}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting post:\", error);\r\n//       alert(\"Failed to submit post. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File Upload Section (Images, Videos, Documents) */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {fileNames.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n//         </div>\r\n\r\n//         <div className=\"uploaded-files\">\r\n//           {fileNames.map((fileName, index) => (\r\n//             <div key={index} className=\"file-item\">\r\n//               <span>{fileName}</span>\r\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>\r\n//                 ‚ùå\r\n//               </button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Text Fields */}\r\n//         <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n//         <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n\r\n//         {/* Link Field */}\r\n//         <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\r\n\r\n//         {/* Category Selection */}\r\n//         <select value={category} onChange={(e) => { setCategory(e.target.value); setSubCategory(\"\"); }} required>\r\n//           <option value=\"\" disabled>Select a category</option>\r\n//           <option value=\"events\">Events</option>\r\n//           <option value=\"clubs\">Clubs</option>\r\n//           <option value=\"academics\">Academics</option>\r\n//           <option value=\"notices\">Notices</option>\r\n//           <option value=\"skillhub\">Skillhub</option>\r\n//           <option value=\"placements\">Placements</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Dropdown (if applicable) */}\r\n//         {category && subCategoriesMap[category]?.length > 0 && (\r\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n//             <option value=\"\" disabled>Select a subcategory</option>\r\n//             {subCategoriesMap[category].map((sub, index) => (\r\n//               <option key={index} value={sub.toLowerCase()}>{sub}</option>\r\n//             ))}\r\n//           </select>\r\n//         )}\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\r\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\r\n//           <button type=\"button\" className=\"cancel-button\" onClick={() => setShowCancelDialog(true)}>Cancel</button>\r\n//         </div>\r\n//       </form>\r\n\r\n//       {/* Cancel Confirmation Dialog */}\r\n//       {showCancelDialog && (\r\n//         <div className=\"popup-overlay\">\r\n//           <div className=\"popup\">\r\n//             <p>Are you sure you want to cancel this post?</p>\r\n//             <button className=\"confirm-btn\" onClick={() => { setShowCancelDialog(false); resetForm(); }}>Yes, Cancel</button>\r\n//             <button className=\"cancel-btn\" onClick={() => setShowCancelDialog(false)}>No, Keep Editing</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./Newpost.css\";\r\n\r\nconst NewPost = ({ userEmail }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [link, setLink] = useState(\"\"); // New state for the link field\r\n  const [files, setFiles] = useState([]);\r\n  const [mediaPreviews, setMediaPreviews] = useState([]); // To preview uploaded media\r\n\r\n  const subCategoriesMap = {\r\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n\r\n    const previews = selectedFiles.map((file) => {\r\n      if (file.type.startsWith(\"image\")) {\r\n        return { type: \"image\", url: URL.createObjectURL(file) };\r\n      } else if (file.type === \"application/pdf\") {\r\n        return { type: \"pdf\", url: URL.createObjectURL(file) };\r\n      } else if (file.type.startsWith(\"video\")) {\r\n        return { type: \"video\", url: URL.createObjectURL(file) };\r\n      }\r\n      return null;\r\n    }).filter(Boolean);\r\n\r\n    setMediaPreviews((prevPreviews) => [...prevPreviews, ...previews]);\r\n  };\r\n\r\n  const handleFileRemove = (index) => {\r\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n    setMediaPreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setSubCategory(\"\");\r\n    setLink(\"\");\r\n    setFiles([]);\r\n    setMediaPreviews([]);\r\n  };\r\n\r\n  const handleSubmit = async (isDraft = false) => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill all the required fields!\");\r\n      return;\r\n    }\r\n\r\n    if (!userEmail) {\r\n      alert(\"Error: User email is missing!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n    formData.append(\"uploaderEmail\", userEmail);\r\n    formData.append(\"link\", link);\r\n\r\n    files.forEach((file) => formData.append(\"media\", file));\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n        resetForm();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error: ${error.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting post:\", error);\r\n      alert(\"Failed to submit post. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>New Post</h2>\r\n      <form>\r\n        {/* File Upload Section */}\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"fileInput\">\r\n            {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n          </label>\r\n          <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n        </div>\r\n\r\n        {/* Display Uploaded Files with Previews */}\r\n        <div className=\"uploaded-files\">\r\n          {mediaPreviews.map((media, index) => (\r\n            <div key={index} className=\"file-item\">\r\n              {media.type === \"image\" && <img src={media.url} alt=\"Preview\" width=\"100\" />}\r\n              {media.type === \"video\" && (\r\n                <video width=\"200\" controls>\r\n                  <source src={media.url} type=\"video/mp4\" />\r\n                  Your browser does not support the video tag.\r\n                </video>\r\n              )}\r\n              {media.type === \"pdf\" && (\r\n                <iframe src={media.url} title=\"PDF Preview\" width=\"100%\" height=\"200px\"></iframe>\r\n              )}\r\n              <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>\r\n                ‚ùå\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Text Fields */}\r\n        <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n\r\n        {/* Link Field */}\r\n        <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\r\n\r\n        {/* Category Selection */}\r\n        <select value={category} onChange={(e) => { setCategory(e.target.value); setSubCategory(\"\"); }} required>\r\n          <option value=\"\" disabled>Select a category</option>\r\n          <option value=\"events\">Events</option>\r\n          <option value=\"clubs\">Clubs</option>\r\n          <option value=\"academics\">Academics</option>\r\n          <option value=\"notices\">Notices</option>\r\n          <option value=\"skillhub\">Skillhub</option>\r\n          <option value=\"placements\">Placements</option>\r\n        </select>\r\n\r\n        {/* Subcategory Dropdown */}\r\n        {category && subCategoriesMap[category]?.length > 0 && (\r\n          <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n            <option value=\"\" disabled>Select a subcategory</option>\r\n            {subCategoriesMap[category].map((sub, index) => (\r\n              <option key={index} value={sub.toLowerCase()}>{sub}</option>\r\n            ))}\r\n          </select>\r\n        )}\r\n\r\n        {/* Buttons */}\r\n        <div className=\"button-container\">\r\n          <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\r\n          <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\r\n          <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}