{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Dashboardcontent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n// const location = useLocation();\n\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       console.log(\"Resetting filters...\");\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n\n//       // Clear the state to avoid repetitive resets\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         console.log(\"Fetching posts from:\", url); // Debugging log\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         console.log(\"Fetched posts:\", data); // Debugging log\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Enhanced Search Functionality (Search across all fields)\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   // Sorting Logic (Based on Created Date)\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\n//   });\n\n//   // Close Full-Screen on Escape Key\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   return (\n//     <div className=\"outer-box\">\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\n//       <div className=\"left-container\">\n//         {/* DASHBOARD SECTION */}\n//         <div className=\"dashboard-section\">\n//           <h1>Dashboard</h1>\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img\n//                       src={category.image}\n//                       alt={`${category.name} Icon`}\n//                       className=\"category-image\"\n//                     />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation(); // Prevent triggering category click\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* FEED SECTION */}\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <h2>Feed</h2>\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button\n//                 className=\"filter-button\"\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\n//               >\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           {/* Feed Grid */}\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel\n//                         showThumbs={false}\n//                         infiniteLoop\n//                         autoPlay\n//                         interval={5000}\n//                         showStatus={false}\n//                       >\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img\n//                                   src={media.url}\n//                                   alt={`${post.title} ${idx}`}\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\n//                                 />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video\n//                                 src={media.url}\n//                                 controls\n//                                 style={{ width: \"100%\", height: \"auto\" }}\n//                               />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p>{post.description}</p>\n//                     {post.link && (\n//                       <a\n//                         href={post.link}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         className=\"post-link\"\n//                       >\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* FULL-SCREEN IMAGE MODAL */}\n//       {fullscreenImage && (\n//         <div\n//           className=\"fullscreen-overlay\"\n//           onClick={() => setFullscreenImage(null)}\n//         >\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img\n//             src={fullscreenImage}\n//             alt=\"Full-Screen Preview\"\n//             className=\"fullscreen-image\"\n//           />\n//         </div>\n//       )}\n\n//       {/* ANALYTICS SECTION */}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img\n//           src=\"/images/powerbi-report.jpg\"\n//           alt=\"Power BI Analytics\"\n//           className=\"analytics-image\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({}); // To track expanded posts\n//   const location = useLocation();\n\n//   // Reset filters when navigating back\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       console.log(\"Resetting filters...\");\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\"; // Default URL\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         console.log(\"Fetching posts from:\", url);\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         console.log(\"Fetched posts:\", data);\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Filter and sort posts\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p\n//                       className={`post-description ${\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\n//                       }`}\n//                     >\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({});\n//   const location = useLocation();\n\n//   // Reset filters when navigating back\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\";\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Filter and sort posts\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p\n//                       className={`post-description ${\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\n//                       }`}\n//                     >\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({});\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\";\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img\n//                       src={category.image}\n//                       alt={`${category.name} Icon`}\n//                       className=\"category-image\"\n//                     />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={media.url}\n//                                   width=\"100%\"\n//                                   height=\"500px\"\n//                                   style={{ border: \"none\" }}\n//                                   title=\"PDF Preview\"\n//                                 >\n//                                   <p>Your browser does not support PDF preview. <a href={media.url}>Download PDF</a></p>\n//                                 </iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p\n//                       className={`post-description ${\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\n//                       }`}\n//                     >\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// // ... (Imports stay the same)\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({});\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\";\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, []);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img\n//                       src={category.image}\n//                       alt={`${category.name} Icon`}\n//                       className=\"category-image\"\n//                     />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button onClick={() => { setSortOrder(\"desc\"); setShowFilterOptions(false); }}>\n//                     Newest First\n//                   </button>\n//                   <button onClick={() => { setSortOrder(\"asc\"); setShowFilterOptions(false); }}>\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post) => (\n//                 <div className=\"feed-item\" key={post._id}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <img\n//                                 src={media.url}\n//                                 alt={`media-${idx}`}\n//                                 style={{ objectFit: \"cover\", width: \"100%\", cursor: \"pointer\" }}\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                               />\n//                             ) : media.type.startsWith(\"video/\") ? (\n//                               <video src={media.url} controls style={{ width: \"100%\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <iframe\n//                                 src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                 width=\"100%\"\n//                                 height=\"500px\"\n//                                 title=\"PDF Preview\"\n//                                 style={{ border: \"none\" }}\n//                               >\n//                                 <p>Your browser does not support iframes. <a href={media.url}>View PDF</a></p>\n//                               </iframe>\n//                             ) : (\n//                               <p>Unsupported media format</p>\n//                             )}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p className={`post-description ${expandedPosts[post._id] ? \"expanded\" : \"collapsed\"}`}>\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post._id)} className=\"read-more-button\">\n//                       {expandedPosts[post._id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\">×</span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Link } from \"react-router-dom\";\nimport \"./DashboardContent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContent = () => {\n  _s();\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [showMore, setShowMore] = useState({});\n  useEffect(() => {\n    document.body.classList.add(\"dashboard-page\");\n    return () => {\n      document.body.classList.remove(\"dashboard-page\");\n    };\n  }, []);\n  const categories = [{\n    name: \"Club\",\n    subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"],\n    image: \"/images/clubs-image.jpg\"\n  }, {\n    name: \"Academics\",\n    subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n    image: \"/images/academic excellence.jpg\"\n  }, {\n    name: \"Notices\",\n    subcategories: [],\n    image: \"/images/notice.jpg\"\n  }, {\n    name: \"Skill Hub\",\n    subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n    image: \"/images/skill-hub.jpg\"\n  }, {\n    name: \"Events\",\n    subcategories: [],\n    image: \"/images/events-icon.jpg\"\n  }, {\n    name: \"Placements\",\n    subcategories: [],\n    image: \"/images/placements.jpg\"\n  }];\n  const feedData = [{\n    category: \"Club\",\n    images: [\"/images/events2.jpg\", \"/images/sports1.jpg\"],\n    text: \"Explore the happenings in SVECW Clubs.\"\n  }, {\n    category: \"Academics\",\n    images: [\"/images/acad1.jpg\", \"/images/acad2.jpg\"],\n    text: \"Here are the Academic Calendar and Holidays list for the 2024 academic year.\"\n  }, {\n    category: \"Notices\",\n    images: [\"/images/notice1.jpg\"],\n    text: \"Check out the latest notices and announcements.\"\n  }, {\n    category: \"Skill Hub\",\n    images: [\"/images/train1.jpg\"],\n    text: \"Successfully completed training programs for Data Science.\"\n  }, {\n    category: \"Events\",\n    images: [\"/images/events3.jpg\"],\n    text: \"Stay updated with the upcoming and past events in SVECW.\"\n  }, {\n    category: \"Placements\",\n    images: [\"/images/placements-feed1.jpg\"],\n    text: \"Latest updates and success stories from campus placements.\"\n  }];\n  const toggleShowMore = index => {\n    setShowMore(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n  const handleCategoryHover = categoryName => {\n    setActiveCategory(categoryName);\n  };\n  const handleCategoryLeave = () => {\n    setActiveCategory(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1592,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"20px\",\n        marginBottom: \"20px\"\n      },\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-wrapper\",\n        onMouseEnter: () => handleCategoryHover(category.name),\n        onMouseLeave: handleCategoryLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: category.image,\n            alt: `${category.name} Icon`,\n            className: \"category-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1603,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-name\",\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1609,\n          columnNumber: 13\n        }, this), category.subcategories.length > 0 && activeCategory === category.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub-category-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: category.subcategories.map((subcategory, subIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"subcategory-item\",\n              children: subcategory === \"RMF\" ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/rmfpage\",\n                className: \"subcategory-link\",\n                children: \"RMF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1616,\n                columnNumber: 25\n              }, this) : subcategory\n            }, subIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1614,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1612,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1611,\n          columnNumber: 15\n        }, this)]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1594,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 9\n      }, this), feedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"30%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            showThumbs: false,\n            infiniteLoop: true,\n            autoPlay: true,\n            interval: 3000,\n            children: item.images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: `Slide ${index}-${imgIndex}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1639,\n                columnNumber: 21\n              }, this)\n            }, imgIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1638,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1636,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1635,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"70%\",\n            paddingLeft: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: showMore[index] || item.text.length <= 100 ? item.text : `${item.text.substring(0, 100)}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1645,\n            columnNumber: 15\n          }, this), item.text.length > 100 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"read-more-btn\",\n            onClick: () => toggleShowMore(index),\n            children: showMore[index] ? \"Read Less\" : \"Read More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1651,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1644,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1634,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1631,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1591,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardContent, \"b7hexnqNjdK2h5LIlJUhhC4eK5g=\");\n_c = DashboardContent;\nexport default DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["React","useEffect","useState","Carousel","Link","jsxDEV","_jsxDEV","DashboardContent","_s","activeCategory","setActiveCategory","showMore","setShowMore","document","body","classList","add","remove","categories","name","subcategories","image","feedData","category","images","text","toggleShowMore","index","prev","handleCategoryHover","categoryName","handleCategoryLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","marginBottom","map","className","onMouseEnter","onMouseLeave","src","alt","length","subcategory","subIndex","to","item","width","showThumbs","infiniteLoop","autoPlay","interval","imgIndex","paddingLeft","substring","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Dashboardcontent.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n// const location = useLocation();\r\n\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       console.log(\"Resetting filters...\");\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n\r\n//       // Clear the state to avoid repetitive resets\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         console.log(\"Fetching posts from:\", url); // Debugging log\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts:\", data); // Debugging log\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n\r\n//   // Enhanced Search Functionality (Search across all fields)\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   // Sorting Logic (Based on Created Date)\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\r\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\r\n//   });\r\n\r\n//   // Close Full-Screen on Escape Key\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\r\n//       <div className=\"left-container\">\r\n//         {/* DASHBOARD SECTION */}\r\n//         <div className=\"dashboard-section\">\r\n//           <h1>Dashboard</h1>\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img\r\n//                       src={category.image}\r\n//                       alt={`${category.name} Icon`}\r\n//                       className=\"category-image\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation(); // Prevent triggering category click\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* FEED SECTION */}\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <h2>Feed</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button\r\n//                 className=\"filter-button\"\r\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\r\n//               >\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Feed Grid */}\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel\r\n//                         showThumbs={false}\r\n//                         infiniteLoop\r\n//                         autoPlay\r\n//                         interval={5000}\r\n//                         showStatus={false}\r\n//                       >\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img\r\n//                                   src={media.url}\r\n//                                   alt={`${post.title} ${idx}`}\r\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\r\n//                                 />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video\r\n//                                 src={media.url}\r\n//                                 controls\r\n//                                 style={{ width: \"100%\", height: \"auto\" }}\r\n//                               />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p>{post.description}</p>\r\n//                     {post.link && (\r\n//                       <a\r\n//                         href={post.link}\r\n//                         target=\"_blank\"\r\n//                         rel=\"noopener noreferrer\"\r\n//                         className=\"post-link\"\r\n//                       >\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* FULL-SCREEN IMAGE MODAL */}\r\n//       {fullscreenImage && (\r\n//         <div\r\n//           className=\"fullscreen-overlay\"\r\n//           onClick={() => setFullscreenImage(null)}\r\n//         >\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img\r\n//             src={fullscreenImage}\r\n//             alt=\"Full-Screen Preview\"\r\n//             className=\"fullscreen-image\"\r\n//           />\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* ANALYTICS SECTION */}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img\r\n//           src=\"/images/powerbi-report.jpg\"\r\n//           alt=\"Power BI Analytics\"\r\n//           className=\"analytics-image\"\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({}); // To track expanded posts\r\n//   const location = useLocation();\r\n\r\n//   // Reset filters when navigating back\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       console.log(\"Resetting filters...\");\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\"; // Default URL\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         console.log(\"Fetching posts from:\", url);\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts:\", data);\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   // Filter and sort posts\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p\r\n//                       className={`post-description ${\r\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n//                       }`}\r\n//                     >\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({});\r\n//   const location = useLocation();\r\n\r\n//   // Reset filters when navigating back\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\";\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   // Filter and sort posts\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p\r\n//                       className={`post-description ${\r\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n//                       }`}\r\n//                     >\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({});\r\n//   const location = useLocation();\r\n\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\";\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img\r\n//                       src={category.image}\r\n//                       alt={`${category.name} Icon`}\r\n//                       className=\"category-image\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={media.url}\r\n//                                   width=\"100%\"\r\n//                                   height=\"500px\"\r\n//                                   style={{ border: \"none\" }}\r\n//                                   title=\"PDF Preview\"\r\n//                                 >\r\n//                                   <p>Your browser does not support PDF preview. <a href={media.url}>Download PDF</a></p>\r\n//                                 </iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p\r\n//                       className={`post-description ${\r\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n//                       }`}\r\n//                     >\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // ... (Imports stay the same)\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({});\r\n//   const location = useLocation();\r\n\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\";\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, []);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img\r\n//                       src={category.image}\r\n//                       alt={`${category.name} Icon`}\r\n//                       className=\"category-image\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button onClick={() => { setSortOrder(\"desc\"); setShowFilterOptions(false); }}>\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button onClick={() => { setSortOrder(\"asc\"); setShowFilterOptions(false); }}>\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post) => (\r\n//                 <div className=\"feed-item\" key={post._id}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <img\r\n//                                 src={media.url}\r\n//                                 alt={`media-${idx}`}\r\n//                                 style={{ objectFit: \"cover\", width: \"100%\", cursor: \"pointer\" }}\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                               />\r\n//                             ) : media.type.startsWith(\"video/\") ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <iframe\r\n//                                 src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                 width=\"100%\"\r\n//                                 height=\"500px\"\r\n//                                 title=\"PDF Preview\"\r\n//                                 style={{ border: \"none\" }}\r\n//                               >\r\n//                                 <p>Your browser does not support iframes. <a href={media.url}>View PDF</a></p>\r\n//                               </iframe>\r\n//                             ) : (\r\n//                               <p>Unsupported media format</p>\r\n//                             )}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p className={`post-description ${expandedPosts[post._id] ? \"expanded\" : \"collapsed\"}`}>\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post._id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post._id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\">×</span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DashboardContent.css\";\r\n\r\nconst DashboardContent = () => {\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const [showMore, setShowMore] = useState({});\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(\"dashboard-page\");\r\n    return () => {\r\n      document.body.classList.remove(\"dashboard-page\");\r\n    };\r\n  }, []);\r\n\r\n  const categories = [\r\n    {\r\n      name: \"Club\",\r\n      subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"],\r\n      image: \"/images/clubs-image.jpg\",\r\n    },\r\n    {\r\n      name: \"Academics\",\r\n      subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n      image: \"/images/academic excellence.jpg\",\r\n    },\r\n    {\r\n      name: \"Notices\",\r\n      subcategories: [],\r\n      image: \"/images/notice.jpg\",\r\n    },\r\n    {\r\n      name: \"Skill Hub\",\r\n      subcategories: [\"Hackathons\",\"Coding-Contests\",\"Training programmes\"],\r\n      image: \"/images/skill-hub.jpg\",\r\n    },\r\n    {\r\n      name: \"Events\",\r\n      subcategories: [],\r\n      image: \"/images/events-icon.jpg\",\r\n    },\r\n    {\r\n      name: \"Placements\",\r\n      subcategories: [],\r\n      image: \"/images/placements.jpg\",\r\n    },\r\n  ];\r\n\r\n  const feedData = [\r\n    {\r\n      category: \"Club\",\r\n      images: [\"/images/events2.jpg\",\"/images/sports1.jpg\"],\r\n      text: \"Explore the happenings in SVECW Clubs.\",\r\n    },\r\n    {\r\n      category: \"Academics\",\r\n      images: [\"/images/acad1.jpg\", \"/images/acad2.jpg\"],\r\n      text: \"Here are the Academic Calendar and Holidays list for the 2024 academic year.\",\r\n    },\r\n    {\r\n      category: \"Notices\",\r\n      images: [\"/images/notice1.jpg\"],\r\n      text: \"Check out the latest notices and announcements.\",\r\n    },\r\n    {\r\n      category: \"Skill Hub\",\r\n      images: [\"/images/train1.jpg\"],\r\n      text: \"Successfully completed training programs for Data Science.\",\r\n    },\r\n    {\r\n      category: \"Events\",\r\n      images: [\"/images/events3.jpg\"],\r\n      text: \"Stay updated with the upcoming and past events in SVECW.\",\r\n    },\r\n    {\r\n      category: \"Placements\",\r\n      images: [\"/images/placements-feed1.jpg\"],\r\n      text: \"Latest updates and success stories from campus placements.\",\r\n    },\r\n  ];\r\n\r\n  const toggleShowMore = (index) => {\r\n    setShowMore((prev) => ({ ...prev, [index]: !prev[index] }));\r\n  };\r\n\r\n  const handleCategoryHover = (categoryName) => {\r\n    setActiveCategory(categoryName);\r\n  };\r\n\r\n  const handleCategoryLeave = () => {\r\n    setActiveCategory(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n\r\n      <div style={{ display: \"flex\", gap: \"20px\", marginBottom: \"20px\" }}>\r\n        {categories.map((category) => (\r\n          <div\r\n            key={category.name}\r\n            className=\"category-wrapper\"\r\n            onMouseEnter={() => handleCategoryHover(category.name)}\r\n            onMouseLeave={handleCategoryLeave}\r\n          >\r\n            <div className=\"category-icon\">\r\n              <img\r\n                src={category.image}\r\n                alt={`${category.name} Icon`}\r\n                className=\"category-image\"\r\n              />\r\n            </div>\r\n            <div className=\"category-name\">{category.name}</div>\r\n            {category.subcategories.length > 0 && activeCategory === category.name && (\r\n              <div className=\"sub-category-container\">\r\n                <ul>\r\n                  {category.subcategories.map((subcategory, subIndex) => (\r\n                    <li key={subIndex} className=\"subcategory-item\">\r\n                      {subcategory === \"RMF\" ? (\r\n                        <Link to=\"/rmfpage\" className=\"subcategory-link\">\r\n                          RMF\r\n                        </Link>\r\n                      ) : (\r\n                        subcategory\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"feed-section\">\r\n        <h2>Feed</h2>\r\n        {feedData.map((item, index) => (\r\n          <div className=\"feed-item\" key={index}>\r\n            <div style={{ width: \"30%\" }}>\r\n              <Carousel showThumbs={false} infiniteLoop autoPlay interval={3000}>\r\n                {item.images.map((image, imgIndex) => (\r\n                  <div key={imgIndex}>\r\n                    <img src={image} alt={`Slide ${index}-${imgIndex}`} />\r\n                  </div>\r\n                ))}\r\n              </Carousel>\r\n            </div>\r\n            <div style={{ width: \"70%\", paddingLeft: \"10px\" }}>\r\n              <p>\r\n                {showMore[index] || item.text.length <= 100\r\n                  ? item.text\r\n                  : `${item.text.substring(0, 100)}...`}\r\n              </p>\r\n              {item.text.length > 100 && (\r\n                <button\r\n                  className=\"read-more-btn\"\r\n                  onClick={() => toggleShowMore(index)}\r\n                >\r\n                  {showMore[index] ? \"Read Less\" : \"Read More\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAO,uDAAuD;AAC9D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7C,OAAO,MAAM;MACXH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,gBAAgB,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAG,CACjB;IACEC,IAAI,EAAE,MAAM;IACZC,aAAa,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,mBAAmB,EAAE,MAAM,EAAE,YAAY,CAAC;IAC/EC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,WAAW;IACjBC,aAAa,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC;IACzEC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,SAAS;IACfC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,WAAW;IACjBC,aAAa,EAAE,CAAC,YAAY,EAAC,iBAAiB,EAAC,qBAAqB,CAAC;IACrEC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,YAAY;IAClBC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE;EACT,CAAC,CACF;EAED,MAAMC,QAAQ,GAAG,CACf;IACEC,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,CAAC,qBAAqB,EAAC,qBAAqB,CAAC;IACrDC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,QAAQ,EAAE,WAAW;IACrBC,MAAM,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;IAClDC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,QAAQ,EAAE,SAAS;IACnBC,MAAM,EAAE,CAAC,qBAAqB,CAAC;IAC/BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,QAAQ,EAAE,WAAW;IACrBC,MAAM,EAAE,CAAC,oBAAoB,CAAC;IAC9BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE,CAAC,qBAAqB,CAAC;IAC/BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAE,CAAC,8BAA8B,CAAC;IACxCC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChCf,WAAW,CAAEgB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,KAAK,GAAG,CAACC,IAAI,CAACD,KAAK;IAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAME,mBAAmB,GAAIC,YAAY,IAAK;IAC5CpB,iBAAiB,CAACoB,YAAY,CAAC;EACjC,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCrB,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACEJ,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElB9B,OAAA;MAAK+B,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAR,QAAA,EAChEd,UAAU,CAACuB,GAAG,CAAElB,QAAQ,iBACvBjB,OAAA;QAEEoC,SAAS,EAAC,kBAAkB;QAC5BC,YAAY,EAAEA,CAAA,KAAMd,mBAAmB,CAACN,QAAQ,CAACJ,IAAI,CAAE;QACvDyB,YAAY,EAAEb,mBAAoB;QAAAC,QAAA,gBAElC1B,OAAA;UAAKoC,SAAS,EAAC,eAAe;UAAAV,QAAA,eAC5B1B,OAAA;YACEuC,GAAG,EAAEtB,QAAQ,CAACF,KAAM;YACpByB,GAAG,EAAE,GAAGvB,QAAQ,CAACJ,IAAI,OAAQ;YAC7BuB,SAAS,EAAC;UAAgB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN9B,OAAA;UAAKoC,SAAS,EAAC,eAAe;UAAAV,QAAA,EAAET,QAAQ,CAACJ;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACnDb,QAAQ,CAACH,aAAa,CAAC2B,MAAM,GAAG,CAAC,IAAItC,cAAc,KAAKc,QAAQ,CAACJ,IAAI,iBACpEb,OAAA;UAAKoC,SAAS,EAAC,wBAAwB;UAAAV,QAAA,eACrC1B,OAAA;YAAA0B,QAAA,EACGT,QAAQ,CAACH,aAAa,CAACqB,GAAG,CAAC,CAACO,WAAW,EAAEC,QAAQ,kBAChD3C,OAAA;cAAmBoC,SAAS,EAAC,kBAAkB;cAAAV,QAAA,EAC5CgB,WAAW,KAAK,KAAK,gBACpB1C,OAAA,CAACF,IAAI;gBAAC8C,EAAE,EAAC,UAAU;gBAACR,SAAS,EAAC,kBAAkB;gBAAAV,QAAA,EAAC;cAEjD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,GAEPY;YACD,GAPMC,QAAQ;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQb,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN;MAAA,GA7BIb,QAAQ,CAACJ,IAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8Bf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN9B,OAAA;MAAKoC,SAAS,EAAC,cAAc;MAAAV,QAAA,gBAC3B1B,OAAA;QAAA0B,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACZd,QAAQ,CAACmB,GAAG,CAAC,CAACU,IAAI,EAAExB,KAAK,kBACxBrB,OAAA;QAAKoC,SAAS,EAAC,WAAW;QAAAV,QAAA,gBACxB1B,OAAA;UAAK+B,KAAK,EAAE;YAAEe,KAAK,EAAE;UAAM,CAAE;UAAApB,QAAA,eAC3B1B,OAAA,CAACH,QAAQ;YAACkD,UAAU,EAAE,KAAM;YAACC,YAAY;YAACC,QAAQ;YAACC,QAAQ,EAAE,IAAK;YAAAxB,QAAA,EAC/DmB,IAAI,CAAC3B,MAAM,CAACiB,GAAG,CAAC,CAACpB,KAAK,EAAEoC,QAAQ,kBAC/BnD,OAAA;cAAA0B,QAAA,eACE1B,OAAA;gBAAKuC,GAAG,EAAExB,KAAM;gBAACyB,GAAG,EAAE,SAASnB,KAAK,IAAI8B,QAAQ;cAAG;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GAD9CqB,QAAQ;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACN9B,OAAA;UAAK+B,KAAK,EAAE;YAAEe,KAAK,EAAE,KAAK;YAAEM,WAAW,EAAE;UAAO,CAAE;UAAA1B,QAAA,gBAChD1B,OAAA;YAAA0B,QAAA,EACGrB,QAAQ,CAACgB,KAAK,CAAC,IAAIwB,IAAI,CAAC1B,IAAI,CAACsB,MAAM,IAAI,GAAG,GACvCI,IAAI,CAAC1B,IAAI,GACT,GAAG0B,IAAI,CAAC1B,IAAI,CAACkC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;UAAK;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,EACHe,IAAI,CAAC1B,IAAI,CAACsB,MAAM,GAAG,GAAG,iBACrBzC,OAAA;YACEoC,SAAS,EAAC,eAAe;YACzBkB,OAAO,EAAEA,CAAA,KAAMlC,cAAc,CAACC,KAAK,CAAE;YAAAK,QAAA,EAEpCrB,QAAQ,CAACgB,KAAK,CAAC,GAAG,WAAW,GAAG;UAAW;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GAxBwBT,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyBhC,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnKID,gBAAgB;AAAAsD,EAAA,GAAhBtD,gBAAgB;AAqKtB,eAAeA,gBAAgB;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}