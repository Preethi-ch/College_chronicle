{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Postspage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./Postspage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        console.log(\"Fetching posts...\");\n        const response = await fetch(\"http://localhost:3000/fetch/\"); // Adjust API URL if needed\n        const data = await response.json();\n        console.log(\"Fetched posts:\", data);\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recent Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-grid\",\n      children: posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sorting by latest posts\n      .map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-item\",\n        children: [post.media && post.media.length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n          showThumbs: false,\n          infiniteLoop: true,\n          autoPlay: true,\n          interval: 3000,\n          showStatus: false,\n          children: post.media.map((media, idx) => media.url && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: media.url,\n              alt: `${post.title} ${idx}`,\n              className: \"feed-image-item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-post-button\",\n      onClick: () => navigate(\"/Newpost\"),\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsPage, \"qQ3YxOpq8nIvxfa6GYj5Pc4Bf3I=\", false, function () {\n  return [useNavigate];\n});\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Carousel","jsxDEV","_jsxDEV","PostsPage","_s","navigate","posts","setPosts","fetchPosts","console","log","response","fetch","data","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","Date","createdAt","map","post","index","media","length","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","url","src","alt","title","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Postspage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./Postspage.css\";\r\n\r\nconst PostsPage = () => {\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        console.log(\"Fetching posts...\");\r\n        const response = await fetch(\"http://localhost:3000/fetch/\"); // Adjust API URL if needed\r\n        const data = await response.json();\r\n        console.log(\"Fetched posts:\", data);\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      <h1>Recent Posts</h1>\r\n\r\n      {/* Posts List */}\r\n      <div className=\"feed-grid\">\r\n        {posts\r\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sorting by latest posts\r\n          .map((post, index) => (\r\n            <div key={index} className=\"feed-item\">\r\n              {/* Carousel for multiple media */}\r\n              {post.media && post.media.length > 0 && (\r\n                <Carousel\r\n                  showThumbs={false}\r\n                  infiniteLoop\r\n                  autoPlay\r\n                  interval={3000}\r\n                  showStatus={false}\r\n                >\r\n                  {post.media.map((media, idx) => (\r\n                    media.url && (\r\n                      <div key={idx}>\r\n                        <img src={media.url} alt={`${post.title} ${idx}`} className=\"feed-image-item\" />\r\n                      </div>\r\n                    )\r\n                  ))}\r\n                </Carousel>\r\n              )}\r\n              \r\n              <div className=\"feed-content\">\r\n                <h3>{post.title}</h3>\r\n                <p>{post.description}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* Button to Add a New Post */}\r\n      <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\r\n        New Post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}