{"ast":null,"code":"// import React, { useEffect, useState, useRef } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axiosInstance from \"./api/axiosfetch\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DraftsPage.css\";\n\n// const Draftspage = ({ userEmail }) => {\n//   const [drafts, setDrafts] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const navigate = useNavigate();\n//   const filterRef = useRef(null);\n\n//   useEffect(() => {\n//     const email = userEmail || localStorage.getItem(\"userEmail\");\n\n//     if (!email) {\n//       console.log(\"No email found in props or localStorage.\");\n//       return;\n//     }\n\n//     const fetchDrafts = async () => {\n//       try {\n//         const response = await axiosInstance.get(`/draftsview/${encodeURIComponent(email)}`);\n//         setDrafts(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching drafts:\", error);\n//       }\n//     };\n\n//     fetchDrafts();\n//   }, [userEmail]);\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, []);\n\n//   useEffect(() => {\n//     const handleClickOutside = (event) => {\n//       if (filterRef.current && !filterRef.current.contains(event.target)) {\n//         setShowFilterOptions(false);\n//       }\n//     };\n//     document.addEventListener(\"mousedown\", handleClickOutside);\n//     return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n//   }, []);\n\n//   const handleDelete = async (draftId) => {\n//     try {\n//       if (!window.confirm(\"Are you sure you want to delete this draft?\")) return;\n//       await axiosInstance.delete(`/draftsview/${draftId}`);\n//       alert(\"Draft deleted successfully\");\n//       setDrafts(drafts.filter((draft) => draft._id !== draftId));\n//     } catch (error) {\n//       console.error(\"Error deleting draft:\", error);\n//       alert(\"Failed to delete draft.\");\n//     }\n//   };\n\n//   const handleView = (draft) => {\n//     navigate(`/newpost?draftId=${draft._id}`, { state: { draft } });\n//   };\n\n//   const filteredDrafts = drafts.filter((draft) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return (\n//       draft.title?.toLowerCase().includes(searchString) ||\n//       draft.description?.toLowerCase().includes(searchString) ||\n//       draft.link?.toLowerCase().includes(searchString)\n//     );\n//   });\n\n//   const sortedDrafts = filteredDrafts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   return (\n//     <div className=\"draftspage-container\">\n//       {/* Search and Filter */}\n//       <div className=\"draftspage-feed-header\">\n//         <input\n//           type=\"text\"\n//           className=\"draftspage-search-bar\"\n//           placeholder=\"Search drafts...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         {searchTerm && (\n//           <button className=\"draftspage-clear-search\" onClick={() => setSearchTerm(\"\")}>\n//             ×\n//           </button>\n//         )}\n//         <div className=\"draftspage-filter-container\" ref={filterRef}>\n//           <button className=\"draftspage-filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//             Filter ⌵\n//           </button>\n//           {showFilterOptions && (\n//             <div className=\"draftspage-filter-dropdown\">\n//               <button onClick={() => { setSortOrder(\"desc\"); setShowFilterOptions(false); }}>\n//                 Newest First\n//               </button>\n//               <button onClick={() => { setSortOrder(\"asc\"); setShowFilterOptions(false); }}>\n//                 Oldest First\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Drafts Section */}\n//       <div className=\"draftspage-feed-section\">\n//         <div className=\"draftspage-feed-grid\">\n//           {sortedDrafts.length === 0 ? (\n//             <p>No drafts available.</p>\n//           ) : (\n//             sortedDrafts.map((draft) => (\n//               <div className=\"draftspage-feed-item\" key={draft._id}>\n//                 <div className=\"draftspage-feed-image\">\n//                   {draft.media.length > 0 && (\n//                     <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                       {draft.media.map((media, idx) => (\n//                         <div key={idx} className=\"carousel-item-postpage\">\n//                           {media.type.startsWith(\"image/\") ? (\n//                             <div onClick={() => setFullscreenImage(media.url)} style={{ cursor: \"pointer\" }}>\n//                               <img\n//                                 src={media.url}\n//                                 alt={`${draft.title} ${idx}`}\n//                                 style={{ objectFit: \"cover\", width: \"100%\" }}\n//                               />\n//                             </div>\n//                           ) : media.type === \"application/pdf\" ? (\n//                             <iframe\n//                               src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                               width=\"100%\"\n//                               height=\"500px\"\n//                               style={{ border: \"none\" }}\n//                               title={`PDF Preview - ${draft.title} ${idx}`}\n//                             ></iframe>\n//                           ) : media.type === \"video/mp4\" ? (\n//                             <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                           ) : null}\n//                         </div>\n//                       ))}\n//                     </Carousel>\n//                   )}\n//                 </div>\n//                 <div className=\"draftspage-feed-content\">\n//                   <h3>{draft.title}</h3>\n//                   <p>{draft.description}</p>\n//                   {draft.link && <a href={draft.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"draftspage-draft-link\">{draft.link}</a>}\n//                 </div>\n//                 <div className=\"draftspage-draft-buttons\">\n//                   <button className=\"view-button\" onClick={() => handleView(draft)}>View/Edit</button>\n//                   <button className=\"delete-button\" onClick={() => handleDelete(draft._id)}>Delete</button>\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n\n//       {/* FULLSCREEN IMAGE OVERLAY */}\n//       {fullscreenImage && (\n//         <div\n//           className=\"fullscreen-overlay-draftspage\"\n//           onClick={() => setFullscreenImage(null)}\n//         >\n//           <span\n//             className=\"close-button-draftspage\"\n//             onClick={() => setFullscreenImage(null)}\n//           >\n//             ×\n//           </span>\n//           <img\n//             src={fullscreenImage}\n//             alt=\"Full-Screen Preview\"\n//             className=\"fullscreen-image-draftspage\"\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Draftspage;","map":{"version":3,"names":[],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/DraftsPage.js"],"sourcesContent":["// import React, { useEffect, useState, useRef } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axiosInstance from \"./api/axiosfetch\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DraftsPage.css\";\r\n\r\n// const Draftspage = ({ userEmail }) => {\r\n//   const [drafts, setDrafts] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const navigate = useNavigate();\r\n//   const filterRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const email = userEmail || localStorage.getItem(\"userEmail\");\r\n\r\n//     if (!email) {\r\n//       console.log(\"No email found in props or localStorage.\");\r\n//       return;\r\n//     }\r\n\r\n//     const fetchDrafts = async () => {\r\n//       try {\r\n//         const response = await axiosInstance.get(`/draftsview/${encodeURIComponent(email)}`);\r\n//         setDrafts(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching drafts:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchDrafts();\r\n//   }, [userEmail]);\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const handleClickOutside = (event) => {\r\n//       if (filterRef.current && !filterRef.current.contains(event.target)) {\r\n//         setShowFilterOptions(false);\r\n//       }\r\n//     };\r\n//     document.addEventListener(\"mousedown\", handleClickOutside);\r\n//     return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n//   }, []);\r\n\r\n//   const handleDelete = async (draftId) => {\r\n//     try {\r\n//       if (!window.confirm(\"Are you sure you want to delete this draft?\")) return;\r\n//       await axiosInstance.delete(`/draftsview/${draftId}`);\r\n//       alert(\"Draft deleted successfully\");\r\n//       setDrafts(drafts.filter((draft) => draft._id !== draftId));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting draft:\", error);\r\n//       alert(\"Failed to delete draft.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleView = (draft) => {\r\n//     navigate(`/newpost?draftId=${draft._id}`, { state: { draft } });\r\n//   };\r\n\r\n//   const filteredDrafts = drafts.filter((draft) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return (\r\n//       draft.title?.toLowerCase().includes(searchString) ||\r\n//       draft.description?.toLowerCase().includes(searchString) ||\r\n//       draft.link?.toLowerCase().includes(searchString)\r\n//     );\r\n//   });\r\n\r\n//   const sortedDrafts = filteredDrafts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   return (\r\n//     <div className=\"draftspage-container\">\r\n//       {/* Search and Filter */}\r\n//       <div className=\"draftspage-feed-header\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"draftspage-search-bar\"\r\n//           placeholder=\"Search drafts...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         {searchTerm && (\r\n//           <button className=\"draftspage-clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//             ×\r\n//           </button>\r\n//         )}\r\n//         <div className=\"draftspage-filter-container\" ref={filterRef}>\r\n//           <button className=\"draftspage-filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//             Filter ⌵\r\n//           </button>\r\n//           {showFilterOptions && (\r\n//             <div className=\"draftspage-filter-dropdown\">\r\n//               <button onClick={() => { setSortOrder(\"desc\"); setShowFilterOptions(false); }}>\r\n//                 Newest First\r\n//               </button>\r\n//               <button onClick={() => { setSortOrder(\"asc\"); setShowFilterOptions(false); }}>\r\n//                 Oldest First\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Drafts Section */}\r\n//       <div className=\"draftspage-feed-section\">\r\n//         <div className=\"draftspage-feed-grid\">\r\n//           {sortedDrafts.length === 0 ? (\r\n//             <p>No drafts available.</p>\r\n//           ) : (\r\n//             sortedDrafts.map((draft) => (\r\n//               <div className=\"draftspage-feed-item\" key={draft._id}>\r\n//                 <div className=\"draftspage-feed-image\">\r\n//                   {draft.media.length > 0 && (\r\n//                     <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                       {draft.media.map((media, idx) => (\r\n//                         <div key={idx} className=\"carousel-item-postpage\">\r\n//                           {media.type.startsWith(\"image/\") ? (\r\n//                             <div onClick={() => setFullscreenImage(media.url)} style={{ cursor: \"pointer\" }}>\r\n//                               <img\r\n//                                 src={media.url}\r\n//                                 alt={`${draft.title} ${idx}`}\r\n//                                 style={{ objectFit: \"cover\", width: \"100%\" }}\r\n//                               />\r\n//                             </div>\r\n//                           ) : media.type === \"application/pdf\" ? (\r\n//                             <iframe\r\n//                               src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                               width=\"100%\"\r\n//                               height=\"500px\"\r\n//                               style={{ border: \"none\" }}\r\n//                               title={`PDF Preview - ${draft.title} ${idx}`}\r\n//                             ></iframe>\r\n//                           ) : media.type === \"video/mp4\" ? (\r\n//                             <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                           ) : null}\r\n//                         </div>\r\n//                       ))}\r\n//                     </Carousel>\r\n//                   )}\r\n//                 </div>\r\n//                 <div className=\"draftspage-feed-content\">\r\n//                   <h3>{draft.title}</h3>\r\n//                   <p>{draft.description}</p>\r\n//                   {draft.link && <a href={draft.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"draftspage-draft-link\">{draft.link}</a>}\r\n//                 </div>\r\n//                 <div className=\"draftspage-draft-buttons\">\r\n//                   <button className=\"view-button\" onClick={() => handleView(draft)}>View/Edit</button>\r\n//                   <button className=\"delete-button\" onClick={() => handleDelete(draft._id)}>Delete</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* FULLSCREEN IMAGE OVERLAY */}\r\n//       {fullscreenImage && (\r\n//         <div\r\n//           className=\"fullscreen-overlay-draftspage\"\r\n//           onClick={() => setFullscreenImage(null)}\r\n//         >\r\n//           <span\r\n//             className=\"close-button-draftspage\"\r\n//             onClick={() => setFullscreenImage(null)}\r\n//           >\r\n//             ×\r\n//           </span>\r\n//           <img\r\n//             src={fullscreenImage}\r\n//             alt=\"Full-Screen Preview\"\r\n//             className=\"fullscreen-image-draftspage\"\r\n//           />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Draftspage;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}