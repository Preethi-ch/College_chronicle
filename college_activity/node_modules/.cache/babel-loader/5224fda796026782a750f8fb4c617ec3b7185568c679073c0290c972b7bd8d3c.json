{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Postspage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axiosInstance from \"./api/axiosfetch\";\n// import \"./Postspage.css\";\n\n// const Postspage = ({ userEmail }) => {\n//   const [posts, setPosts] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     let email = userEmail || localStorage.getItem(\"userEmail\");\n\n//     if (!email) {\n//       return;\n//     }\n\n//     const fetchPosts = async () => {\n//       try {\n\n//         const url = `/postview/${encodeURIComponent(email)}`;\n\n//         const response = await axiosInstance.get(url);\n\n//         setPosts(response.data);\n//       } catch (error) {\n\n//       }\n//     };\n\n//     fetchPosts();\n//   }, [userEmail]);\n\n//   return (\n//     <div className=\"posts-container\">\n//       <h1>User Posts</h1>\n\n//       {/* New Post Button */}\n//       <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\n//          New Post\n//       </button>\n\n//       <div className=\"feed-section\">\n//         <h2>Feed</h2>\n//         <div className=\"feed-grid\">\n//           {posts.length === 0 ? (\n//             <p>No posts available.</p>\n//           ) : (\n//             posts\n//               .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\n//               .map((post) => (\n//                 <div key={post._id} className=\"feed-item\">\n//                   {post.media.length > 0 && (\n//                     <img\n//                       className=\"feed-image-item\"\n//                       src={post.media[0].url}\n//                       alt={post.title}\n//                     />\n//                   )}\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p>{post.description}</p>\n//                   </div>\n//                 </div>\n//               ))\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Postspage;\n\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axiosInstance from \"./api/axiosfetch\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./Postspage.css\";\n\n// const Postspage = ({ userEmail }) => {\n//   const [posts, setPosts] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     let email = userEmail || localStorage.getItem(\"userEmail\");\n\n//     if (!email) {\n//       return;\n//     }\n\n//     const fetchPosts = async () => {\n//       try {\n//         const url = `/postview/${encodeURIComponent(email)}`;\n//         const response = await axiosInstance.get(url);\n//         setPosts(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n\n//     fetchPosts();\n//   }, [userEmail]);\n\n//   return (\n//     <div className=\"posts-container\">\n//       <h1>User Posts</h1>\n\n//       {/* New Post Button */}\n//       <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\n//         New Post\n//       </button>\n\n//       {/* Feed Section */}\n//       <div className=\"feed-section\">\n//         <h2>Feed</h2>\n//         <div className=\"feed-grid\">\n//           {posts.length === 0 ? (\n//             <p>No posts available.</p>\n//           ) : (\n//             posts\n//               .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\n//               .map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media.length > 0 && post.media[0].url && (\n//                       <Carousel\n//                         showThumbs={false}\n//                         infiniteLoop={true}\n//                         autoPlay={true}\n//                         interval={5000} // Adjusted interval to slow down autoplay\n//                         showStatus={false}\n//                       >\n//                         {post.media.map((media, idx) => {\n//                           if (\n//                             media.type === \"image/jpeg\" ||\n//                             media.type === \"image/png\" ||\n//                             media.type === \"image/gif\"\n//                           ) {\n//                             return (\n//                               <div key={idx}>\n//                                 <img\n//                                   src={media.url}\n//                                   alt={`${post.title} ${idx}`}\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\n//                                 />\n//                               </div>\n//                             );\n//                           } else if (media.type === \"application/pdf\") {\n//                             return (\n//                               <div key={idx} className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                   width=\"100%\"\n//                                   height=\"500px\"\n//                                   style={{ border: \"none\" }}\n//                                 ></iframe>\n//                               </div>\n//                             );\n//                           } else if (media.type === \"video/mp4\") {\n//                             return (\n//                               <div key={idx} className=\"video-container\">\n//                                 <video\n//                                   src={media.url}\n//                                   controls\n//                                   style={{ width: \"100%\", height: \"auto\" }}\n//                                 />\n//                               </div>\n//                             );\n//                           }\n//                           return null;\n//                         })}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p>{post.description}</p>\n//                     {post.link && (\n//                       <a\n//                         href={post.link}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         className=\"post-link\"\n//                       >\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Postspage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"./api/axiosfetch\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./Postspage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Postspage = ({\n  userEmail\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const email = userEmail || localStorage.getItem(\"userEmail\");\n    if (!email) {\n      return;\n    }\n    const fetchPosts = async () => {\n      try {\n        const url = `/postview/${encodeURIComponent(email)}`;\n        const response = await axiosInstance.get(url);\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [userEmail]);\n  const handleDelete = async postId => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this post?\");\n    if (!confirmDelete) return;\n    try {\n      const response = await axiosInstance.delete(`/postview/${postId}`);\n      if (response.status === 200) {\n        alert(\"Post deleted successfully!\");\n        setPosts(posts.filter(post => post._id !== postId)); // Remove from state\n      } else {\n        alert(\"Failed to delete post. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      alert(\"An error occurred while deleting the post.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-post-button\",\n      onClick: () => navigate(\"/Newpost\"),\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-grid\",\n        children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this) : posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\n        .map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feed-image\",\n            children: post.media.length > 0 && post.media[0].url && /*#__PURE__*/_jsxDEV(Carousel, {\n              showThumbs: false,\n              infiniteLoop: true,\n              autoPlay: true,\n              interval: 5000,\n              showStatus: false,\n              children: post.media.map((media, idx) => {\n                if (media.type === \"image/jpeg\" || media.type === \"image/png\" || media.type === \"image/gif\") {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: media.url,\n                      alt: `${post.title} ${idx}`,\n                      style: {\n                        objectFit: \"cover\",\n                        width: \"100%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 33\n                    }, this)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 31\n                  }, this);\n                } else if (media.type === \"application/pdf\") {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pdf-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                      src: `https://docs.google.com/gview?url=${media.url}&embedded=true`,\n                      title: \"PDF Viewer\",\n                      width: \"100%\",\n                      height: \"500px\",\n                      style: {\n                        border: \"none\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 33\n                    }, this)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 31\n                  }, this);\n                } else if (media.type === \"video/mp4\") {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"video-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"video\", {\n                      src: media.url,\n                      controls: true,\n                      style: {\n                        width: \"100%\",\n                        height: \"auto\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 33\n                    }, this)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 31\n                  }, this);\n                }\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feed-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this), post.link && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"post-link\",\n              children: post.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-post-button\",\n            onClick: () => handleDelete(post._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(Postspage, \"wlX5Q2vHIOaliHXiQZ2fNKb4Q3U=\", false, function () {\n  return [useNavigate];\n});\n_c = Postspage;\nexport default Postspage;\nvar _c;\n$RefreshReg$(_c, \"Postspage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","Carousel","jsxDEV","_jsxDEV","Postspage","userEmail","_s","posts","setPosts","navigate","email","localStorage","getItem","fetchPosts","url","encodeURIComponent","response","get","data","error","console","handleDelete","postId","confirmDelete","window","confirm","delete","status","alert","filter","post","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","sort","a","b","Date","createdAt","map","index","media","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","type","src","alt","title","style","objectFit","width","height","border","controls","description","link","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Postspage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axiosInstance from \"./api/axiosfetch\";\r\n// import \"./Postspage.css\";\r\n\r\n// const Postspage = ({ userEmail }) => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     let email = userEmail || localStorage.getItem(\"userEmail\");\r\n\r\n\r\n//     if (!email) {\r\n//       return;\r\n//     }\r\n\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n        \r\n//         const url = `/postview/${encodeURIComponent(email)}`;\r\n        \r\n    \r\n//         const response = await axiosInstance.get(url);\r\n       \r\n//         setPosts(response.data);\r\n//       } catch (error) {\r\n       \r\n//       }\r\n//     };\r\n\r\n//     fetchPosts();\r\n//   }, [userEmail]);\r\n\r\n//   return (\r\n//     <div className=\"posts-container\">\r\n//       <h1>User Posts</h1>\r\n\r\n//       {/* New Post Button */}\r\n//       <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\r\n//          New Post\r\n//       </button>\r\n\r\n//       <div className=\"feed-section\">\r\n//         <h2>Feed</h2>\r\n//         <div className=\"feed-grid\">\r\n//           {posts.length === 0 ? (\r\n//             <p>No posts available.</p>\r\n//           ) : (\r\n//             posts\r\n//               .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\r\n//               .map((post) => (\r\n//                 <div key={post._id} className=\"feed-item\">\r\n//                   {post.media.length > 0 && (\r\n//                     <img\r\n//                       className=\"feed-image-item\"\r\n//                       src={post.media[0].url}\r\n//                       alt={post.title}\r\n//                     />\r\n//                   )}\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p>{post.description}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Postspage;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axiosInstance from \"./api/axiosfetch\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./Postspage.css\";\r\n\r\n// const Postspage = ({ userEmail }) => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     let email = userEmail || localStorage.getItem(\"userEmail\");\r\n\r\n//     if (!email) {\r\n//       return;\r\n//     }\r\n\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         const url = `/postview/${encodeURIComponent(email)}`;\r\n//         const response = await axiosInstance.get(url);\r\n//         setPosts(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchPosts();\r\n//   }, [userEmail]);\r\n\r\n//   return (\r\n//     <div className=\"posts-container\">\r\n//       <h1>User Posts</h1>\r\n\r\n//       {/* New Post Button */}\r\n//       <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\r\n//         New Post\r\n//       </button>\r\n\r\n//       {/* Feed Section */}\r\n//       <div className=\"feed-section\">\r\n//         <h2>Feed</h2>\r\n//         <div className=\"feed-grid\">\r\n//           {posts.length === 0 ? (\r\n//             <p>No posts available.</p>\r\n//           ) : (\r\n//             posts\r\n//               .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\r\n//               .map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media.length > 0 && post.media[0].url && (\r\n//                       <Carousel\r\n//                         showThumbs={false}\r\n//                         infiniteLoop={true}\r\n//                         autoPlay={true}\r\n//                         interval={5000} // Adjusted interval to slow down autoplay\r\n//                         showStatus={false}\r\n//                       >\r\n//                         {post.media.map((media, idx) => {\r\n//                           if (\r\n//                             media.type === \"image/jpeg\" ||\r\n//                             media.type === \"image/png\" ||\r\n//                             media.type === \"image/gif\"\r\n//                           ) {\r\n//                             return (\r\n//                               <div key={idx}>\r\n//                                 <img\r\n//                                   src={media.url}\r\n//                                   alt={`${post.title} ${idx}`}\r\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\r\n//                                 />\r\n//                               </div>\r\n//                             );\r\n//                           } else if (media.type === \"application/pdf\") {\r\n//                             return (\r\n//                               <div key={idx} className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                   width=\"100%\"\r\n//                                   height=\"500px\"\r\n//                                   style={{ border: \"none\" }}\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             );\r\n//                           } else if (media.type === \"video/mp4\") {\r\n//                             return (\r\n//                               <div key={idx} className=\"video-container\">\r\n//                                 <video\r\n//                                   src={media.url}\r\n//                                   controls\r\n//                                   style={{ width: \"100%\", height: \"auto\" }}\r\n//                                 />\r\n//                               </div>\r\n//                             );\r\n//                           }\r\n//                           return null;\r\n//                         })}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p>{post.description}</p>\r\n//                     {post.link && (\r\n//                       <a\r\n//                         href={post.link}\r\n//                         target=\"_blank\"\r\n//                         rel=\"noopener noreferrer\"\r\n//                         className=\"post-link\"\r\n//                       >\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Postspage;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"./api/axiosfetch\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./Postspage.css\";\r\n\r\nconst Postspage = ({ userEmail }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const email = userEmail || localStorage.getItem(\"userEmail\");\r\n\r\n    if (!email) {\r\n      return;\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const url = `/postview/${encodeURIComponent(email)}`;\r\n        const response = await axiosInstance.get(url);\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [userEmail]);\r\n\r\n  const handleDelete = async (postId) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this post?\");\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      const response = await axiosInstance.delete(`/postview/${postId}`);\r\n      if (response.status === 200) {\r\n        alert(\"Post deleted successfully!\");\r\n        setPosts(posts.filter((post) => post._id !== postId)); // Remove from state\r\n      } else {\r\n        alert(\"Failed to delete post. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error);\r\n      alert(\"An error occurred while deleting the post.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1>User Posts</h1>\r\n\r\n      {/* New Post Button */}\r\n      <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\r\n        New Post\r\n      </button>\r\n\r\n      {/* Feed Section */}\r\n      <div className=\"feed-section\">\r\n        <h2>Feed</h2>\r\n        <div className=\"feed-grid\">\r\n          {posts.length === 0 ? (\r\n            <p>No posts available.</p>\r\n          ) : (\r\n            posts\r\n              .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\r\n              .map((post, index) => (\r\n                <div className=\"feed-item\" key={index}>\r\n                  <div className=\"feed-image\">\r\n                    {post.media.length > 0 && post.media[0].url && (\r\n                      <Carousel\r\n                        showThumbs={false}\r\n                        infiniteLoop={true}\r\n                        autoPlay={true}\r\n                        interval={5000}\r\n                        showStatus={false}\r\n                      >\r\n                        {post.media.map((media, idx) => {\r\n                          if (\r\n                            media.type === \"image/jpeg\" ||\r\n                            media.type === \"image/png\" ||\r\n                            media.type === \"image/gif\"\r\n                          ) {\r\n                            return (\r\n                              <div key={idx}>\r\n                                <img\r\n                                  src={media.url}\r\n                                  alt={`${post.title} ${idx}`}\r\n                                  style={{ objectFit: \"cover\", width: \"100%\" }}\r\n                                />\r\n                              </div>\r\n                            );\r\n                          } else if (media.type === \"application/pdf\") {\r\n                            return (\r\n                              <div key={idx} className=\"pdf-container\">\r\n                                <iframe\r\n                                  src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n                                  title=\"PDF Viewer\"\r\n                                  width=\"100%\"\r\n                                  height=\"500px\"\r\n                                  style={{ border: \"none\" }}\r\n                                ></iframe>\r\n                              </div>\r\n                            );\r\n                          } else if (media.type === \"video/mp4\") {\r\n                            return (\r\n                              <div key={idx} className=\"video-container\">\r\n                                <video\r\n                                  src={media.url}\r\n                                  controls\r\n                                  style={{ width: \"100%\", height: \"auto\" }}\r\n                                />\r\n                              </div>\r\n                            );\r\n                          }\r\n                          return null;\r\n                        })}\r\n                      </Carousel>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"feed-content\">\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.description}</p>\r\n                    {post.link && (\r\n                      <a\r\n                        href={post.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"post-link\"\r\n                      >\r\n                        {post.link}\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    className=\"delete-post-button\"\r\n                    onClick={() => handleDelete(post._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postspage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAO,uDAAuD;AAC9D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}