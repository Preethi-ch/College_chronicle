{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Dashboardcontent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n// const location = useLocation();\n\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       console.log(\"Resetting filters...\");\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n\n//       // Clear the state to avoid repetitive resets\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         console.log(\"Fetching posts from:\", url); // Debugging log\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         console.log(\"Fetched posts:\", data); // Debugging log\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Enhanced Search Functionality (Search across all fields)\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   // Sorting Logic (Based on Created Date)\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\n//   });\n\n//   // Close Full-Screen on Escape Key\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   return (\n//     <div className=\"outer-box\">\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\n//       <div className=\"left-container\">\n//         {/* DASHBOARD SECTION */}\n//         <div className=\"dashboard-section\">\n//           <h1>Dashboard</h1>\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img\n//                       src={category.image}\n//                       alt={`${category.name} Icon`}\n//                       className=\"category-image\"\n//                     />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation(); // Prevent triggering category click\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* FEED SECTION */}\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <h2>Feed</h2>\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button\n//                 className=\"filter-button\"\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\n//               >\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           {/* Feed Grid */}\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel\n//                         showThumbs={false}\n//                         infiniteLoop\n//                         autoPlay\n//                         interval={5000}\n//                         showStatus={false}\n//                       >\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img\n//                                   src={media.url}\n//                                   alt={`${post.title} ${idx}`}\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\n//                                 />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video\n//                                 src={media.url}\n//                                 controls\n//                                 style={{ width: \"100%\", height: \"auto\" }}\n//                               />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p>{post.description}</p>\n//                     {post.link && (\n//                       <a\n//                         href={post.link}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         className=\"post-link\"\n//                       >\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* FULL-SCREEN IMAGE MODAL */}\n//       {fullscreenImage && (\n//         <div\n//           className=\"fullscreen-overlay\"\n//           onClick={() => setFullscreenImage(null)}\n//         >\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img\n//             src={fullscreenImage}\n//             alt=\"Full-Screen Preview\"\n//             className=\"fullscreen-image\"\n//           />\n//         </div>\n//       )}\n\n//       {/* ANALYTICS SECTION */}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img\n//           src=\"/images/powerbi-report.jpg\"\n//           alt=\"Power BI Analytics\"\n//           className=\"analytics-image\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({}); // To track expanded posts\n//   const location = useLocation();\n\n//   // Reset filters when navigating back\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       console.log(\"Resetting filters...\");\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\"; // Default URL\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         console.log(\"Fetching posts from:\", url);\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         console.log(\"Fetched posts:\", data);\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Filter and sort posts\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p\n//                       className={`post-description ${\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\n//                       }`}\n//                     >\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./DashboardContent.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContent = () => {\n  _s();\n  var _location$state2;\n  const [posts, setPosts] = useState([]);\n  const [sortOrder, setSortOrder] = useState(\"desc\");\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [fullscreenImage, setFullscreenImage] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  const [expandedPosts, setExpandedPosts] = useState({});\n  const location = useLocation();\n\n  // Reset filters when navigating back\n  useEffect(() => {\n    var _location$state;\n    if (location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.resetFilters) {\n      setSelectedCategory(null);\n      setSelectedSubcategory(null);\n      setSearchTerm(\"\");\n      window.history.replaceState({}, document.title);\n    }\n  }, [location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.resetFilters]);\n\n  // Fetch posts based on selected filters\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let url = \"http://localhost:3000/fetch/\";\n        if (selectedCategory || selectedSubcategory) {\n          const params = new URLSearchParams();\n          if (selectedCategory) params.append(\"category\", selectedCategory);\n          if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n          url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n        }\n        const response = await fetch(url);\n        const data = await response.json();\n        setPosts(data.data || []);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [selectedCategory, selectedSubcategory]);\n\n  // Filter and sort posts\n  const filteredPosts = posts.filter(post => {\n    const searchString = searchTerm.toLowerCase();\n    return Object.values(post).some(value => {\n      if (typeof value === \"string\") {\n        return value.toLowerCase().includes(searchString);\n      } else if (Array.isArray(value)) {\n        return value.some(item => typeof item === \"string\" && item.toLowerCase().includes(searchString));\n      }\n      return false;\n    });\n  });\n  const sortedPosts = filteredPosts.sort((a, b) => {\n    return sortOrder === \"desc\" ? new Date(b.createdAt) - new Date(a.createdAt) : new Date(a.createdAt) - new Date(b.createdAt);\n  });\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === \"Escape\") {\n        setFullscreenImage(null);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [fullscreenImage]);\n  const categories = [{\n    name: \"Club\",\n    subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n    image: \"/images/clubs-image.jpg\"\n  }, {\n    name: \"Academics\",\n    subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n    image: \"/images/academic-excellence.jpg\"\n  }, {\n    name: \"Notices\",\n    subcategories: [],\n    image: \"/images/notice.jpg\"\n  }, {\n    name: \"Skillhub\",\n    subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n    image: \"/images/skill-hub.jpg\"\n  }, {\n    name: \"Events\",\n    subcategories: [],\n    image: \"/images/events-icon.jpg\"\n  }, {\n    name: \"Placements\",\n    subcategories: [],\n    image: \"/images/placements.jpg\"\n  }];\n  const toggleExpandPost = postId => {\n    setExpandedPosts(prev => ({\n      ...prev,\n      [postId]: !prev[postId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-container\",\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-wrapper\",\n              onMouseEnter: () => setActiveCategory(category.name),\n              onMouseLeave: () => setActiveCategory(null),\n              onClick: () => {\n                if (category.subcategories.length === 0) {\n                  setSelectedCategory(category.name);\n                  setSelectedSubcategory(null);\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: category.image,\n                  alt: `${category.name} Icon`,\n                  className: \"category-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-name\",\n                children: category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 19\n              }, this), category.subcategories.length > 0 && activeCategory === category.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-category-container\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: category.subcategories.map((subcategory, subIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"subcategory-item\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      setSelectedCategory(category.name);\n                      setSelectedSubcategory(subcategory);\n                    },\n                    children: subcategory\n                  }, subIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 769,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 23\n              }, this)]\n            }, category.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-bar\",\n            placeholder: \"Search posts...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search\",\n            onClick: () => setSearchTerm(\"\"),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: () => setShowFilterOptions(!showFilterOptions),\n              children: \"Filter \\u2335\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 15\n            }, this), showFilterOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSortOrder(\"desc\");\n                  setShowFilterOptions(false);\n                },\n                children: \"Newest First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSortOrder(\"asc\");\n                  setShowFilterOptions(false);\n                },\n                children: \"Oldest First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-grid\",\n          children: sortedPosts.length > 0 ? sortedPosts.map((post, index) => {\n            var _post$media, _post$media$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feed-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed-image\",\n                children: ((_post$media = post.media) === null || _post$media === void 0 ? void 0 : _post$media.length) > 0 && ((_post$media$ = post.media[0]) === null || _post$media$ === void 0 ? void 0 : _post$media$.url) && /*#__PURE__*/_jsxDEV(Carousel, {\n                  showThumbs: false,\n                  infiniteLoop: true,\n                  autoPlay: true,\n                  interval: 5000,\n                  showStatus: false,\n                  children: post.media.map((media, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"carousel-item\",\n                    children: media.type.startsWith(\"image/\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => setFullscreenImage(media.url),\n                      style: {\n                        cursor: \"pointer\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: media.url,\n                        alt: `${post.title} ${idx}`,\n                        style: {\n                          objectFit: \"cover\",\n                          width: \"100%\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 843,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 839,\n                      columnNumber: 31\n                    }, this) : media.type === \"video/mp4\" ? /*#__PURE__*/_jsxDEV(\"video\", {\n                      src: media.url,\n                      controls: true,\n                      style: {\n                        width: \"100%\",\n                        height: \"auto\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 31\n                    }, this) : media.type === \"application/pdf\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pdf-container\",\n                      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                        src: `https://docs.google.com/gview?url=${media.url}&embedded=true`,\n                        title: \"PDF Viewer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 849,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 848,\n                      columnNumber: 31\n                    }, this) : null\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 835,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `post-description ${expandedPosts[post.id] ? \"expanded\" : \"collapsed\"}`,\n                  children: post.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleExpandPost(post.id),\n                  className: \"read-more-button\",\n                  children: expandedPosts[post.id] ? \"Read Less\" : \"Read More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 21\n                }, this), post.link && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: post.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"post-link\",\n                  children: post.link\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No posts available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this), fullscreenImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen-overlay\",\n      onClick: () => setFullscreenImage(null),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-button\",\n        onClick: () => setFullscreenImage(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fullscreenImage,\n        alt: \"Full-Screen Preview\",\n        className: \"fullscreen-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/powerbi-report.jpg\",\n        alt: \"Power BI Analytics\",\n        className: \"analytics-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 742,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardContent, \"578BccDpO2G2NLd1K6y7uZalMII=\", false, function () {\n  return [useLocation];\n});\n_c = DashboardContent;\nexport default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({});\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\";\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img\n//                       src={category.image}\n//                       alt={`${category.name} Icon`}\n//                       className=\"category-image\"\n//                     />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={media.url}\n//                                   width=\"100%\"\n//                                   height=\"500px\"\n//                                   style={{ border: \"none\" }}\n//                                   title=\"PDF Preview\"\n//                                 >\n//                                   <p>Your browser does not support PDF preview. <a href={media.url}>Download PDF</a></p>\n//                                 </iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p\n//                       className={`post-description ${\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\n//                       }`}\n//                     >\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["React","useEffect","useState","Carousel","useLocation","jsxDEV","_jsxDEV","DashboardContent","_s","_location$state2","posts","setPosts","sortOrder","setSortOrder","activeCategory","setActiveCategory","showFilterOptions","setShowFilterOptions","searchTerm","setSearchTerm","fullscreenImage","setFullscreenImage","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","expandedPosts","setExpandedPosts","location","_location$state","state","resetFilters","window","history","replaceState","document","title","fetchPosts","url","params","URLSearchParams","append","toString","response","fetch","data","json","error","console","filteredPosts","filter","post","searchString","toLowerCase","Object","values","some","value","includes","Array","isArray","item","sortedPosts","sort","a","b","Date","createdAt","handleKeyDown","event","key","addEventListener","removeEventListener","categories","name","subcategories","image","toggleExpandPost","postId","prev","className","children","map","category","onMouseEnter","onMouseLeave","onClick","length","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","subcategory","subIndex","e","stopPropagation","type","placeholder","onChange","target","index","_post$media","_post$media$","media","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","startsWith","style","cursor","objectFit","width","controls","height","id","description","link","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Dashboardcontent.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n// const location = useLocation();\r\n\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       console.log(\"Resetting filters...\");\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n\r\n//       // Clear the state to avoid repetitive resets\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         console.log(\"Fetching posts from:\", url); // Debugging log\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts:\", data); // Debugging log\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n\r\n//   // Enhanced Search Functionality (Search across all fields)\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   // Sorting Logic (Based on Created Date)\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\r\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\r\n//   });\r\n\r\n//   // Close Full-Screen on Escape Key\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\r\n//       <div className=\"left-container\">\r\n//         {/* DASHBOARD SECTION */}\r\n//         <div className=\"dashboard-section\">\r\n//           <h1>Dashboard</h1>\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img\r\n//                       src={category.image}\r\n//                       alt={`${category.name} Icon`}\r\n//                       className=\"category-image\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation(); // Prevent triggering category click\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* FEED SECTION */}\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <h2>Feed</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button\r\n//                 className=\"filter-button\"\r\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\r\n//               >\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Feed Grid */}\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel\r\n//                         showThumbs={false}\r\n//                         infiniteLoop\r\n//                         autoPlay\r\n//                         interval={5000}\r\n//                         showStatus={false}\r\n//                       >\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img\r\n//                                   src={media.url}\r\n//                                   alt={`${post.title} ${idx}`}\r\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\r\n//                                 />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video\r\n//                                 src={media.url}\r\n//                                 controls\r\n//                                 style={{ width: \"100%\", height: \"auto\" }}\r\n//                               />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p>{post.description}</p>\r\n//                     {post.link && (\r\n//                       <a\r\n//                         href={post.link}\r\n//                         target=\"_blank\"\r\n//                         rel=\"noopener noreferrer\"\r\n//                         className=\"post-link\"\r\n//                       >\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* FULL-SCREEN IMAGE MODAL */}\r\n//       {fullscreenImage && (\r\n//         <div\r\n//           className=\"fullscreen-overlay\"\r\n//           onClick={() => setFullscreenImage(null)}\r\n//         >\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img\r\n//             src={fullscreenImage}\r\n//             alt=\"Full-Screen Preview\"\r\n//             className=\"fullscreen-image\"\r\n//           />\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* ANALYTICS SECTION */}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img\r\n//           src=\"/images/powerbi-report.jpg\"\r\n//           alt=\"Power BI Analytics\"\r\n//           className=\"analytics-image\"\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({}); // To track expanded posts\r\n//   const location = useLocation();\r\n\r\n//   // Reset filters when navigating back\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       console.log(\"Resetting filters...\");\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\"; // Default URL\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         console.log(\"Fetching posts from:\", url);\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts:\", data);\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   // Filter and sort posts\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p\r\n//                       className={`post-description ${\r\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n//                       }`}\r\n//                     >\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./DashboardContent.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst DashboardContent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [sortOrder, setSortOrder] = useState(\"desc\");\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [fullscreenImage, setFullscreenImage] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n  const [expandedPosts, setExpandedPosts] = useState({});\r\n  const location = useLocation();\r\n\r\n  // Reset filters when navigating back\r\n  useEffect(() => {\r\n    if (location?.state?.resetFilters) {\r\n      setSelectedCategory(null);\r\n      setSelectedSubcategory(null);\r\n      setSearchTerm(\"\");\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n  }, [location?.state?.resetFilters]);\r\n\r\n  // Fetch posts based on selected filters\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        let url = \"http://localhost:3000/fetch/\";\r\n        if (selectedCategory || selectedSubcategory) {\r\n          const params = new URLSearchParams();\r\n          if (selectedCategory) params.append(\"category\", selectedCategory);\r\n          if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n          url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n        }\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setPosts(data.data || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [selectedCategory, selectedSubcategory]);\r\n\r\n  // Filter and sort posts\r\n  const filteredPosts = posts.filter((post) => {\r\n    const searchString = searchTerm.toLowerCase();\r\n    return Object.values(post).some((value) => {\r\n      if (typeof value === \"string\") {\r\n        return value.toLowerCase().includes(searchString);\r\n      } else if (Array.isArray(value)) {\r\n        return value.some(\r\n          (item) =>\r\n            typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n  });\r\n\r\n  const sortedPosts = filteredPosts.sort((a, b) => {\r\n    return sortOrder === \"desc\"\r\n      ? new Date(b.createdAt) - new Date(a.createdAt)\r\n      : new Date(a.createdAt) - new Date(b.createdAt);\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === \"Escape\") {\r\n        setFullscreenImage(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [fullscreenImage]);\r\n\r\n  const categories = [\r\n    {\r\n      name: \"Club\",\r\n      subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n      image: \"/images/clubs-image.jpg\",\r\n    },\r\n    {\r\n      name: \"Academics\",\r\n      subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n      image: \"/images/academic-excellence.jpg\",\r\n    },\r\n    {\r\n      name: \"Notices\",\r\n      subcategories: [],\r\n      image: \"/images/notice.jpg\",\r\n    },\r\n    {\r\n      name: \"Skillhub\",\r\n      subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n      image: \"/images/skill-hub.jpg\",\r\n    },\r\n    {\r\n      name: \"Events\",\r\n      subcategories: [],\r\n      image: \"/images/events-icon.jpg\",\r\n    },\r\n    {\r\n      name: \"Placements\",\r\n      subcategories: [],\r\n      image: \"/images/placements.jpg\",\r\n    },\r\n  ];\r\n\r\n  const toggleExpandPost = (postId) => {\r\n    setExpandedPosts((prev) => ({\r\n      ...prev,\r\n      [postId]: !prev[postId],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"outer-box\">\r\n      <div className=\"left-container\">\r\n        <div className=\"dashboard-section\">\r\n          <div className=\"dashboard-content\">\r\n            <div className=\"category-container\">\r\n              {categories.map((category) => (\r\n                <div\r\n                  key={category.name}\r\n                  className=\"category-wrapper\"\r\n                  onMouseEnter={() => setActiveCategory(category.name)}\r\n                  onMouseLeave={() => setActiveCategory(null)}\r\n                  onClick={() => {\r\n                    if (category.subcategories.length === 0) {\r\n                      setSelectedCategory(category.name);\r\n                      setSelectedSubcategory(null);\r\n                    }\r\n                  }}\r\n                >\r\n                  <div className=\"category-icon\">\r\n                    <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n                  </div>\r\n                  <div className=\"category-name\">{category.name}</div>\r\n                  {category.subcategories.length > 0 &&\r\n                    activeCategory === category.name && (\r\n                      <div className=\"sub-category-container\">\r\n                        <ul>\r\n                          {category.subcategories.map((subcategory, subIndex) => (\r\n                            <li\r\n                              key={subIndex}\r\n                              className=\"subcategory-item\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                setSelectedCategory(category.name);\r\n                                setSelectedSubcategory(subcategory);\r\n                              }}\r\n                            >\r\n                              {subcategory}\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"feed-section\">\r\n          <div className=\"feed-header\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search posts...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            {searchTerm && (\r\n              <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n                ×\r\n              </button>\r\n            )}\r\n            <div className=\"filter-container\">\r\n              <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n                Filter ⌵\r\n              </button>\r\n              {showFilterOptions && (\r\n                <div className=\"filter-dropdown\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setSortOrder(\"desc\");\r\n                      setShowFilterOptions(false);\r\n                    }}\r\n                  >\r\n                    Newest First\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      setSortOrder(\"asc\");\r\n                      setShowFilterOptions(false);\r\n                    }}\r\n                  >\r\n                    Oldest First\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"feed-grid\">\r\n            {sortedPosts.length > 0 ? (\r\n              sortedPosts.map((post, index) => (\r\n                <div className=\"feed-item\" key={index}>\r\n                  <div className=\"feed-image\">\r\n                    {post.media?.length > 0 && post.media[0]?.url && (\r\n                      <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n                        {post.media.map((media, idx) => (\r\n                          <div key={idx} className=\"carousel-item\">\r\n                            {media.type.startsWith(\"image/\") ? (\r\n                              <div\r\n                                onClick={() => setFullscreenImage(media.url)}\r\n                                style={{ cursor: \"pointer\" }}\r\n                              >\r\n                                <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n                              </div>\r\n                            ) : media.type === \"video/mp4\" ? (\r\n                              <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n                            ) : media.type === \"application/pdf\" ? (\r\n                              <div className=\"pdf-container\">\r\n                                <iframe\r\n                                  src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n                                  title=\"PDF Viewer\"\r\n                                ></iframe>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ))}\r\n                      </Carousel>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"feed-content\">\r\n                    <h3>{post.title}</h3>\r\n                    <p\r\n                      className={`post-description ${\r\n                        expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n                      }`}\r\n                    >\r\n                      {post.description}\r\n                    </p>\r\n                    <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n                      {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n                    </button>\r\n                    {post.link && (\r\n                      <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n                        {post.link}\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No posts available</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {fullscreenImage && (\r\n        <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n          <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n            ×\r\n          </span>\r\n          <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n        </div>\r\n      )}\r\n      <div className=\"analytics-container\">\r\n        <h2>Analytics</h2>\r\n        <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({});\r\n//   const location = useLocation();\r\n\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\";\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img\r\n//                       src={category.image}\r\n//                       alt={`${category.name} Icon`}\r\n//                       className=\"category-image\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={media.url}\r\n//                                   width=\"100%\"\r\n//                                   height=\"500px\"\r\n//                                   style={{ border: \"none\" }}\r\n//                                   title=\"PDF Preview\"\r\n//                                 >\r\n//                                   <p>Your browser does not support PDF preview. <a href={media.url}>Download PDF</a></p>\r\n//                                 </iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p\r\n//                       className={`post-description ${\r\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n//                       }`}\r\n//                     >\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAO,uDAAuD;AAC9D,OAAO,wBAAwB;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACoB,gBAAgB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}