{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./Newpost.css\";\n\n// const NewPost = ({ userEmail }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [link, setLink] = useState(\"\"); // State for link field\n//   const [files, setFiles] = useState([]);\n//   const [filePreviews, setFilePreviews] = useState([]);\n\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n\n//     const previews = selectedFiles.map((file) => ({\n//       name: file.name,\n//       url: URL.createObjectURL(file),\n//     }));\n\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\n//   };\n\n//   const handleFileRemove = (index) => {\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\n//   };\n\n//   const resetForm = () => {\n//     setTitle(\"\");\n//     setDescription(\"\");\n//     setCategory(\"\");\n//     setSubCategory(\"\");\n//     setLink(\"\");\n//     setFiles([]);\n//     setFilePreviews([]);\n//   };\n\n//   const handleSubmit = async (isDraft = false) => {\n//     if (!title || !description || !category) {\n//       alert(\"Please fill all the required fields!\");\n//       return;\n//     }\n\n//     if (!userEmail) {\n//       alert(\"Error: User email is missing!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n//     formData.append(\"uploaderEmail\", userEmail);\n//     formData.append(\"link\", link);\n\n//     // Append media only if files are selected\n//     if (files.length > 0) {\n//       files.forEach((file) => {\n//         formData.append(\"media\", file);\n//       });\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (response.ok) {\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n//         resetForm();\n//       } else {\n//         const error = await response.json();\n//         alert( `Error: ${error.error}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting post:\", error);\n//       alert(\"Failed to submit post. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File Upload Section */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\n//           </label>\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\n//         </div>\n\n//         {/* Display Uploaded Files (Show File Names) */}\n//         <div className=\"uploaded-files\">\n//           {filePreviews.map((file, index) => (\n//             <div key={index} className=\"file-item\">\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Text Fields */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         {/* Link Field */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter link (if any)\"\n//           value={link}\n//           onChange={(e) => setLink(e.target.value)}\n//         />\n\n//         {/* Category Selection */}\n//         <select\n//           value={category}\n//           onChange={(e) => {\n//             setCategory(e.target.value);\n//             setSubCategory(\"\");\n//           }}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           <option value=\"events\">Events</option>\n//           <option value=\"clubs\">Clubs</option>\n//           <option value=\"academics\">Academics</option>\n//           <option value=\"notices\">Notices</option>\n//           <option value=\"skillhub\">Skillhub</option>\n//           <option value=\"placements\">Placements</option>\n//         </select>\n\n//         {/* Subcategory Dropdown */}\n//         {category && subCategoriesMap[category]?.length > 0 && (\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\n//             <option value=\"\" disabled>\n//               Select a subcategory\n//             </option>\n//             {subCategoriesMap[category].map((sub, index) => (\n//               <option key={index} value={sub.toLowerCase()}>\n//                 {sub}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\n//             Submit Post\n//           </button>\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\n//             Save as Draft\n//           </button>\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\n//             Cancel\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"./api/axiosfetch\"; // Ensure API calls use axios\nimport \"./Newpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = ({\n  userEmail\n}) => {\n  _s();\n  var _subCategoriesMap$cat;\n  const [draftId, setDraftId] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [existingMedia, setExistingMedia] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const subCategoriesMap = {\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"]\n  };\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const draftIdFromParams = queryParams.get(\"draftId\");\n    if (draftIdFromParams) {\n      setDraftId(draftIdFromParams);\n      fetchDraftData(draftIdFromParams);\n    }\n  }, [location.search]);\n  const fetchDraftData = async id => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(`/draftsview/edit/${id}`);\n      setTitle(response.data.title);\n      setDescription(response.data.description);\n      setCategory(response.data.category);\n      setSubCategory(response.data.subCategory || \"\");\n      setLink(response.data.link || \"\");\n      setExistingMedia(response.data.media || []);\n    } catch (error) {\n      console.error(\"Error fetching draft:\", error);\n      alert(\"Could not load draft. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetForm = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setLink(\"\");\n    setExistingMedia([]);\n    setDraftId(null);\n    navigate(\"/drafts\");\n  };\n  const handleSubmit = async (isDraft = false) => {\n    if (!title || !description || !category) {\n      alert(\"Please fill all required fields!\");\n      return;\n    }\n    if (!userEmail) {\n      alert(\"Error: User email is missing!\");\n      return;\n    }\n    const postData = {\n      title,\n      description,\n      category,\n      subCategory,\n      status: isDraft ? \"draft\" : \"posted\",\n      uploaderEmail: userEmail,\n      link\n    };\n    try {\n      setLoading(true);\n      const url = draftId ? `/draftsview/update/${draftId}` : \"/posts/create-post\";\n      const response = await axiosInstance({\n        method: draftId ? \"PUT\" : \"POST\",\n        url,\n        data: postData\n      });\n      alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n      resetForm();\n    } catch (error) {\n      console.error(\"Error submitting post:\", error);\n      alert(\"Submission failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancel = async () => {\n    if (!draftId) {\n      resetForm();\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to delete this draft?\")) return;\n    try {\n      setLoading(true);\n      await axiosInstance.delete(`/draftsview/${draftId}`);\n      alert(\"Draft deleted successfully!\");\n      resetForm();\n    } catch (error) {\n      console.error(\"Error deleting draft:\", error);\n      alert(\"Failed to delete draft.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: draftId ? \"Edit Draft\" : \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter link (if any)\",\n        value: link,\n        onChange: e => setLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => {\n          setCategory(e.target.value);\n          setSubCategory(\"\");\n        },\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), Object.keys(subCategoriesMap).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 55\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), category && ((_subCategoriesMap$cat = subCategoriesMap[category]) === null || _subCategoriesMap$cat === void 0 ? void 0 : _subCategoriesMap$cat.length) > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: subCategory,\n        onChange: e => setSubCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), subCategoriesMap[category].map((sub, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sub.toLowerCase(),\n          children: sub\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 61\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), existingMedia.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Existing Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), existingMedia.map((media, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-preview\",\n          children: media.type.startsWith(\"image/\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: media.url,\n            alt: \"Media\",\n            style: {\n              width: \"100px\",\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this) : media.type === \"video/mp4\" ? /*#__PURE__*/_jsxDEV(\"video\", {\n            src: media.url,\n            controls: true,\n            width: \"200px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 19\n          }, this) : null\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(false),\n          disabled: loading,\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(true),\n          disabled: loading,\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: handleCancel,\n          disabled: loading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"PmVqwpQyBI+utSSyBFBLsZpFpiU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axiosInstance","jsxDEV","_jsxDEV","NewPost","userEmail","_s","_subCategoriesMap$cat","draftId","setDraftId","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","link","setLink","existingMedia","setExistingMedia","loading","setLoading","location","navigate","subCategoriesMap","clubs","academics","skillhub","queryParams","URLSearchParams","search","draftIdFromParams","get","fetchDraftData","id","response","data","media","error","console","alert","resetForm","handleSubmit","isDraft","postData","status","uploaderEmail","url","method","handleCancel","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","disabled","Object","keys","map","key","length","sub","index","toLowerCase","idx","startsWith","src","alt","style","width","height","controls","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Newpost.css\";\r\n\r\n\r\n// const NewPost = ({ userEmail }) => {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [link, setLink] = useState(\"\"); // State for link field\r\n//   const [files, setFiles] = useState([]);\r\n//   const [filePreviews, setFilePreviews] = useState([]);\r\n\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n\r\n//     const previews = selectedFiles.map((file) => ({\r\n//       name: file.name,\r\n//       url: URL.createObjectURL(file),\r\n//     }));\r\n\r\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\r\n//   };\r\n\r\n//   const handleFileRemove = (index) => {\r\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setTitle(\"\");\r\n//     setDescription(\"\");\r\n//     setCategory(\"\");\r\n//     setSubCategory(\"\");\r\n//     setLink(\"\");\r\n//     setFiles([]);\r\n//     setFilePreviews([]);\r\n//   };\r\n\r\n//   const handleSubmit = async (isDraft = false) => {\r\n//     if (!title || !description || !category) {\r\n//       alert(\"Please fill all the required fields!\");\r\n//       return;\r\n//     }\r\n  \r\n//     if (!userEmail) {\r\n//       alert(\"Error: User email is missing!\");\r\n//       return;\r\n//     }\r\n  \r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n//     formData.append(\"uploaderEmail\", userEmail);\r\n//     formData.append(\"link\", link);\r\n  \r\n//     // Append media only if files are selected\r\n//     if (files.length > 0) {\r\n//       files.forEach((file) => {\r\n//         formData.append(\"media\", file);\r\n//       });\r\n//     }\r\n  \r\n//     try {\r\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n  \r\n//       if (response.ok) {\r\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n//         resetForm();\r\n//       } else {\r\n//         const error = await response.json();\r\n//         alert( `Error: ${error.error}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting post:\", error);\r\n//       alert(\"Failed to submit post. Please try again later.\");\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File Upload Section */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n//         </div>\r\n\r\n//         {/* Display Uploaded Files (Show File Names) */}\r\n//         <div className=\"uploaded-files\">\r\n//           {filePreviews.map((file, index) => (\r\n//             <div key={index} className=\"file-item\">\r\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\r\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Text Fields */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         {/* Link Field */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter link (if any)\"\r\n//           value={link}\r\n//           onChange={(e) => setLink(e.target.value)}\r\n//         />\r\n\r\n//         {/* Category Selection */}\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => {\r\n//             setCategory(e.target.value);\r\n//             setSubCategory(\"\");\r\n//           }}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>\r\n//             Select a category\r\n//           </option>\r\n//           <option value=\"events\">Events</option>\r\n//           <option value=\"clubs\">Clubs</option>\r\n//           <option value=\"academics\">Academics</option>\r\n//           <option value=\"notices\">Notices</option>\r\n//           <option value=\"skillhub\">Skillhub</option>\r\n//           <option value=\"placements\">Placements</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Dropdown */}\r\n//         {category && subCategoriesMap[category]?.length > 0 && (\r\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n//             <option value=\"\" disabled>\r\n//               Select a subcategory\r\n//             </option>\r\n//             {subCategoriesMap[category].map((sub, index) => (\r\n//               <option key={index} value={sub.toLowerCase()}>\r\n//                 {sub}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         )}\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\r\n//             Submit Post\r\n//           </button>\r\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\r\n//             Save as Draft\r\n//           </button>\r\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\r\n//             Cancel\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"./api/axiosfetch\"; // Ensure API calls use axios\r\nimport \"./Newpost.css\";\r\n\r\nconst NewPost = ({ userEmail }) => {\r\n  const [draftId, setDraftId] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [existingMedia, setExistingMedia] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const subCategoriesMap = {\r\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const draftIdFromParams = queryParams.get(\"draftId\");\r\n\r\n    if (draftIdFromParams) {\r\n      setDraftId(draftIdFromParams);\r\n      fetchDraftData(draftIdFromParams);\r\n    }\r\n  }, [location.search]);\r\n\r\n  const fetchDraftData = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axiosInstance.get(`/draftsview/edit/${id}`);\r\n      setTitle(response.data.title);\r\n      setDescription(response.data.description);\r\n      setCategory(response.data.category);\r\n      setSubCategory(response.data.subCategory || \"\");\r\n      setLink(response.data.link || \"\");\r\n      setExistingMedia(response.data.media || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching draft:\", error);\r\n      alert(\"Could not load draft. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setSubCategory(\"\");\r\n    setLink(\"\");\r\n    setExistingMedia([]);\r\n    setDraftId(null);\r\n    navigate(\"/drafts\");\r\n  };\r\n\r\n  const handleSubmit = async (isDraft = false) => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n\r\n    if (!userEmail) {\r\n      alert(\"Error: User email is missing!\");\r\n      return;\r\n    }\r\n\r\n    const postData = {\r\n      title,\r\n      description,\r\n      category,\r\n      subCategory,\r\n      status: isDraft ? \"draft\" : \"posted\",\r\n      uploaderEmail: userEmail,\r\n      link,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const url = draftId\r\n        ? `/draftsview/update/${draftId}`\r\n        : \"/posts/create-post\";\r\n\r\n      const response = await axiosInstance({\r\n        method: draftId ? \"PUT\" : \"POST\",\r\n        url,\r\n        data: postData,\r\n      });\r\n\r\n      alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error submitting post:\", error);\r\n      alert(\"Submission failed. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = async () => {\r\n    if (!draftId) {\r\n      resetForm();\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(\"Are you sure you want to delete this draft?\")) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      await axiosInstance.delete(`/draftsview/${draftId}`);\r\n      alert(\"Draft deleted successfully!\");\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error deleting draft:\", error);\r\n      alert(\"Failed to delete draft.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{draftId ? \"Edit Draft\" : \"New Post\"}</h2>\r\n      {loading && <p>Loading...</p>}\r\n      <form>\r\n        <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n        <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\r\n\r\n        <select value={category} onChange={(e) => { setCategory(e.target.value); setSubCategory(\"\"); }} required>\r\n          <option value=\"\" disabled>Select a category</option>\r\n          {Object.keys(subCategoriesMap).map((key) => <option key={key} value={key}>{key}</option>)}\r\n        </select>\r\n\r\n        {category && subCategoriesMap[category]?.length > 0 && (\r\n          <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n            <option value=\"\" disabled>Select a subcategory</option>\r\n            {subCategoriesMap[category].map((sub, index) => <option key={index} value={sub.toLowerCase()}>{sub}</option>)}\r\n          </select>\r\n        )}\r\n\r\n        {existingMedia.length > 0 && (\r\n          <div>\r\n            <h3>Existing Media</h3>\r\n            {existingMedia.map((media, idx) => (\r\n              <div key={idx} className=\"media-preview\">\r\n                {media.type.startsWith(\"image/\") ? (\r\n                  <img src={media.url} alt=\"Media\" style={{ width: \"100px\", height: \"100px\" }} />\r\n                ) : media.type === \"video/mp4\" ? (\r\n                  <video src={media.url} controls width=\"200px\" />\r\n                ) : null}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"button-container\">\r\n          <button type=\"button\" onClick={() => handleSubmit(false)} disabled={loading}>Submit Post</button>\r\n          <button type=\"button\" onClick={() => handleSubmit(true)} disabled={loading}>Save as Draft</button>\r\n          <button type=\"button\" className=\"cancel-button\" onClick={handleCancel} disabled={loading}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,aAAa,MAAM,kBAAkB,CAAC,CAAC;AAC9C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}