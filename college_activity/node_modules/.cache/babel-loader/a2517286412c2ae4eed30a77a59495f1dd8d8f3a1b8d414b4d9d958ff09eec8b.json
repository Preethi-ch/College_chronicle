{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useContext } from \"react\";\n// import { AuthContext } from \"./contextauth\";  // Import AuthContext\n// import \"./Newpost.css\";\n\n// const NewPost = () => {\n//   const { userEmail } = useContext(AuthContext);  // Access the userEmail from AuthContext\n//   const [fileNames, setFileNames] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [files, setFiles] = useState([]);\n\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   // Log userEmail to check its value\n//   console.log(\"User Email:\", userEmail);\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n//     setFileNames((prevNames) => [...prevNames, ...selectedFiles.map((file) => file.name)]);\n//   };\n\n//   const handleFileRemove = (index) => {\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\n//     setFileNames((prevNames) => prevNames.filter((_, i) => i !== index));\n//   };\n\n//   const resetForm = () => {\n//     setFileNames([]);\n//     setTitle(\"\");\n//     setDescription(\"\");\n//     setCategory(\"\");\n//     setSubCategory(\"\");\n//     setFiles([]);\n//   };\n\n//   const handleSubmit = async (isDraft = false) => {\n//     if (!title || !description || !category) {\n//       alert(\"Please fill all the required fields!\");\n//       return;\n//     }\n\n//     // Log form data before submitting\n//     console.log(\"Form Data before Submit:\");\n//     console.log(\"Title:\", title);\n//     console.log(\"Description:\", description);\n//     console.log(\"Category:\", category);\n//     console.log(\"SubCategory:\", subCategory);\n//     console.log(\"Files:\", fileNames);\n//     console.log(\"User Email before submit:\", userEmail);\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");  // Status for draft or post\n//     formData.append(\"uploaderEmail\", userEmail);  // Add userEmail to formData\n\n//     files.forEach((file) => formData.append(\"media\", file));\n\n//     try {\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (response.ok) {\n//         const message = isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\";\n//         alert(message);\n//         resetForm();\n//       } else {\n//         const error = await response.json();\n//         alert(`Error: ${error.error}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting post:\", error);\n//       alert(\"Failed to submit post. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {fileNames.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\n//           </label>\n//           <input\n//             type=\"file\"\n//             id=\"fileInput\"\n//             onChange={handleFileChange}\n//             multiple\n//             style={{ display: \"none\" }}\n//           />\n//         </div>\n\n//         {/* Display uploaded file names */}\n//         <div className=\"uploaded-files\">\n//           {fileNames.map((fileName, index) => (\n//             <div key={index} className=\"file-item\">\n//               <span>{fileName}</span>\n//               <button\n//                 type=\"button\"\n//                 className=\"remove-button\"\n//                 onClick={() => handleFileRemove(index)}\n//               >\n//                 ‚ùå\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n//         <select\n//           value={category}\n//           onChange={(e) => {\n//             setCategory(e.target.value);\n//             setSubCategory(\"\");\n//           }}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           <option value=\"events\">Events</option>\n//           <option value=\"clubs\">Clubs</option>\n//           <option value=\"academics\">Academics</option>\n//           <option value=\"notices\">Notices</option>\n//           <option value=\"skillhub\">Skillhub</option>\n//           <option value=\"placements\">Placements</option>\n//         </select>\n//         {category && subCategoriesMap[category]?.length > 0 && (\n//           <select\n//             value={subCategory}\n//             onChange={(e) => setSubCategory(e.target.value)}\n//           >\n//             <option value=\"\" disabled>\n//               Select a subcategory\n//             </option>\n//             {subCategoriesMap[category].map((sub, index) => (\n//               <option key={index} value={sub.toLowerCase()}>\n//                 {sub}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\n//             Submit Post\n//           </button>\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\n//             Save as Draft\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\nimport React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"./contextauth\"; // Import AuthContext\nimport \"./Newpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = () => {\n  _s();\n  var _subCategoriesMap$cat;\n  const [fileNames, setFileNames] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const subCategoriesMap = {\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"]\n  };\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(prevFiles => [...prevFiles, ...selectedFiles]);\n    setFileNames(prevNames => [...prevNames, ...selectedFiles.map(file => file.name)]);\n  };\n  const handleFileRemove = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n    setFileNames(prevNames => prevNames.filter((_, i) => i !== index));\n  };\n  const resetForm = () => {\n    setFileNames([]);\n    setTitle(\"\");\n    setDescription(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setFiles([]);\n  };\n  const handleSubmit = async (isDraft = false) => {\n    if (!title || !description || !category) {\n      alert(\"Please fill all the required fields!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n    files.forEach(file => formData.append(\"media\", file));\n    try {\n      const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n        resetForm();\n      } else {\n        const error = await response.json();\n        alert(`Error: ${error.error}`);\n      }\n    } catch (error) {\n      console.error(\"Error submitting post:\", error);\n      alert(\"Failed to submit post. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cancel-button\",\n      onClick: resetForm,\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: fileNames.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange,\n          multiple: true,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: fileNames.map((fileName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-button\",\n            onClick: () => handleFileRemove(index),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => {\n          setCategory(e.target.value);\n          setSubCategory(\"\");\n        },\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"events\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"clubs\",\n          children: \"Clubs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"academics\",\n          children: \"Academics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"notices\",\n          children: \"Notices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"skillhub\",\n          children: \"Skillhub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"placements\",\n          children: \"Placements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), category && ((_subCategoriesMap$cat = subCategoriesMap[category]) === null || _subCategoriesMap$cat === void 0 ? void 0 : _subCategoriesMap$cat.length) > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: subCategory,\n        onChange: e => setSubCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), subCategoriesMap[category].map((sub, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sub.toLowerCase(),\n          children: sub\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(false),\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(true),\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"R1extMsZ0U3bhkBXCnTAUUFXnKE=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","jsxDEV","_jsxDEV","NewPost","_s","_subCategoriesMap$cat","fileNames","setFileNames","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","files","setFiles","subCategoriesMap","clubs","academics","skillhub","handleFileChange","event","selectedFiles","Array","from","target","prevFiles","prevNames","map","file","name","handleFileRemove","index","filter","_","i","resetForm","handleSubmit","isDraft","alert","formData","FormData","append","forEach","response","fetch","method","body","ok","error","json","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","type","id","onChange","multiple","style","display","placeholder","value","e","required","disabled","sub","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Newpost.js"],"sourcesContent":["// import React, { useState, useContext } from \"react\";\r\n// import { AuthContext } from \"./contextauth\";  // Import AuthContext\r\n// import \"./Newpost.css\";\r\n\r\n// const NewPost = () => {\r\n//   const { userEmail } = useContext(AuthContext);  // Access the userEmail from AuthContext\r\n//   const [fileNames, setFileNames] = useState([]);\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [files, setFiles] = useState([]);\r\n\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   // Log userEmail to check its value\r\n//   console.log(\"User Email:\", userEmail);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n//     setFileNames((prevNames) => [...prevNames, ...selectedFiles.map((file) => file.name)]);\r\n//   };\r\n\r\n//   const handleFileRemove = (index) => {\r\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n//     setFileNames((prevNames) => prevNames.filter((_, i) => i !== index));\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setFileNames([]);\r\n//     setTitle(\"\");\r\n//     setDescription(\"\");\r\n//     setCategory(\"\");\r\n//     setSubCategory(\"\");\r\n//     setFiles([]);\r\n//   };\r\n\r\n//   const handleSubmit = async (isDraft = false) => {\r\n//     if (!title || !description || !category) {\r\n//       alert(\"Please fill all the required fields!\");\r\n//       return;\r\n//     }\r\n\r\n//     // Log form data before submitting\r\n//     console.log(\"Form Data before Submit:\");\r\n//     console.log(\"Title:\", title);\r\n//     console.log(\"Description:\", description);\r\n//     console.log(\"Category:\", category);\r\n//     console.log(\"SubCategory:\", subCategory);\r\n//     console.log(\"Files:\", fileNames);\r\n//     console.log(\"User Email before submit:\", userEmail);\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");  // Status for draft or post\r\n//     formData.append(\"uploaderEmail\", userEmail);  // Add userEmail to formData\r\n\r\n//     files.forEach((file) => formData.append(\"media\", file));\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const message = isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\";\r\n//         alert(message);\r\n//         resetForm();\r\n//       } else {\r\n//         const error = await response.json();\r\n//         alert(`Error: ${error.error}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting post:\", error);\r\n//       alert(\"Failed to submit post. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {fileNames.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"fileInput\"\r\n//             onChange={handleFileChange}\r\n//             multiple\r\n//             style={{ display: \"none\" }}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Display uploaded file names */}\r\n//         <div className=\"uploaded-files\">\r\n//           {fileNames.map((fileName, index) => (\r\n//             <div key={index} className=\"file-item\">\r\n//               <span>{fileName}</span>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"remove-button\"\r\n//                 onClick={() => handleFileRemove(index)}\r\n//               >\r\n//                 ‚ùå\r\n//               </button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => {\r\n//             setCategory(e.target.value);\r\n//             setSubCategory(\"\");\r\n//           }}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>\r\n//             Select a category\r\n//           </option>\r\n//           <option value=\"events\">Events</option>\r\n//           <option value=\"clubs\">Clubs</option>\r\n//           <option value=\"academics\">Academics</option>\r\n//           <option value=\"notices\">Notices</option>\r\n//           <option value=\"skillhub\">Skillhub</option>\r\n//           <option value=\"placements\">Placements</option>\r\n//         </select>\r\n//         {category && subCategoriesMap[category]?.length > 0 && (\r\n//           <select\r\n//             value={subCategory}\r\n//             onChange={(e) => setSubCategory(e.target.value)}\r\n//           >\r\n//             <option value=\"\" disabled>\r\n//               Select a subcategory\r\n//             </option>\r\n//             {subCategoriesMap[category].map((sub, index) => (\r\n//               <option key={index} value={sub.toLowerCase()}>\r\n//                 {sub}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         )}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\r\n//             Submit Post\r\n//           </button>\r\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\r\n//             Save as Draft\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"./contextauth\"; // Import AuthContext\r\nimport \"./Newpost.css\";\r\n\r\nconst NewPost = () => {\r\n  const [fileNames, setFileNames] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const subCategoriesMap = {\r\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n    setFileNames((prevNames) => [...prevNames, ...selectedFiles.map((file) => file.name)]);\r\n  };\r\n\r\n  const handleFileRemove = (index) => {\r\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n    setFileNames((prevNames) => prevNames.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFileNames([]);\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setSubCategory(\"\");\r\n    setFiles([]);\r\n  };\r\n\r\n  const handleSubmit = async (isDraft = false) => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill all the required fields!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n\r\n    files.forEach((file) => formData.append(\"media\", file));\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n        resetForm();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error: ${error.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting post:\", error);\r\n      alert(\"Failed to submit post. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Cancel Button (‚ùå) at the top-right corner */}\r\n      <button className=\"cancel-button\" onClick={resetForm}>‚ùå</button>\r\n\r\n      <h2>New Post</h2>\r\n      <form>\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"fileInput\">\r\n            {fileNames.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"fileInput\"\r\n            onChange={handleFileChange}\r\n            multiple\r\n            style={{ display: \"none\" }}\r\n          />\r\n        </div>\r\n\r\n        {/* Display uploaded file names */}\r\n        <div className=\"uploaded-files\">\r\n          {fileNames.map((fileName, index) => (\r\n            <div key={index} className=\"file-item\">\r\n              <span>{fileName}</span>\r\n              <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>\r\n                ‚ùå\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Write a description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <select\r\n          value={category}\r\n          onChange={(e) => {\r\n            setCategory(e.target.value);\r\n            setSubCategory(\"\");\r\n          }}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>Select a category</option>\r\n          <option value=\"events\">Events</option>\r\n          <option value=\"clubs\">Clubs</option>\r\n          <option value=\"academics\">Academics</option>\r\n          <option value=\"notices\">Notices</option>\r\n          <option value=\"skillhub\">Skillhub</option>\r\n          <option value=\"placements\">Placements</option>\r\n        </select>\r\n        {category && subCategoriesMap[category]?.length > 0 && (\r\n          <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n            <option value=\"\" disabled>Select a subcategory</option>\r\n            {subCategoriesMap[category].map((sub, index) => (\r\n              <option key={index} value={sub.toLowerCase()}>{sub}</option>\r\n            ))}\r\n          </select>\r\n        )}\r\n        <div className=\"button-container\">\r\n          <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\r\n          <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;AAC7C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}