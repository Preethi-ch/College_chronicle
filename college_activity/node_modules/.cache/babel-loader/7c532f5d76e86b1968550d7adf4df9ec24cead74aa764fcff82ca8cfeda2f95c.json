{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Postspage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./Postspage.css\";\nimport { AuthContext } from \"./contextauth\"; // Import AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userEmail\n  } = useContext(AuthContext); // Get logged-in user's email\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        console.log(\"Fetching posts...\");\n        const response = await fetch(\"http://localhost:3000/postview/posted\"); // Fetch all posts\n        const data = await response.json();\n        console.log(\"Fetched posts:\", data);\n\n        // Filter posts based on the logged-in user's email\n        const userPosts = data.filter(post => post.email === userEmail);\n        setPosts(userPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    if (userEmail) {\n      fetchPosts();\n    }\n  }, [userEmail]); // Fetch posts when userEmail changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-grid\",\n      children: posts.length > 0 ? posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by latest\n      .map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-item\",\n        children: [post.media && post.media.length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n          showThumbs: false,\n          infiniteLoop: true,\n          autoPlay: true,\n          interval: 3000,\n          showStatus: false,\n          children: post.media.map((media, idx) => media.url && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: media.url,\n              alt: `${post.title} ${idx}`,\n              className: \"feed-image-item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 27\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-post-button\",\n      onClick: () => navigate(\"/Newpost\"),\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsPage, \"IE0WhKHv/UmLpzZWHf4nHXmUBEo=\", false, function () {\n  return [useNavigate];\n});\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","Carousel","AuthContext","jsxDEV","_jsxDEV","PostsPage","_s","navigate","userEmail","posts","setPosts","fetchPosts","console","log","response","fetch","data","json","userPosts","filter","post","email","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","sort","a","b","Date","createdAt","map","index","media","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","url","src","alt","title","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Postspage.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./Postspage.css\";\r\nimport { AuthContext } from \"./contextauth\"; // Import AuthContext\r\n\r\nconst PostsPage = () => {\r\n  const navigate = useNavigate();\r\n  const { userEmail } = useContext(AuthContext); // Get logged-in user's email\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        console.log(\"Fetching posts...\");\r\n        const response = await fetch(\"http://localhost:3000/postview/posted\"); // Fetch all posts\r\n        const data = await response.json();\r\n        console.log(\"Fetched posts:\", data);\r\n\r\n        // Filter posts based on the logged-in user's email\r\n        const userPosts = data.filter(post => post.email === userEmail);\r\n        setPosts(userPosts);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n    if (userEmail) {\r\n      fetchPosts();\r\n    }\r\n  }, [userEmail]); // Fetch posts when userEmail changes\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      <h1>Your Posts</h1>\r\n\r\n      <div className=\"feed-grid\">\r\n        {posts.length > 0 ? (\r\n          posts\r\n            .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by latest\r\n            .map((post, index) => (\r\n              <div key={index} className=\"feed-item\">\r\n                {post.media && post.media.length > 0 && (\r\n                  <Carousel\r\n                    showThumbs={false}\r\n                    infiniteLoop\r\n                    autoPlay\r\n                    interval={3000}\r\n                    showStatus={false}\r\n                  >\r\n                    {post.media.map((media, idx) => (\r\n                      media.url && (\r\n                        <div key={idx}>\r\n                          <img src={media.url} alt={`${post.title} ${idx}`} className=\"feed-image-item\" />\r\n                        </div>\r\n                      )\r\n                    ))}\r\n                  </Carousel>\r\n                )}\r\n\r\n                <div className=\"feed-content\">\r\n                  <h3>{post.title}</h3>\r\n                  <p>{post.description}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n        ) : (\r\n          <p>No posts available.</p>\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\r\n        New Post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}