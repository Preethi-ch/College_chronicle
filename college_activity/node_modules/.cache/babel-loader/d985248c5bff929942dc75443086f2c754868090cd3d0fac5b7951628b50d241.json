{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Dashboardcontent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n// const location = useLocation();\n\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       console.log(\"Resetting filters...\");\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n\n//       // Clear the state to avoid repetitive resets\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         console.log(\"Fetching posts from:\", url); // Debugging log\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         console.log(\"Fetched posts:\", data); // Debugging log\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Enhanced Search Functionality (Search across all fields)\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   // Sorting Logic (Based on Created Date)\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\n//   });\n\n//   // Close Full-Screen on Escape Key\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   return (\n//     <div className=\"outer-box\">\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\n//       <div className=\"left-container\">\n//         {/* DASHBOARD SECTION */}\n//         <div className=\"dashboard-section\">\n//           <h1>Dashboard</h1>\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img\n//                       src={category.image}\n//                       alt={`${category.name} Icon`}\n//                       className=\"category-image\"\n//                     />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation(); // Prevent triggering category click\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* FEED SECTION */}\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <h2>Feed</h2>\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button\n//                 className=\"filter-button\"\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\n//               >\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           {/* Feed Grid */}\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel\n//                         showThumbs={false}\n//                         infiniteLoop\n//                         autoPlay\n//                         interval={5000}\n//                         showStatus={false}\n//                       >\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img\n//                                   src={media.url}\n//                                   alt={`${post.title} ${idx}`}\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\n//                                 />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video\n//                                 src={media.url}\n//                                 controls\n//                                 style={{ width: \"100%\", height: \"auto\" }}\n//                               />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p>{post.description}</p>\n//                     {post.link && (\n//                       <a\n//                         href={post.link}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         className=\"post-link\"\n//                       >\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* FULL-SCREEN IMAGE MODAL */}\n//       {fullscreenImage && (\n//         <div\n//           className=\"fullscreen-overlay\"\n//           onClick={() => setFullscreenImage(null)}\n//         >\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img\n//             src={fullscreenImage}\n//             alt=\"Full-Screen Preview\"\n//             className=\"fullscreen-image\"\n//           />\n//         </div>\n//       )}\n\n//       {/* ANALYTICS SECTION */}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img\n//           src=\"/images/powerbi-report.jpg\"\n//           alt=\"Power BI Analytics\"\n//           className=\"analytics-image\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./DashboardContent.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContent = () => {\n  _s();\n  var _location$state2;\n  const [posts, setPosts] = useState([]);\n  const [sortOrder, setSortOrder] = useState(\"desc\");\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [fullscreenImage, setFullscreenImage] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  const [expandedPosts, setExpandedPosts] = useState({});\n  const [showReadMore, setShowReadMore] = useState({}); // To track posts that need \"Read More\"\n  const location = useLocation();\n\n  // Reset filters when navigating back\n  useEffect(() => {\n    var _location$state;\n    if (location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.resetFilters) {\n      console.log(\"Resetting filters...\");\n      setSelectedCategory(null);\n      setSelectedSubcategory(null);\n      setSearchTerm(\"\");\n      window.history.replaceState({}, document.title);\n    }\n  }, [location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.resetFilters]);\n\n  // Fetch posts based on selected filters\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let url = \"http://localhost:3000/fetch/\"; // Default URL\n        if (selectedCategory || selectedSubcategory) {\n          const params = new URLSearchParams();\n          if (selectedCategory) params.append(\"category\", selectedCategory);\n          if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n          url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n        }\n        console.log(\"Fetching posts from:\", url);\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(\"Fetched posts:\", data);\n        setPosts(data.data || []);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [selectedCategory, selectedSubcategory]);\n\n  // Handle Read More visibility logic\n  useEffect(() => {\n    const calculateReadMoreVisibility = () => {\n      const visibility = {};\n      document.querySelectorAll(\".post-description\").forEach((element, index) => {\n        var _posts$index;\n        const postId = (_posts$index = posts[index]) === null || _posts$index === void 0 ? void 0 : _posts$index.id;\n        if (element.scrollHeight > element.offsetHeight) {\n          visibility[postId] = true; // \"Read More\" is needed\n        } else {\n          visibility[postId] = false; // \"Read More\" is not needed\n        }\n      });\n      setShowReadMore(visibility);\n    };\n    calculateReadMoreVisibility();\n\n    // Recalculate on window resize\n    window.addEventListener(\"resize\", calculateReadMoreVisibility);\n    return () => window.removeEventListener(\"resize\", calculateReadMoreVisibility);\n  }, [posts]);\n  const toggleExpandPost = postId => {\n    setExpandedPosts(prev => ({\n      ...prev,\n      [postId]: !prev[postId]\n    }));\n  };\n\n  // Filter and sort posts\n  const filteredPosts = posts.filter(post => {\n    const searchString = searchTerm.toLowerCase();\n    return Object.values(post).some(value => {\n      if (typeof value === \"string\") {\n        return value.toLowerCase().includes(searchString);\n      } else if (Array.isArray(value)) {\n        return value.some(item => typeof item === \"string\" && item.toLowerCase().includes(searchString));\n      }\n      return false;\n    });\n  });\n  const sortedPosts = filteredPosts.sort((a, b) => {\n    return sortOrder === \"desc\" ? new Date(b.createdAt) - new Date(a.createdAt) : new Date(a.createdAt) - new Date(b.createdAt);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-bar\",\n            placeholder: \"Search posts...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search\",\n            onClick: () => setSearchTerm(\"\"),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: () => setShowFilterOptions(!showFilterOptions),\n              children: \"Filter \\u2335\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), showFilterOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSortOrder(\"desc\");\n                  setShowFilterOptions(false);\n                },\n                children: \"Newest First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSortOrder(\"asc\");\n                  setShowFilterOptions(false);\n                },\n                children: \"Oldest First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-grid\",\n          children: sortedPosts.length > 0 ? sortedPosts.map((post, index) => {\n            var _post$media, _post$media$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feed-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed-image\",\n                children: ((_post$media = post.media) === null || _post$media === void 0 ? void 0 : _post$media.length) > 0 && ((_post$media$ = post.media[0]) === null || _post$media$ === void 0 ? void 0 : _post$media$.url) && /*#__PURE__*/_jsxDEV(Carousel, {\n                  showThumbs: false,\n                  infiniteLoop: true,\n                  autoPlay: true,\n                  interval: 5000,\n                  showStatus: false,\n                  children: post.media.map((media, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"carousel-item\",\n                    children: media.type.startsWith(\"image/\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => setFullscreenImage(media.url),\n                      style: {\n                        cursor: \"pointer\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: media.url,\n                        alt: `${post.title} ${idx}`,\n                        style: {\n                          objectFit: \"cover\",\n                          width: \"100%\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 486,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 31\n                    }, this) : media.type === \"video/mp4\" ? /*#__PURE__*/_jsxDEV(\"video\", {\n                      src: media.url,\n                      controls: true,\n                      style: {\n                        width: \"100%\",\n                        height: \"auto\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 31\n                    }, this) : media.type === \"application/pdf\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pdf-container\",\n                      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                        src: `https://docs.google.com/gview?url=${media.url}&embedded=true`,\n                        title: \"PDF Viewer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 31\n                    }, this) : null\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `post-description ${expandedPosts[post.id] ? \"expanded\" : \"collapsed\"}`,\n                  children: post.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), showReadMore[post.id] && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleExpandPost(post.id),\n                  className: \"read-more-button\",\n                  children: expandedPosts[post.id] ? \"Read Less\" : \"Read More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 23\n                }, this), post.link && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: post.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"post-link\",\n                  children: post.link\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No posts available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardContent, \"Pr8DX+c90xAPzNSXACS9ycnlfU8=\", false, function () {\n  return [useLocation];\n});\n_c = DashboardContent;\nexport default DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Carousel","useLocation","jsxDEV","_jsxDEV","DashboardContent","_s","_location$state2","posts","setPosts","sortOrder","setSortOrder","activeCategory","setActiveCategory","showFilterOptions","setShowFilterOptions","searchTerm","setSearchTerm","fullscreenImage","setFullscreenImage","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","expandedPosts","setExpandedPosts","showReadMore","setShowReadMore","location","_location$state","state","resetFilters","console","log","window","history","replaceState","document","title","fetchPosts","url","params","URLSearchParams","append","toString","response","fetch","data","json","error","calculateReadMoreVisibility","visibility","querySelectorAll","forEach","element","index","_posts$index","postId","id","scrollHeight","offsetHeight","addEventListener","removeEventListener","toggleExpandPost","prev","filteredPosts","filter","post","searchString","toLowerCase","Object","values","some","value","includes","Array","isArray","item","sortedPosts","sort","a","b","Date","createdAt","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","_post$media","_post$media$","media","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","startsWith","style","cursor","src","alt","objectFit","width","controls","height","description","link","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Dashboardcontent.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n// const location = useLocation();\r\n\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       console.log(\"Resetting filters...\");\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n\r\n//       // Clear the state to avoid repetitive resets\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         console.log(\"Fetching posts from:\", url); // Debugging log\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts:\", data); // Debugging log\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n\r\n//   // Enhanced Search Functionality (Search across all fields)\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   // Sorting Logic (Based on Created Date)\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\r\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\r\n//   });\r\n\r\n//   // Close Full-Screen on Escape Key\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\r\n//       <div className=\"left-container\">\r\n//         {/* DASHBOARD SECTION */}\r\n//         <div className=\"dashboard-section\">\r\n//           <h1>Dashboard</h1>\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img\r\n//                       src={category.image}\r\n//                       alt={`${category.name} Icon`}\r\n//                       className=\"category-image\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation(); // Prevent triggering category click\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* FEED SECTION */}\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <h2>Feed</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button\r\n//                 className=\"filter-button\"\r\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\r\n//               >\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Feed Grid */}\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel\r\n//                         showThumbs={false}\r\n//                         infiniteLoop\r\n//                         autoPlay\r\n//                         interval={5000}\r\n//                         showStatus={false}\r\n//                       >\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img\r\n//                                   src={media.url}\r\n//                                   alt={`${post.title} ${idx}`}\r\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\r\n//                                 />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video\r\n//                                 src={media.url}\r\n//                                 controls\r\n//                                 style={{ width: \"100%\", height: \"auto\" }}\r\n//                               />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p>{post.description}</p>\r\n//                     {post.link && (\r\n//                       <a\r\n//                         href={post.link}\r\n//                         target=\"_blank\"\r\n//                         rel=\"noopener noreferrer\"\r\n//                         className=\"post-link\"\r\n//                       >\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* FULL-SCREEN IMAGE MODAL */}\r\n//       {fullscreenImage && (\r\n//         <div\r\n//           className=\"fullscreen-overlay\"\r\n//           onClick={() => setFullscreenImage(null)}\r\n//         >\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img\r\n//             src={fullscreenImage}\r\n//             alt=\"Full-Screen Preview\"\r\n//             className=\"fullscreen-image\"\r\n//           />\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* ANALYTICS SECTION */}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img\r\n//           src=\"/images/powerbi-report.jpg\"\r\n//           alt=\"Power BI Analytics\"\r\n//           className=\"analytics-image\"\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./DashboardContent.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst DashboardContent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [sortOrder, setSortOrder] = useState(\"desc\");\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [fullscreenImage, setFullscreenImage] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n  const [expandedPosts, setExpandedPosts] = useState({});\r\n  const [showReadMore, setShowReadMore] = useState({}); // To track posts that need \"Read More\"\r\n  const location = useLocation();\r\n\r\n  // Reset filters when navigating back\r\n  useEffect(() => {\r\n    if (location?.state?.resetFilters) {\r\n      console.log(\"Resetting filters...\");\r\n      setSelectedCategory(null);\r\n      setSelectedSubcategory(null);\r\n      setSearchTerm(\"\");\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n  }, [location?.state?.resetFilters]);\r\n\r\n  // Fetch posts based on selected filters\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        let url = \"http://localhost:3000/fetch/\"; // Default URL\r\n        if (selectedCategory || selectedSubcategory) {\r\n          const params = new URLSearchParams();\r\n          if (selectedCategory) params.append(\"category\", selectedCategory);\r\n          if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n          url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n        }\r\n        console.log(\"Fetching posts from:\", url);\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(\"Fetched posts:\", data);\r\n        setPosts(data.data || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [selectedCategory, selectedSubcategory]);\r\n\r\n  // Handle Read More visibility logic\r\n  useEffect(() => {\r\n    const calculateReadMoreVisibility = () => {\r\n      const visibility = {};\r\n      document.querySelectorAll(\".post-description\").forEach((element, index) => {\r\n        const postId = posts[index]?.id;\r\n        if (element.scrollHeight > element.offsetHeight) {\r\n          visibility[postId] = true; // \"Read More\" is needed\r\n        } else {\r\n          visibility[postId] = false; // \"Read More\" is not needed\r\n        }\r\n      });\r\n      setShowReadMore(visibility);\r\n    };\r\n\r\n    calculateReadMoreVisibility();\r\n\r\n    // Recalculate on window resize\r\n    window.addEventListener(\"resize\", calculateReadMoreVisibility);\r\n    return () => window.removeEventListener(\"resize\", calculateReadMoreVisibility);\r\n  }, [posts]);\r\n\r\n  const toggleExpandPost = (postId) => {\r\n    setExpandedPosts((prev) => ({\r\n      ...prev,\r\n      [postId]: !prev[postId],\r\n    }));\r\n  };\r\n\r\n  // Filter and sort posts\r\n  const filteredPosts = posts.filter((post) => {\r\n    const searchString = searchTerm.toLowerCase();\r\n    return Object.values(post).some((value) => {\r\n      if (typeof value === \"string\") {\r\n        return value.toLowerCase().includes(searchString);\r\n      } else if (Array.isArray(value)) {\r\n        return value.some(\r\n          (item) =>\r\n            typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n  });\r\n\r\n  const sortedPosts = filteredPosts.sort((a, b) => {\r\n    return sortOrder === \"desc\"\r\n      ? new Date(b.createdAt) - new Date(a.createdAt)\r\n      : new Date(a.createdAt) - new Date(b.createdAt);\r\n  });\r\n\r\n  return (\r\n    <div className=\"outer-box\">\r\n      <div className=\"left-container\">\r\n        <div className=\"feed-section\">\r\n          <div className=\"feed-header\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search posts...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            {searchTerm && (\r\n              <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n                ×\r\n              </button>\r\n            )}\r\n            <div className=\"filter-container\">\r\n              <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n                Filter ⌵\r\n              </button>\r\n              {showFilterOptions && (\r\n                <div className=\"filter-dropdown\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setSortOrder(\"desc\");\r\n                      setShowFilterOptions(false);\r\n                    }}\r\n                  >\r\n                    Newest First\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      setSortOrder(\"asc\");\r\n                      setShowFilterOptions(false);\r\n                    }}\r\n                  >\r\n                    Oldest First\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"feed-grid\">\r\n            {sortedPosts.length > 0 ? (\r\n              sortedPosts.map((post, index) => (\r\n                <div className=\"feed-item\" key={index}>\r\n                  <div className=\"feed-image\">\r\n                    {post.media?.length > 0 && post.media[0]?.url && (\r\n                      <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n                        {post.media.map((media, idx) => (\r\n                          <div key={idx} className=\"carousel-item\">\r\n                            {media.type.startsWith(\"image/\") ? (\r\n                              <div\r\n                                onClick={() => setFullscreenImage(media.url)}\r\n                                style={{ cursor: \"pointer\" }}\r\n                              >\r\n                                <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n                              </div>\r\n                            ) : media.type === \"video/mp4\" ? (\r\n                              <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n                            ) : media.type === \"application/pdf\" ? (\r\n                              <div className=\"pdf-container\">\r\n                                <iframe\r\n                                  src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n                                  title=\"PDF Viewer\"\r\n                                ></iframe>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ))}\r\n                      </Carousel>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"feed-content\">\r\n                    <h3>{post.title}</h3>\r\n                    <p\r\n                      className={`post-description ${\r\n                        expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n                      }`}\r\n                    >\r\n                      {post.description}\r\n                    </p>\r\n                    {showReadMore[post.id] && (\r\n                      <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n                        {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n                      </button>\r\n                    )}\r\n                    {post.link && (\r\n                      <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n                        {post.link}\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No posts available</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}