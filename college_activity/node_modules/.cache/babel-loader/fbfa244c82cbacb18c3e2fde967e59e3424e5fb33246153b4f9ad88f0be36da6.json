{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./Newpost.css\";\n\n// const NewPost = ({ userEmail }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [link, setLink] = useState(\"\"); // State for link field\n//   const [files, setFiles] = useState([]);\n//   const [filePreviews, setFilePreviews] = useState([]);\n\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n\n//     const previews = selectedFiles.map((file) => ({\n//       name: file.name,\n//       url: URL.createObjectURL(file),\n//     \n\n// import React, { useState, useEffect } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n// import \"./Newpost.css\";\n\n// const NewPost = ({ userEmail }) => {\n//   const [draftId, setDraftId] = useState(null);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [link, setLink] = useState(\"\");\n//   const [files, setFiles] = useState([]);\n//   const [existingMedia, setExistingMedia] = useState([]);\n//   const location = useLocation();\n\n//   // Subcategories based on category selection\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   useEffect(() => {\n//     const queryParams = new URLSearchParams(location.search);\n//     const draftIdFromParams = queryParams.get(\"draftId\");\n\n//     if (draftIdFromParams) {\n//       setDraftId(draftIdFromParams);\n//       fetchDraftData(draftIdFromParams);\n//     }\n//   }, [location.search]);\n\n//   const fetchDraftData = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:3000/draftsview/edit/${id}`);\n//       if (!response.ok) throw new Error(\"Failed to fetch draft\");\n\n//       const draft = await response.json();\n//       setTitle(draft.title);\n//       setDescription(draft.description);\n//       setCategory(draft.category);\n//       setSubCategory(draft.subCategory || \"\");\n//       setLink(draft.link || \"\");\n//       setExistingMedia(draft.media || []);\n//     } catch (error) {\n//       console.error(\"Error fetching draft:\", error);\n//       alert(\"Could not load draft. Please try again.\");\n//     }\n//   };\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n//   };\n\n//   const resetForm = () => {\n//     setTitle(\"\");\n//     setDescription(\"\");\n//     setCategory(\"\");\n//     setSubCategory(\"\");\n//     setLink(\"\");\n//     setFiles([]);\n//     setExistingMedia([]);\n//     setDraftId(null);\n//   };\n\n//   const handleSubmit = async (isDraft = false) => {\n//     if (!title || !description || !category) {\n//       alert(\"Please fill all required fields!\");\n//       return;\n//     }\n\n//     if (!userEmail) {\n//       alert(\"Error: User email is missing!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n//     formData.append(\"uploaderEmail\", userEmail);\n//     formData.append(\"link\", link);\n\n//     files.forEach((file) => formData.append(\"media\", file));\n\n//     try {\n//       let url, method;\n\n//       if (draftId) {\n//         // If draft exists, update it\n//         url = `http://localhost:3000/posts/update/${draftId}`;\n//         method = \"PUT\";\n//       } else {\n//         // If it's a new post\n//         url = \"http://localhost:3000/posts/create-post\";\n//         method = \"POST\";\n//       }\n\n//       const response = await fetch(url, {\n//         method: method,\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.error || \"Unknown error\");\n//       }\n\n//       alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n\n//       if (!isDraft && draftId) {\n//         // If posting, delete the draft after updating\n//         await fetch(`http://localhost:3000/draftsview/delete/${draftId}`, { method: \"DELETE\" });\n//       }\n\n//       resetForm();\n//     } catch (error) {\n//       console.error(\"Error submitting post:\", error);\n//       alert(\"Submission failed. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>{draftId ? \"Edit Draft\" : \"New Post\"}</h2>\n//       <form>\n//         {/* File Upload */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\n//           </label>\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\n//         </div>\n\n//         {/* Display Uploaded Files */}\n//         <div className=\"uploaded-files\">\n//           {existingMedia.map((media, index) => (\n//             <div key={index} className=\"file-item\">\n//               <a href={media.url} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 {media.url}\n//               </a>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Form Fields */}\n//         <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n//         <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\n//         <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\n\n//         {/* Category Selection */}\n//         <select value={category} onChange={(e) => { setCategory(e.target.value); setSubCategory(\"\"); }} required>\n//           <option value=\"\" disabled>Select a category</option>\n//           <option value=\"events\">Events</option>\n//           <option value=\"clubs\">Clubs</option>\n//           <option value=\"academics\">Academics</option>\n//           <option value=\"notices\">Notices</option>\n//           <option value=\"skillhub\">Skillhub</option>\n//           <option value=\"placements\">Placements</option>\n//         </select>\n\n//         {/* Subcategory Selection */}\n//         {category && subCategoriesMap[category] ? (\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)} disabled={!category}>\n//             <option value=\"\" disabled>Select a subcategory</option>\n//             {subCategoriesMap[category].map((sub, index) => (\n//               <option key={index} value={sub}>{sub}</option>\n//             ))}\n//           </select>\n//         ) : null}\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>Cancel</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Newpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = ({\n  userEmail\n}) => {\n  _s();\n  const [draftId, setDraftId] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const draftIdFromParams = queryParams.get(\"draftId\");\n    if (draftIdFromParams) {\n      setDraftId(draftIdFromParams);\n      fetchDraftData(draftIdFromParams);\n    }\n  }, [location.search]);\n  const fetchDraftData = async id => {\n    try {\n      const response = await fetch(`http://localhost:3000/draftsview/edit/${id}`);\n      if (!response.ok) throw new Error(\"Failed to fetch draft\");\n      const draft = await response.json();\n      setTitle(draft.title);\n      setDescription(draft.description);\n      setCategory(draft.category);\n      setSubCategory(draft.subCategory || \"\");\n      setLink(draft.link || \"\");\n    } catch (error) {\n      console.error(\"Error fetching draft:\", error);\n      alert(\"Could not load draft. Please try again.\");\n    }\n  };\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(prevFiles => [...prevFiles, ...selectedFiles]);\n  };\n  const removeFile = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const resetForm = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setLink(\"\");\n    setFiles([]);\n    setDraftId(null);\n  };\n  const handleSubmit = async (isDraft = false) => {\n    if (!title || !description || !category) {\n      alert(\"Please fill all required fields!\");\n      return;\n    }\n    if (!userEmail) {\n      alert(\"Error: User email is missing!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n    formData.append(\"uploaderEmail\", userEmail);\n    formData.append(\"link\", link);\n    files.forEach(file => formData.append(\"media\", file));\n    try {\n      let url, method;\n      if (draftId) {\n        url = `http://localhost:3000/draftsview/update/${draftId}`;\n        method = \"PUT\";\n      } else {\n        url = \"http://localhost:3000/posts/create-post\";\n        method = \"POST\";\n      }\n      const response = await fetch(url, {\n        method,\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Unknown error\");\n      }\n      alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n      if (!isDraft && draftId) {\n        await fetch(`http://localhost:3000/draftsview/${draftId}`, {\n          method: \"DELETE\"\n        });\n      }\n      resetForm();\n    } catch (error) {\n      console.error(\"Error submitting post:\", error);\n      alert(\"Submission failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: draftId ? \"Edit Draft\" : \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange,\n          multiple: true,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-file\",\n            onClick: () => removeFile(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter link (if any)\",\n        value: link,\n        onChange: e => setLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => {\n          setCategory(e.target.value);\n          setSubCategory(\"\");\n        },\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"events\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"clubs\",\n          children: \"Clubs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"academics\",\n          children: \"Academics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"notices\",\n          children: \"Notices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"skillhub\",\n          children: \"Skillhub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"placements\",\n          children: \"Placements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(false),\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(true),\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: resetForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"pkrSjXqV0YjHK1mh4lA2EXfHNpU=\", false, function () {\n  return [useLocation];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","NewPost","userEmail","_s","draftId","setDraftId","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","link","setLink","files","setFiles","location","queryParams","URLSearchParams","search","draftIdFromParams","get","fetchDraftData","id","response","fetch","ok","Error","draft","json","error","console","alert","handleFileChange","event","selectedFiles","Array","from","target","prevFiles","removeFile","index","filter","_","i","resetForm","handleSubmit","isDraft","formData","FormData","append","forEach","file","url","method","body","errorData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","type","onChange","multiple","style","display","map","name","onClick","placeholder","value","e","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Newpost.css\";\r\n\r\n\r\n// const NewPost = ({ userEmail }) => {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [link, setLink] = useState(\"\"); // State for link field\r\n//   const [files, setFiles] = useState([]);\r\n//   const [filePreviews, setFilePreviews] = useState([]);\r\n\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n\r\n//     const previews = selectedFiles.map((file) => ({\r\n//       name: file.name,\r\n//       url: URL.createObjectURL(file),\r\n//     \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import \"./Newpost.css\";\r\n\r\n// const NewPost = ({ userEmail }) => {\r\n//   const [draftId, setDraftId] = useState(null);\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [link, setLink] = useState(\"\");\r\n//   const [files, setFiles] = useState([]);\r\n//   const [existingMedia, setExistingMedia] = useState([]);\r\n//   const location = useLocation();\r\n\r\n//   // Subcategories based on category selection\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const queryParams = new URLSearchParams(location.search);\r\n//     const draftIdFromParams = queryParams.get(\"draftId\");\r\n\r\n//     if (draftIdFromParams) {\r\n//       setDraftId(draftIdFromParams);\r\n//       fetchDraftData(draftIdFromParams);\r\n//     }\r\n//   }, [location.search]);\r\n\r\n//   const fetchDraftData = async (id) => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:3000/draftsview/edit/${id}`);\r\n//       if (!response.ok) throw new Error(\"Failed to fetch draft\");\r\n\r\n//       const draft = await response.json();\r\n//       setTitle(draft.title);\r\n//       setDescription(draft.description);\r\n//       setCategory(draft.category);\r\n//       setSubCategory(draft.subCategory || \"\");\r\n//       setLink(draft.link || \"\");\r\n//       setExistingMedia(draft.media || []);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching draft:\", error);\r\n//       alert(\"Could not load draft. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setTitle(\"\");\r\n//     setDescription(\"\");\r\n//     setCategory(\"\");\r\n//     setSubCategory(\"\");\r\n//     setLink(\"\");\r\n//     setFiles([]);\r\n//     setExistingMedia([]);\r\n//     setDraftId(null);\r\n//   };\r\n\r\n//   const handleSubmit = async (isDraft = false) => {\r\n//     if (!title || !description || !category) {\r\n//       alert(\"Please fill all required fields!\");\r\n//       return;\r\n//     }\r\n  \r\n//     if (!userEmail) {\r\n//       alert(\"Error: User email is missing!\");\r\n//       return;\r\n//     }\r\n  \r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n//     formData.append(\"uploaderEmail\", userEmail);\r\n//     formData.append(\"link\", link);\r\n    \r\n//     files.forEach((file) => formData.append(\"media\", file));\r\n  \r\n//     try {\r\n//       let url, method;\r\n  \r\n//       if (draftId) {\r\n//         // If draft exists, update it\r\n//         url = `http://localhost:3000/posts/update/${draftId}`;\r\n//         method = \"PUT\";\r\n//       } else {\r\n//         // If it's a new post\r\n//         url = \"http://localhost:3000/posts/create-post\";\r\n//         method = \"POST\";\r\n//       }\r\n  \r\n//       const response = await fetch(url, {\r\n//         method: method,\r\n//         body: formData,\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         const errorData = await response.json();\r\n//         throw new Error(errorData.error || \"Unknown error\");\r\n//       }\r\n  \r\n//       alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n  \r\n//       if (!isDraft && draftId) {\r\n//         // If posting, delete the draft after updating\r\n//         await fetch(`http://localhost:3000/draftsview/delete/${draftId}`, { method: \"DELETE\" });\r\n//       }\r\n  \r\n//       resetForm();\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting post:\", error);\r\n//       alert(\"Submission failed. Please try again.\");\r\n//     }\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>{draftId ? \"Edit Draft\" : \"New Post\"}</h2>\r\n//       <form>\r\n//         {/* File Upload */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n//         </div>\r\n\r\n//         {/* Display Uploaded Files */}\r\n//         <div className=\"uploaded-files\">\r\n//           {existingMedia.map((media, index) => (\r\n//             <div key={index} className=\"file-item\">\r\n//               <a href={media.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                 {media.url}\r\n//               </a>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Form Fields */}\r\n//         <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n//         <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n//         <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\r\n\r\n//         {/* Category Selection */}\r\n//         <select value={category} onChange={(e) => { setCategory(e.target.value); setSubCategory(\"\"); }} required>\r\n//           <option value=\"\" disabled>Select a category</option>\r\n//           <option value=\"events\">Events</option>\r\n//           <option value=\"clubs\">Clubs</option>\r\n//           <option value=\"academics\">Academics</option>\r\n//           <option value=\"notices\">Notices</option>\r\n//           <option value=\"skillhub\">Skillhub</option>\r\n//           <option value=\"placements\">Placements</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Selection */}\r\n//         {category && subCategoriesMap[category] ? (\r\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)} disabled={!category}>\r\n//             <option value=\"\" disabled>Select a subcategory</option>\r\n//             {subCategoriesMap[category].map((sub, index) => (\r\n//               <option key={index} value={sub}>{sub}</option>\r\n//             ))}\r\n//           </select>\r\n//         ) : null}\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\r\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\r\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>Cancel</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Newpost.css\";\r\n\r\nconst NewPost = ({ userEmail }) => {\r\n  const [draftId, setDraftId] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const draftIdFromParams = queryParams.get(\"draftId\");\r\n    if (draftIdFromParams) {\r\n      setDraftId(draftIdFromParams);\r\n      fetchDraftData(draftIdFromParams);\r\n    }\r\n  }, [location.search]);\r\n\r\n  const fetchDraftData = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/draftsview/edit/${id}`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch draft\");\r\n      const draft = await response.json();\r\n      setTitle(draft.title);\r\n      setDescription(draft.description);\r\n      setCategory(draft.category);\r\n      setSubCategory(draft.subCategory || \"\");\r\n      setLink(draft.link || \"\");\r\n    } catch (error) {\r\n      console.error(\"Error fetching draft:\", error);\r\n      alert(\"Could not load draft. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setSubCategory(\"\");\r\n    setLink(\"\");\r\n    setFiles([]);\r\n    setDraftId(null);\r\n  };\r\n\r\n  const handleSubmit = async (isDraft = false) => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    if (!userEmail) {\r\n      alert(\"Error: User email is missing!\");\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n    formData.append(\"uploaderEmail\", userEmail);\r\n    formData.append(\"link\", link);\r\n    files.forEach((file) => formData.append(\"media\", file));\r\n\r\n    try {\r\n      let url, method;\r\n      if (draftId) {\r\n        url = `http://localhost:3000/draftsview/update/${draftId}`;\r\n        method = \"PUT\";\r\n      } else {\r\n        url = \"http://localhost:3000/posts/create-post\";\r\n        method = \"POST\";\r\n      }\r\n      const response = await fetch(url, { method, body: formData });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Unknown error\");\r\n      }\r\n      alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n      if (!isDraft && draftId) {\r\n        await fetch(`http://localhost:3000/draftsview/${draftId}`, { method: \"DELETE\" });\r\n      }\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error(\"Error submitting post:\", error);\r\n      alert(\"Submission failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{draftId ? \"Edit Draft\" : \"New Post\"}</h2>\r\n      <form>\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"fileInput\">\r\n            {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n          </label>\r\n          <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n        </div>\r\n\r\n        <div className=\"uploaded-files\">\r\n          {files.map((file, index) => (\r\n            <div key={index} className=\"file-item\">\r\n              <span>{file.name}</span>\r\n              <button type=\"button\" className=\"remove-file\" onClick={() => removeFile(index)}>\r\n                X\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n        <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\r\n\r\n        <select value={category} onChange={(e) => { setCategory(e.target.value); setSubCategory(\"\"); }} required>\r\n          <option value=\"\" disabled>Select a category</option>\r\n          <option value=\"events\">Events</option>\r\n          <option value=\"clubs\">Clubs</option>\r\n          <option value=\"academics\">Academics</option>\r\n          <option value=\"notices\">Notices</option>\r\n          <option value=\"skillhub\">Skillhub</option>\r\n          <option value=\"placements\">Placements</option>\r\n        </select>\r\n\r\n        <div className=\"button-container\">\r\n          <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\r\n          <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\r\n          <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}