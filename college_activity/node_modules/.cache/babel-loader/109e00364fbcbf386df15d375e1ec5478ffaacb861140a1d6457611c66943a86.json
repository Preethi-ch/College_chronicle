{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\studentprofile.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./StudentProfile.css\";\n\n// const StudentProfile = () => {\n//   const [profileImage, setProfileImage] = useState(\n//     \"https://via.placeholder.com/100\" // Default placeholder image\n//   );\n//   const [showOptions, setShowOptions] = useState(false);\n\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       const reader = new FileReader();\n//       reader.onload = () => {\n//         setProfileImage(reader.result);\n//       };\n//       reader.readAsDataURL(file);\n//     }\n//     setShowOptions(false);\n//   };\n\n//   const handleCaptureImage = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       const video = document.createElement(\"video\");\n//       video.srcObject = stream;\n//       video.play();\n\n//       // Wait for the video stream to start\n//       await new Promise((resolve) => (video.onloadedmetadata = resolve));\n\n//       // Create a canvas to capture the video frame\n//       const canvas = document.createElement(\"canvas\");\n//       canvas.width = video.videoWidth;\n//       canvas.height = video.videoHeight;\n//       const context = canvas.getContext(\"2d\");\n//       context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n//       // Stop the video stream\n//       stream.getTracks().forEach((track) => track.stop());\n\n//       // Set the captured image as the profile image\n//       setProfileImage(canvas.toDataURL());\n//     } catch (error) {\n//       console.error(\"Error accessing the webcam:\", error);\n//     }\n//     setShowOptions(false);\n//   };\n\n//   const handleDeleteImage = () => {\n//     setProfileImage(\"https://via.placeholder.com/100\"); // Reset to default\n//     setShowOptions(false);\n//   };\n\n//   return (\n//     <div className=\"profile-container\">\n//       <div className=\"profile-card\">\n//         <div className=\"profile-image-container\">\n//           <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n//           <button\n//             onClick={() => setShowOptions(!showOptions)}\n//             className=\"camera-icon-button\"\n//           >\n//             <img\n//               src=\"/images/camera.jpg\" // Add the camera icon image to your project folder\n//               alt=\"Camera Icon\"\n//               className=\"camera-icon\"\n//             />\n//           </button>\n//         </div>\n//         <h2 className=\"profile-username\">exampleusername</h2>\n//         <p className=\"profile-role\">Student</p>\n//         <div className=\"profile-details\">\n//           <p>\n//             <strong>Name:</strong>\n//           </p>\n//           <p>\n//             <strong>Email:</strong>\n//           </p>\n//           <p>\n//             <strong>Registration No:</strong>\n//           </p>\n//           <p>\n//             <strong>Department:</strong>\n//           </p>\n//           <p>\n//             <strong>Phone Number:</strong>\n//           </p>\n//         </div>\n//         {showOptions && (\n//           <div className=\"options-menu\">\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={handleImageUpload}\n//               className=\"upload-button\"\n//             />\n//             <div className=\"capture-delete-row\">\n//               <button onClick={handleCaptureImage} className=\"capture-button\">\n//                 Capture Image\n//               </button>\n//               <button onClick={handleDeleteImage} className=\"delete-button\">\n//                 <img\n//                   src=\"/images/delete.jpg\" // Replace with the path to your dustbin icon image\n//                   alt=\"Delete\"\n//                   className=\"dustbin-icon\"\n//                 />\n//               </button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default StudentProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"./api/axiosInstance\"; // Ensure the Axios instance is correctly configured\nimport \"./StudentProfile.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentProfile = () => {\n  _s();\n  const [profileImage, setProfileImage] = useState(\"https://via.placeholder.com/100\");\n  const [showOptions, setShowOptions] = useState(false);\n  const [studentDetails, setStudentDetails] = useState({\n    name: \"\",\n    email: \"\",\n    studentid: \"\",\n    branch: \"\",\n    phoneno: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true); // Loading state for fetching data\n\n  useEffect(() => {\n    // Fetch student details on component mount\n    const fetchStudentDetails = async () => {\n      try {\n        const email = localStorage.getItem(\"email\"); // Assuming the email is stored in localStorage after login\n        if (!email) {\n          setError(\"No email found. Please log in again.\");\n          return;\n        }\n        const response = await axiosInstance.get(`/studentinfo/${email}`);\n        setStudentDetails(response.data); // Update state with student details\n        setIsLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching student details:\", err);\n        setError(\"Failed to fetch student details. Please try again later.\");\n        setIsLoading(false);\n      }\n    };\n    fetchStudentDetails();\n  }, []);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => setProfileImage(reader.result);\n      reader.readAsDataURL(file);\n    }\n    setShowOptions(false);\n  };\n  const handleCaptureImage = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      const video = document.createElement(\"video\");\n      video.srcObject = stream;\n      video.play();\n      await new Promise(resolve => video.onloadedmetadata = resolve);\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      stream.getTracks().forEach(track => track.stop());\n      setProfileImage(canvas.toDataURL());\n    } catch (error) {\n      console.error(\"Error accessing the webcam:\", error);\n    }\n    setShowOptions(false);\n  };\n  const handleDeleteImage = () => {\n    setProfileImage(\"https://via.placeholder.com/100\");\n    setShowOptions(false);\n  };\n\n  // Handle updating student profile (e.g., name, phone, etc.)\n  const handleUpdateProfile = async updatedDetails => {\n    try {\n      const email = localStorage.getItem(\"email\"); // Assuming the email is stored in localStorage after login\n      if (!email) {\n        setError(\"No email found. Please log in again.\");\n        return;\n      }\n      const response = await axiosInstance.put(`/studentinfo/${email}`, updatedDetails);\n      setStudentDetails(response.data); // Update state with updated student details\n    } catch (err) {\n      console.error(\"Error updating student details:\", err);\n      setError(\"Failed to update student details. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: profileImage,\n          alt: \"Profile\",\n          className: \"profile-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowOptions(!showOptions),\n          className: \"camera-icon-button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/camera.jpg\",\n            alt: \"Camera Icon\",\n            className: \"camera-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"profile-username\",\n          children: studentDetails.name || \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-role\",\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), \" \", studentDetails.name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), \" \", studentDetails.email || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Student ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), \" \", studentDetails.studentid || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Department:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), \" \", studentDetails.branch || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Phone Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), \" \", studentDetails.phoneno || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          className: \"upload-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"capture-delete-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCaptureImage,\n            className: \"capture-button\",\n            children: \"Capture Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteImage,\n            className: \"delete-button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/delete.jpg\",\n              alt: \"Delete\",\n              className: \"dustbin-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-profile-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: studentDetails.name,\n          onChange: e => setStudentDetails({\n            ...studentDetails,\n            name: e.target.value\n          }),\n          placeholder: \"Update Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: studentDetails.phoneno,\n          onChange: e => setStudentDetails({\n            ...studentDetails,\n            phoneno: e.target.value\n          }),\n          placeholder: \"Update Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-button\",\n          onClick: () => handleUpdateProfile(studentDetails),\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentProfile, \"WQqjr15fs9TpuUrOYMYXBhAugu8=\");\n_c = StudentProfile;\nexport default StudentProfile;\nvar _c;\n$RefreshReg$(_c, \"StudentProfile\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentProfile","_s","profileImage","setProfileImage","showOptions","setShowOptions","studentDetails","setStudentDetails","name","email","studentid","branch","phoneno","error","setError","isLoading","setIsLoading","fetchStudentDetails","localStorage","getItem","response","get","data","err","console","handleImageUpload","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","handleCaptureImage","stream","navigator","mediaDevices","getUserMedia","video","document","createElement","srcObject","play","Promise","resolve","onloadedmetadata","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","getTracks","forEach","track","stop","toDataURL","handleDeleteImage","handleUpdateProfile","updatedDetails","put","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","accept","onChange","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/studentprofile.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./StudentProfile.css\";\r\n\r\n// const StudentProfile = () => {\r\n//   const [profileImage, setProfileImage] = useState(\r\n//     \"https://via.placeholder.com/100\" // Default placeholder image\r\n//   );\r\n//   const [showOptions, setShowOptions] = useState(false);\r\n\r\n//   const handleImageUpload = (e) => {\r\n//     const file = e.target.files[0];\r\n//     if (file) {\r\n//       const reader = new FileReader();\r\n//       reader.onload = () => {\r\n//         setProfileImage(reader.result);\r\n//       };\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//     setShowOptions(false);\r\n//   };\r\n\r\n//   const handleCaptureImage = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n//       const video = document.createElement(\"video\");\r\n//       video.srcObject = stream;\r\n//       video.play();\r\n\r\n//       // Wait for the video stream to start\r\n//       await new Promise((resolve) => (video.onloadedmetadata = resolve));\r\n\r\n//       // Create a canvas to capture the video frame\r\n//       const canvas = document.createElement(\"canvas\");\r\n//       canvas.width = video.videoWidth;\r\n//       canvas.height = video.videoHeight;\r\n//       const context = canvas.getContext(\"2d\");\r\n//       context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n//       // Stop the video stream\r\n//       stream.getTracks().forEach((track) => track.stop());\r\n\r\n//       // Set the captured image as the profile image\r\n//       setProfileImage(canvas.toDataURL());\r\n//     } catch (error) {\r\n//       console.error(\"Error accessing the webcam:\", error);\r\n//     }\r\n//     setShowOptions(false);\r\n//   };\r\n\r\n//   const handleDeleteImage = () => {\r\n//     setProfileImage(\"https://via.placeholder.com/100\"); // Reset to default\r\n//     setShowOptions(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <div className=\"profile-card\">\r\n//         <div className=\"profile-image-container\">\r\n//           <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n//           <button\r\n//             onClick={() => setShowOptions(!showOptions)}\r\n//             className=\"camera-icon-button\"\r\n//           >\r\n//             <img\r\n//               src=\"/images/camera.jpg\" // Add the camera icon image to your project folder\r\n//               alt=\"Camera Icon\"\r\n//               className=\"camera-icon\"\r\n//             />\r\n//           </button>\r\n//         </div>\r\n//         <h2 className=\"profile-username\">exampleusername</h2>\r\n//         <p className=\"profile-role\">Student</p>\r\n//         <div className=\"profile-details\">\r\n//           <p>\r\n//             <strong>Name:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Email:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Registration No:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Department:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Phone Number:</strong>\r\n//           </p>\r\n//         </div>\r\n//         {showOptions && (\r\n//           <div className=\"options-menu\">\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               onChange={handleImageUpload}\r\n//               className=\"upload-button\"\r\n//             />\r\n//             <div className=\"capture-delete-row\">\r\n//               <button onClick={handleCaptureImage} className=\"capture-button\">\r\n//                 Capture Image\r\n//               </button>\r\n//               <button onClick={handleDeleteImage} className=\"delete-button\">\r\n//                 <img\r\n//                   src=\"/images/delete.jpg\" // Replace with the path to your dustbin icon image\r\n//                   alt=\"Delete\"\r\n//                   className=\"dustbin-icon\"\r\n//                 />\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default StudentProfile;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"./api/axiosInstance\"; // Ensure the Axios instance is correctly configured\r\nimport \"./StudentProfile.css\";\r\n\r\nconst StudentProfile = () => {\r\n  const [profileImage, setProfileImage] = useState(\"https://via.placeholder.com/100\");\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [studentDetails, setStudentDetails] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    studentid: \"\",\r\n    branch: \"\",\r\n    phoneno: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true); // Loading state for fetching data\r\n\r\n  useEffect(() => {\r\n    // Fetch student details on component mount\r\n    const fetchStudentDetails = async () => {\r\n      try {\r\n        const email = localStorage.getItem(\"email\"); // Assuming the email is stored in localStorage after login\r\n        if (!email) {\r\n          setError(\"No email found. Please log in again.\");\r\n          return;\r\n        }\r\n\r\n        const response = await axiosInstance.get(`/studentinfo/${email}`);\r\n        setStudentDetails(response.data); // Update state with student details\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error fetching student details:\", err);\r\n        setError(\"Failed to fetch student details. Please try again later.\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStudentDetails();\r\n  }, []);\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => setProfileImage(reader.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n    setShowOptions(false);\r\n  };\r\n\r\n  const handleCaptureImage = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      const video = document.createElement(\"video\");\r\n      video.srcObject = stream;\r\n      video.play();\r\n\r\n      await new Promise((resolve) => (video.onloadedmetadata = resolve));\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const context = canvas.getContext(\"2d\");\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n      stream.getTracks().forEach((track) => track.stop());\r\n      setProfileImage(canvas.toDataURL());\r\n    } catch (error) {\r\n      console.error(\"Error accessing the webcam:\", error);\r\n    }\r\n    setShowOptions(false);\r\n  };\r\n\r\n  const handleDeleteImage = () => {\r\n    setProfileImage(\"https://via.placeholder.com/100\");\r\n    setShowOptions(false);\r\n  };\r\n\r\n  // Handle updating student profile (e.g., name, phone, etc.)\r\n  const handleUpdateProfile = async (updatedDetails) => {\r\n    try {\r\n      const email = localStorage.getItem(\"email\"); // Assuming the email is stored in localStorage after login\r\n      if (!email) {\r\n        setError(\"No email found. Please log in again.\");\r\n        return;\r\n      }\r\n\r\n      const response = await axiosInstance.put(`/studentinfo/${email}`, updatedDetails);\r\n      setStudentDetails(response.data); // Update state with updated student details\r\n    } catch (err) {\r\n      console.error(\"Error updating student details:\", err);\r\n      setError(\"Failed to update student details. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-card\">\r\n        <div className=\"profile-image-container\">\r\n          <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n          <button\r\n            onClick={() => setShowOptions(!showOptions)}\r\n            className=\"camera-icon-button\"\r\n          >\r\n            <img\r\n              src=\"/images/camera.jpg\"\r\n              alt=\"Camera Icon\"\r\n              className=\"camera-icon\"\r\n            />\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <>\r\n            <h2 className=\"profile-username\">{studentDetails.name || \"N/A\"}</h2>\r\n            <p className=\"profile-role\">Student</p>\r\n            <div className=\"profile-details\">\r\n              <p>\r\n                <strong>Name:</strong> {studentDetails.name || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong> {studentDetails.email || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Student ID:</strong> {studentDetails.studentid || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Department:</strong> {studentDetails.branch || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Phone Number:</strong> {studentDetails.phoneno || \"N/A\"}\r\n              </p>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        {showOptions && (\r\n          <div className=\"options-menu\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleImageUpload}\r\n              className=\"upload-button\"\r\n            />\r\n            <div className=\"capture-delete-row\">\r\n              <button onClick={handleCaptureImage} className=\"capture-button\">\r\n                Capture Image\r\n              </button>\r\n              <button onClick={handleDeleteImage} className=\"delete-button\">\r\n                <img\r\n                  src=\"/images/delete.jpg\"\r\n                  alt=\"Delete\"\r\n                  className=\"dustbin-icon\"\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"update-profile-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={studentDetails.name}\r\n            onChange={(e) =>\r\n              setStudentDetails({ ...studentDetails, name: e.target.value })\r\n            }\r\n            placeholder=\"Update Name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={studentDetails.phoneno}\r\n            onChange={(e) =>\r\n              setStudentDetails({ ...studentDetails, phoneno: e.target.value })\r\n            }\r\n            placeholder=\"Update Phone Number\"\r\n          />\r\n          <button\r\n            className=\"update-button\"\r\n            onClick={() => handleUpdateProfile(studentDetails)}\r\n          >\r\n            Update Profile\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}