{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Postspage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"./api/axiosfetch\";\nimport \"./Postspage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Postspage = ({\n  userEmail\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let email = userEmail || localStorage.getItem(\"userEmail\");\n    console.log(\"üîç User email being used:\", email);\n    if (!email) {\n      console.error(\"‚ö†Ô∏è No user email available, skipping fetch.\");\n      return;\n    }\n    const fetchPosts = async () => {\n      try {\n        console.log(\"üì¢ Fetching posts for:\", email);\n        const url = `/postview/${encodeURIComponent(email)}`;\n        console.log(\"üöÄ Requesting:\", url);\n        const response = await axiosInstance.get(url);\n        console.log(\"‚úÖ Posts fetched:\", response.data);\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [userEmail]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-post-button\",\n      onClick: () => navigate(\"/Newpost\"),\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-grid\",\n        children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\n        .map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-item\",\n          children: [post.media.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"feed-image-item\",\n            src: post.media[0].url,\n            alt: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feed-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Postspage, \"wlX5Q2vHIOaliHXiQZ2fNKb4Q3U=\", false, function () {\n  return [useNavigate];\n});\n_c = Postspage;\nexport default Postspage;\nvar _c;\n$RefreshReg$(_c, \"Postspage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","jsxDEV","_jsxDEV","Postspage","userEmail","_s","posts","setPosts","navigate","email","localStorage","getItem","console","log","error","fetchPosts","url","encodeURIComponent","response","get","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","sort","a","b","Date","createdAt","map","post","media","src","alt","title","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Postspage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"./api/axiosfetch\";\r\nimport \"./Postspage.css\";\r\n\r\nconst Postspage = ({ userEmail }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let email = userEmail || localStorage.getItem(\"userEmail\");\r\n    console.log(\"üîç User email being used:\", email);\r\n\r\n    if (!email) {\r\n      console.error(\"‚ö†Ô∏è No user email available, skipping fetch.\");\r\n      return;\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n      try {\r\n        console.log(\"üì¢ Fetching posts for:\", email);\r\n        const url = `/postview/${encodeURIComponent(email)}`;\r\n        console.log(\"üöÄ Requesting:\", url);\r\n    \r\n        const response = await axiosInstance.get(url);\r\n        console.log(\"‚úÖ Posts fetched:\", response.data);\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error(\"‚ùå Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [userEmail]);\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1>User Posts</h1>\r\n\r\n      {/* New Post Button */}\r\n      <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\r\n         New Post\r\n      </button>\r\n\r\n      <div className=\"feed-section\">\r\n        <h2>Feed</h2>\r\n        <div className=\"feed-grid\">\r\n          {posts.length === 0 ? (\r\n            <p>No posts available.</p>\r\n          ) : (\r\n            posts\r\n              .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by newest first\r\n              .map((post) => (\r\n                <div key={post._id} className=\"feed-item\">\r\n                  {post.media.length > 0 && (\r\n                    <img\r\n                      className=\"feed-image-item\"\r\n                      src={post.media[0].url}\r\n                      alt={post.title}\r\n                    />\r\n                  )}\r\n                  <div className=\"feed-content\">\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.description}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postspage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}