{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./Newpost.css\";\n\n// const NewPost = () => {\n//   const [fileNames, setFileNames] = useState([]); // Array to store file names\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n\n//   // Handle file selection\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0]; // Get the selected file\n//     if (file) {\n//       // Add the selected file's name to the list of file names\n//       setFileNames((prevFileNames) => [...prevFileNames, file.name]);\n//     }\n//   };\n\n//   // Handle post submission\n//   const handlePost = () => {\n//     alert(\"Post submitted successfully!\");\n//     console.log({\n//       title,\n//       description,\n//       category,\n//       subCategory,\n//       fileNames,\n//     });\n//   };\n\n//   // Handle saving the post as a draft\n//   const handleSaveDraft = () => {\n//     alert(\"Post saved as draft!\");\n//     console.log({\n//       title,\n//       description,\n//       category,\n//       subCategory,\n//       fileNames,\n//     });\n//   };\n\n//   // Remove file from the list\n//   const handleRemoveFile = (fileName) => {\n//     setFileNames((prevFileNames) => prevFileNames.filter((name) => name !== fileName));\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File upload section */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {fileNames.length > 0\n//               ? fileNames.join(\", \") // Display all uploaded file names\n//               : \"Click to browse or drop files here\"}\n//           </label>\n//           <input\n//             type=\"file\"\n//             id=\"fileInput\"\n//             onChange={handleFileChange}\n//             style={{ display: \"none\" }}\n//           />\n//         </div>\n\n//         {/* Title Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title for the file\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n\n//         {/* Description Input */}\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         {/* Category Selection */}\n//         <select\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>Select a category</option>\n//           <option value=\"category1\">Category 1</option>\n//           <option value=\"category2\">Category 2</option>\n//         </select>\n\n//         {/* Subcategory Selection */}\n//         <select\n//           value={subCategory}\n//           onChange={(e) => setSubCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>Select a subcategory</option>\n//           <option value=\"subcategory1\">Subcategory 1</option>\n//           <option value=\"subcategory2\">Subcategory 2</option>\n//         </select>\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button\n//             type=\"button\"\n//             className=\"save-draft\"\n//             onClick={handleSaveDraft}\n//           >\n//             Save as Draft\n//           </button>\n//           <button\n//             type=\"button\"\n//             className=\"post\"\n//             onClick={handlePost}\n//           >\n//             Post\n//           </button>\n//         </div>\n\n//         {/* Display the list of uploaded files with Remove option */}\n//         {fileNames.length > 0 && (\n//           <div className=\"uploaded-files\">\n//             <h4>Uploaded Files:</h4>\n//             <ul>\n//               {fileNames.map((fileName, index) => (\n//                 <li key={index}>\n//                   {fileName}\n//                   <span\n//                     onClick={() => handleRemoveFile(fileName)}\n//                     className=\"remove-file\"\n//                   >\n//                     Ã—\n//                   </span>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Newpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = () => {\n  _s();\n  const [fileNames, setFileNames] = useState([]); // Array to store selected files\n  const [files, setFiles] = useState([]); // Array to store actual file objects\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [uploaderEmail] = useState(\"uploader@example.com\"); // Replace with actual email\n\n  // Handle file selection\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setFileNames(prevFileNames => [...prevFileNames, ...selectedFiles.map(file => file.name)]);\n    setFiles(prevFiles => [...prevFiles, ...selectedFiles]);\n  };\n\n  // Remove file from the list\n  const handleRemoveFile = fileName => {\n    setFileNames(prevFileNames => prevFileNames.filter(name => name !== fileName));\n    setFiles(prevFiles => prevFiles.filter(file => file.name !== fileName));\n  };\n\n  // Handle form submission\n  const handlePost = async () => {\n    const formData = new FormData();\n    files.forEach(file => formData.append(\"media\", file)); // Append files\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"uploaderEmail\", uploaderEmail);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    try {\n      const response = await axios.post(\"/create-post\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Post submitted successfully!\");\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n      alert(\"Failed to submit post.\");\n    }\n  };\n\n  // Handle saving the post as a draft\n  const handleSaveDraft = () => {\n    alert(\"Post saved as draft!\");\n    console.log({\n      title,\n      description,\n      category,\n      subCategory,\n      fileNames\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: fileNames.length > 0 ? fileNames.join(\", \") : \"Click to browse or drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          multiple: true,\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title for the file\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"category1\",\n          children: \"Category 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"category2\",\n          children: \"Category 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: subCategory,\n        onChange: e => setSubCategory(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"subcategory1\",\n          children: \"Subcategory 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"subcategory2\",\n          children: \"Subcategory 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"save-draft\",\n          onClick: handleSaveDraft,\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"post\",\n          onClick: handlePost,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), fileNames.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Uploaded Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: fileNames.map((fileName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [fileName, /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => handleRemoveFile(fileName),\n              className: \"remove-file\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"dmaIZM4kbK0KzRvJJcibQNQk8R4=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewPost","_s","fileNames","setFileNames","files","setFiles","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","uploaderEmail","handleFileChange","event","selectedFiles","Array","from","target","prevFileNames","map","file","name","prevFiles","handleRemoveFile","fileName","filter","handlePost","formData","FormData","forEach","append","response","post","headers","alert","console","log","data","error","handleSaveDraft","className","children","_jsxFileName","lineNumber","columnNumber","htmlFor","length","join","type","id","multiple","onChange","style","display","placeholder","value","e","required","disabled","onClick","index","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Newpost.css\";\r\n\r\n// const NewPost = () => {\r\n//   const [fileNames, setFileNames] = useState([]); // Array to store file names\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n\r\n//   // Handle file selection\r\n//   const handleFileChange = (event) => {\r\n//     const file = event.target.files[0]; // Get the selected file\r\n//     if (file) {\r\n//       // Add the selected file's name to the list of file names\r\n//       setFileNames((prevFileNames) => [...prevFileNames, file.name]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle post submission\r\n//   const handlePost = () => {\r\n//     alert(\"Post submitted successfully!\");\r\n//     console.log({\r\n//       title,\r\n//       description,\r\n//       category,\r\n//       subCategory,\r\n//       fileNames,\r\n//     });\r\n//   };\r\n\r\n//   // Handle saving the post as a draft\r\n//   const handleSaveDraft = () => {\r\n//     alert(\"Post saved as draft!\");\r\n//     console.log({\r\n//       title,\r\n//       description,\r\n//       category,\r\n//       subCategory,\r\n//       fileNames,\r\n//     });\r\n//   };\r\n\r\n//   // Remove file from the list\r\n//   const handleRemoveFile = (fileName) => {\r\n//     setFileNames((prevFileNames) => prevFileNames.filter((name) => name !== fileName));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File upload section */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {fileNames.length > 0\r\n//               ? fileNames.join(\", \") // Display all uploaded file names\r\n//               : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"fileInput\"\r\n//             onChange={handleFileChange}\r\n//             style={{ display: \"none\" }}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Title Input */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title for the file\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         {/* Description Input */}\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         {/* Category Selection */}\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => setCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>Select a category</option>\r\n//           <option value=\"category1\">Category 1</option>\r\n//           <option value=\"category2\">Category 2</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Selection */}\r\n//         <select\r\n//           value={subCategory}\r\n//           onChange={(e) => setSubCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>Select a subcategory</option>\r\n//           <option value=\"subcategory1\">Subcategory 1</option>\r\n//           <option value=\"subcategory2\">Subcategory 2</option>\r\n//         </select>\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button\r\n//             type=\"button\"\r\n//             className=\"save-draft\"\r\n//             onClick={handleSaveDraft}\r\n//           >\r\n//             Save as Draft\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             className=\"post\"\r\n//             onClick={handlePost}\r\n//           >\r\n//             Post\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Display the list of uploaded files with Remove option */}\r\n//         {fileNames.length > 0 && (\r\n//           <div className=\"uploaded-files\">\r\n//             <h4>Uploaded Files:</h4>\r\n//             <ul>\r\n//               {fileNames.map((fileName, index) => (\r\n//                 <li key={index}>\r\n//                   {fileName}\r\n//                   <span\r\n//                     onClick={() => handleRemoveFile(fileName)}\r\n//                     className=\"remove-file\"\r\n//                   >\r\n//                     Ã—\r\n//                   </span>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Newpost.css\";\r\n\r\nconst NewPost = () => {\r\n  const [fileNames, setFileNames] = useState([]); // Array to store selected files\r\n  const [files, setFiles] = useState([]); // Array to store actual file objects\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [uploaderEmail] = useState(\"uploader@example.com\"); // Replace with actual email\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFileNames((prevFileNames) => [\r\n      ...prevFileNames,\r\n      ...selectedFiles.map((file) => file.name),\r\n    ]);\r\n    setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n  };\r\n\r\n  // Remove file from the list\r\n  const handleRemoveFile = (fileName) => {\r\n    setFileNames((prevFileNames) => prevFileNames.filter((name) => name !== fileName));\r\n    setFiles((prevFiles) => prevFiles.filter((file) => file.name !== fileName));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handlePost = async () => {\r\n    const formData = new FormData();\r\n    files.forEach((file) => formData.append(\"media\", file)); // Append files\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"uploaderEmail\", uploaderEmail);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n\r\n    try {\r\n      const response = await axios.post(\"/create-post\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(\"Post submitted successfully!\");\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Failed to submit post.\");\r\n    }\r\n  };\r\n\r\n  // Handle saving the post as a draft\r\n  const handleSaveDraft = () => {\r\n    alert(\"Post saved as draft!\");\r\n    console.log({\r\n      title,\r\n      description,\r\n      category,\r\n      subCategory,\r\n      fileNames,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>New Post</h2>\r\n      <form>\r\n        {/* File upload section */}\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"fileInput\">\r\n            {fileNames.length > 0\r\n              ? fileNames.join(\", \")\r\n              : \"Click to browse or drop files here\"}\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"fileInput\"\r\n            multiple\r\n            onChange={handleFileChange}\r\n            style={{ display: \"none\" }}\r\n          />\r\n        </div>\r\n\r\n        {/* Title Input */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter title for the file\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {/* Description Input */}\r\n        <textarea\r\n          placeholder=\"Write a description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        ></textarea>\r\n\r\n        {/* Category Selection */}\r\n        <select\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>Select a category</option>\r\n          <option value=\"category1\">Category 1</option>\r\n          <option value=\"category2\">Category 2</option>\r\n        </select>\r\n\r\n        {/* Subcategory Selection */}\r\n        <select\r\n          value={subCategory}\r\n          onChange={(e) => setSubCategory(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>Select a subcategory</option>\r\n          <option value=\"subcategory1\">Subcategory 1</option>\r\n          <option value=\"subcategory2\">Subcategory 2</option>\r\n        </select>\r\n\r\n        {/* Buttons */}\r\n        <div className=\"button-container\">\r\n          <button type=\"button\" className=\"save-draft\" onClick={handleSaveDraft}>\r\n            Save as Draft\r\n          </button>\r\n          <button type=\"button\" className=\"post\" onClick={handlePost}>\r\n            Post\r\n          </button>\r\n        </div>\r\n\r\n        {/* Display the list of uploaded files with Remove option */}\r\n        {fileNames.length > 0 && (\r\n          <div className=\"uploaded-files\">\r\n            <h4>Uploaded Files:</h4>\r\n            <ul>\r\n              {fileNames.map((fileName, index) => (\r\n                <li key={index}>\r\n                  {fileName}\r\n                  <span\r\n                    onClick={() => handleRemoveFile(fileName)}\r\n                    className=\"remove-file\"\r\n                  >\r\n                    Ã—\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}