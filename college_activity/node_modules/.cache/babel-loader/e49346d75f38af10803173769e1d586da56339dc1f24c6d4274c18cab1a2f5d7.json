{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Dashboardcontent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [activeCategory, setActiveCategory] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         console.log(\"Fetching posts...\");\n//         const response = await fetch(\"http://localhost:3000/fetch/\");\n//         const data = await response.json();\n//         console.log(\"Fetched posts data:\", data);\n//         setPosts(data);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, []);\n\n//   const categories = []; // Define categories if needed\n\n//   return (\n//     <div className=\"dashboard-container-dashboard\">\n//       <h1>Dashboard</h1>\n\n//       {/* CATEGORY SECTION */}\n//       <div className=\"category-container-dashboard\">\n//         {categories.map((category) => (\n//           <div\n//             key={category.name}\n//             className=\"category-wrapper-dashboard\"\n//             onMouseEnter={() => setActiveCategory(category.name)}\n//             onMouseLeave={() => setActiveCategory(null)}\n//           >\n//             <div className=\"category-icon-dashboard\">\n//               <img\n//                 src={category.image}\n//                 alt={`${category.name} Icon`}\n//                 className=\"category-image-dashboard\"\n//               />\n//             </div>\n//             <div className=\"category-name-dashboard\">{category.name}</div>\n//             {category.subcategories.length > 0 &&\n//               activeCategory === category.name && (\n//                 <div className=\"sub-category-container-dashboard\">\n//                   <ul>\n//                     {category.subcategories.map((subcategory, subIndex) => (\n//                       <li key={subIndex} className=\"subcategory-item-dashboard\">\n//                         {subcategory === \"RMF\" ? (\n//                           <Link to=\"/rmfpage\" className=\"subcategory-link-dashboard\">\n//                             RMF\n//                           </Link>\n//                         ) : (\n//                           subcategory\n//                         )}\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* FEED SECTION */}\n//       <div className=\"feed-section-dashboard\">\n//         <h2>Feed</h2>\n//         <div className=\"feed-grid-dashboard\">\n//           {posts\n//             .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by date\n//             .map((post, index) => (\n//               <div className=\"feed-item-dashboard\" key={index}>\n//                 <div className=\"feed-image-dashboard\">\n//                   {post.media.length > 0 && post.media[0].url && (\n//                     <Carousel\n//                       showThumbs={false}\n//                       infiniteLoop={true}\n//                       autoPlay={true}\n//                       interval={5000} // Adjusted interval to slow down autoplay\n//                       showStatus={false}\n//                     >\n//                       {post.media.map((media, idx) => {\n//                         if (\n//                           media.type === \"image/jpeg\" ||\n//                           media.type === \"image/png\" ||\n//                           media.type === \"image/gif\"\n//                         ) {\n//                           return (\n//                             <div key={idx}>\n//                               <img\n//                                 src={media.url}\n//                                 alt={`${post.title} ${idx}`}\n//                                 style={{ objectFit: \"cover\", width: \"100%\" }}\n//                               />\n//                             </div>\n//                           );\n//                         } else if (media.type === \"application/pdf\") {\n//                           return (\n//                             <div key={idx} className=\"pdf-container-dashboard\">\n//                               <iframe\n//                                 src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                 title=\"PDF Viewer\"\n//                                 width=\"100%\"\n//                                 height=\"500px\"\n//                                 style={{ border: \"none\" }}\n//                               ></iframe>\n//                             </div>\n//                           );\n//                         } else if (media.type === \"video/mp4\") {\n//                           return (\n//                             <div key={idx} className=\"video-container-dashboard\">\n//                               <video\n//                                 src={media.url}\n//                                 controls\n//                                 style={{ width: \"100%\", height: \"auto\" }}\n//                               />\n//                             </div>\n//                           );\n//                         }\n//                         return null;\n//                       })}\n//                     </Carousel>\n//                   )}\n//                 </div>\n//                 <div className=\"feed-content-dashboard\">\n//                   <h3>{post.title}</h3>\n//                   <p>{post.description}</p>\n//                   {post.link && (\n//                     <a\n//                       href={post.link}\n//                       target=\"_blank\"\n//                       rel=\"noopener noreferrer\"\n//                       className=\"post-link-dashboard\"\n//                     >\n//                       {post.link}\n//                     </a>\n//                   )}\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:3000/fetch/\");\n//         const data = await response.json();\n//         setPosts(data);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, []);\n\n//   const filteredPosts = posts.filter(post => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some(value => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(item => typeof item === \"string\" && item.toLowerCase().includes(searchString));\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   return (\n//     <div className=\"outer-box-dashboard\">\n//       <div className=\"left-container-dashboard\">\n//         <div className=\"feed-section-dashboard\">\n//           <h2>Feed</h2>\n//           <div className=\"feed-grid-dashboard\">\n//             {sortedPosts.map((post, index) => (\n//               <div className=\"feed-item-dashboard\" key={index}>\n//                 <div className=\"feed-image-dashboard\">\n//                   {post.media.length > 0 && post.media[0].url && (\n//                     <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                       {post.media.map((media, idx) => (\n//                         <div key={idx}>\n//                           {media.type.includes(\"image\") ? (\n//                             <img src={media.url} alt={post.title} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                           ) : media.type.includes(\"video\") ? (\n//                             <video src={media.url} controls style={{ width: \"100%\" }} />\n//                           ) : null}\n//                         </div>\n//                       ))}\n//                     </Carousel>\n//                   )}\n//                 </div>\n//                 <div className=\"feed-content-dashboard\">\n//                   <h3>{post.title}</h3>\n//                   <p>{post.description}</p>\n//                   {post.link && (\n//                     <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link-dashboard\">\n//                       {post.link}\n//                     </a>\n//                   )}\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n\n//         {/* Additional Feed Section */}\n//         <div className=\"feed-section-postpage-dashboard\">\n//           <h2>Feed</h2>\n//           <div className=\"feed-grid-postpage-dashboard\">\n//             {posts.length === 0 ? (\n//               <p>No posts available.</p>\n//             ) : (\n//               posts.map((post) => (\n//                 <div className=\"feed-item-postpage-dashboard\" key={post._id}>\n//                   <div className=\"feed-image-postpage-dashboard\">\n//                     {post.media.length > 0 && post.media[0].url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => {\n//                           if (media.type.startsWith(\"image/\")) {\n//                             return (\n//                               <div key={idx}>\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             );\n//                           } else if (media.type === \"application/pdf\") {\n//                             return (\n//                               <div key={idx} className=\"pdf-container-postpage-dashboard\">\n//                                 <iframe src={`https://docs.google.com/gview?url=${media.url}&embedded=true`} title=\"PDF Viewer\" width=\"100%\" height=\"500px\" style={{ border: \"none\" }}></iframe>\n//                               </div>\n//                             );\n//                           } else if (media.type === \"video/mp4\") {\n//                             return (\n//                               <div key={idx} className=\"video-container-postpage-dashboard\">\n//                                 <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                               </div>\n//                             );\n//                           }\n//                           return null;\n//                         })}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content-postpage-dashboard\">\n//                     <h3>{post.title}</h3>\n//                     <p>{post.description}</p>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link-postpage-dashboard\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./DashboardContent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContent = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [sortOrder, setSortOrder] = useState(\"desc\");\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n\n  // Fetch Posts Based on Selected Filters\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\n        if (selectedCategory || selectedSubcategory) {\n          const params = new URLSearchParams();\n          if (selectedCategory) params.append(\"category\", selectedCategory);\n          if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n          url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n        }\n        const response = await fetch(url);\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [selectedCategory, selectedSubcategory]);\n\n  // Filtered and Sorted Posts\n  const filteredPosts = posts.filter(post => {\n    const searchString = searchTerm.toLowerCase();\n    const categoryMatch = selectedCategory ? post.category === selectedCategory : true;\n    const subcategoryMatch = selectedSubcategory ? post.subcategory === selectedSubcategory : true;\n    const searchMatch = Object.values(post).some(value => {\n      if (typeof value === \"string\") {\n        return value.toLowerCase().includes(searchString);\n      } else if (Array.isArray(value)) {\n        return value.some(item => typeof item === \"string\" && item.toLowerCase().includes(searchString));\n      }\n      return false;\n    });\n    return categoryMatch && subcategoryMatch && searchMatch;\n  });\n  const sortedPosts = filteredPosts.sort((a, b) => {\n    return sortOrder === \"desc\" ? new Date(b.createdAt) - new Date(a.createdAt) : new Date(a.createdAt) - new Date(b.createdAt);\n  });\n\n  // Category and Subcategory Structure\n  const categories = [{\n    name: \"Club\",\n    subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"sports\"],\n    image: \"/images/clubs-image.jpg\"\n  }, {\n    name: \"Academics\",\n    subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n    image: \"/images/academic-excellence.jpg\"\n  }, {\n    name: \"Notices\",\n    subcategories: [],\n    image: \"/images/notice.jpg\"\n  }, {\n    name: \"Skill Hub\",\n    subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n    image: \"/images/skill-hub.jpg\"\n  }, {\n    name: \"Events\",\n    subcategories: [],\n    image: \"/images/events-icon.jpg\"\n  }, {\n    name: \"Placements\",\n    subcategories: [],\n    image: \"/images/placements.jpg\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-container\",\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-wrapper\",\n              onMouseEnter: () => setActiveCategory(category.name),\n              onMouseLeave: () => setActiveCategory(null),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: category.image,\n                  alt: `${category.name} Icon`,\n                  className: \"category-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-name\",\n                children: category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), category.subcategories.length > 0 && activeCategory === category.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-category-container\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: category.subcategories.map((subcategory, subIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"subcategory-item\",\n                    onClick: () => {\n                      setSelectedCategory(category.name);\n                      setSelectedSubcategory(subcategory);\n                    },\n                    children: subcategory\n                  }, subIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 23\n              }, this)]\n            }, category.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-bar\",\n            placeholder: \"Search posts...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search\",\n            onClick: () => setSearchTerm(\"\"),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: () => setShowFilterOptions(!showFilterOptions),\n              children: \"Filter \\u2303\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this), showFilterOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSortOrder(\"desc\");\n                  setShowFilterOptions(false);\n                },\n                children: \"Newest First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSortOrder(\"asc\");\n                  setShowFilterOptions(false);\n                },\n                children: \"Oldest First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-grid\",\n          children: sortedPosts.length > 0 ? sortedPosts.map((post, index) => {\n            var _post$media, _post$media$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feed-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed-image\",\n                children: ((_post$media = post.media) === null || _post$media === void 0 ? void 0 : _post$media.length) > 0 && ((_post$media$ = post.media[0]) === null || _post$media$ === void 0 ? void 0 : _post$media$.url) && /*#__PURE__*/_jsxDEV(Carousel, {\n                  showThumbs: false,\n                  infiniteLoop: true,\n                  autoPlay: true,\n                  interval: 5000,\n                  showStatus: false,\n                  children: post.media.map((media, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: media.type.startsWith(\"image/\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: media.url,\n                      alt: `${post.title} ${idx}`,\n                      style: {\n                        objectFit: \"cover\",\n                        width: \"100%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 31\n                    }, this) : media.type === \"video/mp4\" ? /*#__PURE__*/_jsxDEV(\"video\", {\n                      src: media.url,\n                      controls: true,\n                      style: {\n                        width: \"100%\",\n                        height: \"auto\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 31\n                    }, this) : media.type === \"application/pdf\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pdf-container\",\n                      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                        src: `https://docs.google.com/gview?url=${media.url}&embedded=true`,\n                        title: \"PDF Viewer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 31\n                    }, this) : null\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feed-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this), post.link && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: post.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"post-link\",\n                  children: post.link\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No posts found!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/powerbi-report.jpg\",\n        alt: \"Power BI Analytics\",\n        className: \"analytics-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardContent, \"PL8WojyXhe8EQZeMd6CNs5w6U3w=\");\n_c = DashboardContent;\nexport default DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["React","useEffect","useState","Carousel","jsxDEV","_jsxDEV","DashboardContent","_s","posts","setPosts","sortOrder","setSortOrder","activeCategory","setActiveCategory","showFilterOptions","setShowFilterOptions","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","fetchPosts","url","params","URLSearchParams","append","toString","response","fetch","data","json","error","console","filteredPosts","filter","post","searchString","toLowerCase","categoryMatch","category","subcategoryMatch","subcategory","searchMatch","Object","values","some","value","includes","Array","isArray","item","sortedPosts","sort","a","b","Date","createdAt","categories","name","subcategories","image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onMouseEnter","onMouseLeave","src","alt","length","subIndex","onClick","type","placeholder","onChange","e","target","index","_post$media","_post$media$","media","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","startsWith","title","style","objectFit","width","controls","height","description","link","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Dashboardcontent.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         console.log(\"Fetching posts...\");\r\n//         const response = await fetch(\"http://localhost:3000/fetch/\");\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts data:\", data);\r\n//         setPosts(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const categories = []; // Define categories if needed\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container-dashboard\">\r\n//       <h1>Dashboard</h1>\r\n\r\n//       {/* CATEGORY SECTION */}\r\n//       <div className=\"category-container-dashboard\">\r\n//         {categories.map((category) => (\r\n//           <div\r\n//             key={category.name}\r\n//             className=\"category-wrapper-dashboard\"\r\n//             onMouseEnter={() => setActiveCategory(category.name)}\r\n//             onMouseLeave={() => setActiveCategory(null)}\r\n//           >\r\n//             <div className=\"category-icon-dashboard\">\r\n//               <img\r\n//                 src={category.image}\r\n//                 alt={`${category.name} Icon`}\r\n//                 className=\"category-image-dashboard\"\r\n//               />\r\n//             </div>\r\n//             <div className=\"category-name-dashboard\">{category.name}</div>\r\n//             {category.subcategories.length > 0 &&\r\n//               activeCategory === category.name && (\r\n//                 <div className=\"sub-category-container-dashboard\">\r\n//                   <ul>\r\n//                     {category.subcategories.map((subcategory, subIndex) => (\r\n//                       <li key={subIndex} className=\"subcategory-item-dashboard\">\r\n//                         {subcategory === \"RMF\" ? (\r\n//                           <Link to=\"/rmfpage\" className=\"subcategory-link-dashboard\">\r\n//                             RMF\r\n//                           </Link>\r\n//                         ) : (\r\n//                           subcategory\r\n//                         )}\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n//               )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* FEED SECTION */}\r\n//       <div className=\"feed-section-dashboard\">\r\n//         <h2>Feed</h2>\r\n//         <div className=\"feed-grid-dashboard\">\r\n//           {posts\r\n//             .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by date\r\n//             .map((post, index) => (\r\n//               <div className=\"feed-item-dashboard\" key={index}>\r\n//                 <div className=\"feed-image-dashboard\">\r\n//                   {post.media.length > 0 && post.media[0].url && (\r\n//                     <Carousel\r\n//                       showThumbs={false}\r\n//                       infiniteLoop={true}\r\n//                       autoPlay={true}\r\n//                       interval={5000} // Adjusted interval to slow down autoplay\r\n//                       showStatus={false}\r\n//                     >\r\n//                       {post.media.map((media, idx) => {\r\n//                         if (\r\n//                           media.type === \"image/jpeg\" ||\r\n//                           media.type === \"image/png\" ||\r\n//                           media.type === \"image/gif\"\r\n//                         ) {\r\n//                           return (\r\n//                             <div key={idx}>\r\n//                               <img\r\n//                                 src={media.url}\r\n//                                 alt={`${post.title} ${idx}`}\r\n//                                 style={{ objectFit: \"cover\", width: \"100%\" }}\r\n//                               />\r\n//                             </div>\r\n//                           );\r\n//                         } else if (media.type === \"application/pdf\") {\r\n//                           return (\r\n//                             <div key={idx} className=\"pdf-container-dashboard\">\r\n//                               <iframe\r\n//                                 src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                 title=\"PDF Viewer\"\r\n//                                 width=\"100%\"\r\n//                                 height=\"500px\"\r\n//                                 style={{ border: \"none\" }}\r\n//                               ></iframe>\r\n//                             </div>\r\n//                           );\r\n//                         } else if (media.type === \"video/mp4\") {\r\n//                           return (\r\n//                             <div key={idx} className=\"video-container-dashboard\">\r\n//                               <video\r\n//                                 src={media.url}\r\n//                                 controls\r\n//                                 style={{ width: \"100%\", height: \"auto\" }}\r\n//                               />\r\n//                             </div>\r\n//                           );\r\n//                         }\r\n//                         return null;\r\n//                       })}\r\n//                     </Carousel>\r\n//                   )}\r\n//                 </div>\r\n//                 <div className=\"feed-content-dashboard\">\r\n//                   <h3>{post.title}</h3>\r\n//                   <p>{post.description}</p>\r\n//                   {post.link && (\r\n//                     <a\r\n//                       href={post.link}\r\n//                       target=\"_blank\"\r\n//                       rel=\"noopener noreferrer\"\r\n//                       className=\"post-link-dashboard\"\r\n//                     >\r\n//                       {post.link}\r\n//                     </a>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         const response = await fetch(\"http://localhost:3000/fetch/\");\r\n//         const data = await response.json();\r\n//         setPosts(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const filteredPosts = posts.filter(post => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some(value => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(item => typeof item === \"string\" && item.toLowerCase().includes(searchString));\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   return (\r\n//     <div className=\"outer-box-dashboard\">\r\n//       <div className=\"left-container-dashboard\">\r\n//         <div className=\"feed-section-dashboard\">\r\n//           <h2>Feed</h2>\r\n//           <div className=\"feed-grid-dashboard\">\r\n//             {sortedPosts.map((post, index) => (\r\n//               <div className=\"feed-item-dashboard\" key={index}>\r\n//                 <div className=\"feed-image-dashboard\">\r\n//                   {post.media.length > 0 && post.media[0].url && (\r\n//                     <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                       {post.media.map((media, idx) => (\r\n//                         <div key={idx}>\r\n//                           {media.type.includes(\"image\") ? (\r\n//                             <img src={media.url} alt={post.title} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                           ) : media.type.includes(\"video\") ? (\r\n//                             <video src={media.url} controls style={{ width: \"100%\" }} />\r\n//                           ) : null}\r\n//                         </div>\r\n//                       ))}\r\n//                     </Carousel>\r\n//                   )}\r\n//                 </div>\r\n//                 <div className=\"feed-content-dashboard\">\r\n//                   <h3>{post.title}</h3>\r\n//                   <p>{post.description}</p>\r\n//                   {post.link && (\r\n//                     <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link-dashboard\">\r\n//                       {post.link}\r\n//                     </a>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Additional Feed Section */}\r\n//         <div className=\"feed-section-postpage-dashboard\">\r\n//           <h2>Feed</h2>\r\n//           <div className=\"feed-grid-postpage-dashboard\">\r\n//             {posts.length === 0 ? (\r\n//               <p>No posts available.</p>\r\n//             ) : (\r\n//               posts.map((post) => (\r\n//                 <div className=\"feed-item-postpage-dashboard\" key={post._id}>\r\n//                   <div className=\"feed-image-postpage-dashboard\">\r\n//                     {post.media.length > 0 && post.media[0].url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => {\r\n//                           if (media.type.startsWith(\"image/\")) {\r\n//                             return (\r\n//                               <div key={idx}>\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             );\r\n//                           } else if (media.type === \"application/pdf\") {\r\n//                             return (\r\n//                               <div key={idx} className=\"pdf-container-postpage-dashboard\">\r\n//                                 <iframe src={`https://docs.google.com/gview?url=${media.url}&embedded=true`} title=\"PDF Viewer\" width=\"100%\" height=\"500px\" style={{ border: \"none\" }}></iframe>\r\n//                               </div>\r\n//                             );\r\n//                           } else if (media.type === \"video/mp4\") {\r\n//                             return (\r\n//                               <div key={idx} className=\"video-container-postpage-dashboard\">\r\n//                                 <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                               </div>\r\n//                             );\r\n//                           }\r\n//                           return null;\r\n//                         })}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content-postpage-dashboard\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p>{post.description}</p>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link-postpage-dashboard\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./DashboardContent.css\";\r\n\r\nconst DashboardContent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [sortOrder, setSortOrder] = useState(\"desc\");\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n\r\n  // Fetch Posts Based on Selected Filters\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\r\n        if (selectedCategory || selectedSubcategory) {\r\n          const params = new URLSearchParams();\r\n          if (selectedCategory) params.append(\"category\", selectedCategory);\r\n          if (selectedSubcategory)\r\n            params.append(\"subcategory\", selectedSubcategory);\r\n          url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n        }\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [selectedCategory, selectedSubcategory]);\r\n\r\n  // Filtered and Sorted Posts\r\n  const filteredPosts = posts.filter((post) => {\r\n    const searchString = searchTerm.toLowerCase();\r\n\r\n    const categoryMatch = selectedCategory\r\n      ? post.category === selectedCategory\r\n      : true;\r\n    const subcategoryMatch = selectedSubcategory\r\n      ? post.subcategory === selectedSubcategory\r\n      : true;\r\n\r\n    const searchMatch = Object.values(post).some((value) => {\r\n      if (typeof value === \"string\") {\r\n        return value.toLowerCase().includes(searchString);\r\n      } else if (Array.isArray(value)) {\r\n        return value.some(\r\n          (item) =>\r\n            typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return categoryMatch && subcategoryMatch && searchMatch;\r\n  });\r\n\r\n  const sortedPosts = filteredPosts.sort((a, b) => {\r\n    return sortOrder === \"desc\"\r\n      ? new Date(b.createdAt) - new Date(a.createdAt)\r\n      : new Date(a.createdAt) - new Date(b.createdAt);\r\n  });\r\n\r\n  // Category and Subcategory Structure\r\n  const categories = [\r\n    {\r\n      name: \"Club\",\r\n      subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"sports\"],\r\n      image: \"/images/clubs-image.jpg\",\r\n    },\r\n    {\r\n      name: \"Academics\",\r\n      subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n      image: \"/images/academic-excellence.jpg\",\r\n    },\r\n    {\r\n      name: \"Notices\",\r\n      subcategories: [],\r\n      image: \"/images/notice.jpg\",\r\n    },\r\n    {\r\n      name: \"Skill Hub\",\r\n      subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n      image: \"/images/skill-hub.jpg\",\r\n    },\r\n    {\r\n      name: \"Events\",\r\n      subcategories: [],\r\n      image: \"/images/events-icon.jpg\",\r\n    },\r\n    {\r\n      name: \"Placements\",\r\n      subcategories: [],\r\n      image: \"/images/placements.jpg\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"outer-box\">\r\n      {/* LEFT CONTAINER */}\r\n      <div className=\"left-container\">\r\n        {/* DASHBOARD SECTION */}\r\n        <div className=\"dashboard-section\">\r\n          <h1>Dashboard</h1>\r\n          <div className=\"dashboard-content\">\r\n            <div className=\"category-container\">\r\n              {categories.map((category) => (\r\n                <div\r\n                  key={category.name}\r\n                  className=\"category-wrapper\"\r\n                  onMouseEnter={() => setActiveCategory(category.name)}\r\n                  onMouseLeave={() => setActiveCategory(null)}\r\n                >\r\n                  <div className=\"category-icon\">\r\n                    <img\r\n                      src={category.image}\r\n                      alt={`${category.name} Icon`}\r\n                      className=\"category-image\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"category-name\">{category.name}</div>\r\n                  {category.subcategories.length > 0 &&\r\n                    activeCategory === category.name && (\r\n                      <div className=\"sub-category-container\">\r\n                        <ul>\r\n                          {category.subcategories.map(\r\n                            (subcategory, subIndex) => (\r\n                              <li\r\n                                key={subIndex}\r\n                                className=\"subcategory-item\"\r\n                                onClick={() => {\r\n                                  setSelectedCategory(category.name);\r\n                                  setSelectedSubcategory(subcategory);\r\n                                }}\r\n                              >\r\n                                {subcategory}\r\n                              </li>\r\n                            )\r\n                          )}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* FEED SECTION */}\r\n        <div className=\"feed-section\">\r\n          <div className=\"feed-header\">\r\n            <h2>Feed</h2>\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search posts...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            {searchTerm && (\r\n              <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n                ×\r\n              </button>\r\n            )}\r\n            <div className=\"filter-container\">\r\n              <button\r\n                className=\"filter-button\"\r\n                onClick={() => setShowFilterOptions(!showFilterOptions)}\r\n              >\r\n                Filter ⌃\r\n              </button>\r\n              {showFilterOptions && (\r\n                <div className=\"filter-dropdown\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setSortOrder(\"desc\");\r\n                      setShowFilterOptions(false);\r\n                    }}\r\n                  >\r\n                    Newest First\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      setSortOrder(\"asc\");\r\n                      setShowFilterOptions(false);\r\n                    }}\r\n                  >\r\n                    Oldest First\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Feed Grid */}\r\n          <div className=\"feed-grid\">\r\n            {sortedPosts.length > 0 ? (\r\n              sortedPosts.map((post, index) => (\r\n                <div className=\"feed-item\" key={index}>\r\n                  <div className=\"feed-image\">\r\n                    {post.media?.length > 0 && post.media[0]?.url && (\r\n                      <Carousel\r\n                        showThumbs={false}\r\n                        infiniteLoop\r\n                        autoPlay\r\n                        interval={5000}\r\n                        showStatus={false}\r\n                      >\r\n                        {post.media.map((media, idx) => (\r\n                          <div key={idx}>\r\n                            {media.type.startsWith(\"image/\") ? (\r\n                              <img\r\n                                src={media.url}\r\n                                alt={`${post.title} ${idx}`}\r\n                                style={{ objectFit: \"cover\", width: \"100%\" }}\r\n                              />\r\n                            ) : media.type === \"video/mp4\" ? (\r\n                              <video\r\n                                src={media.url}\r\n                                controls\r\n                                style={{ width: \"100%\", height: \"auto\" }}\r\n                              />\r\n                            ) : media.type === \"application/pdf\" ? (\r\n                              <div className=\"pdf-container\">\r\n                                <iframe\r\n                                  src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n                                  title=\"PDF Viewer\"\r\n                                ></iframe>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ))}\r\n                      </Carousel>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"feed-content\">\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.description}</p>\r\n                    {post.link && (\r\n                      <a\r\n                        href={post.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"post-link\"\r\n                      >\r\n                        {post.link}\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No posts found!</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ANALYTICS SECTION */}\r\n      <div className=\"analytics-container\">\r\n        <h2>Analytics</h2>\r\n        <img\r\n          src=\"/images/powerbi-report.jpg\"\r\n          alt=\"Power BI Analytics\"\r\n          className=\"analytics-image\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}