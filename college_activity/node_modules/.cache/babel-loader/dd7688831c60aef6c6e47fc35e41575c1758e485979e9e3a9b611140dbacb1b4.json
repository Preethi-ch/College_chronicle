{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import './NewPost.css';  // Ensure you add appropriate styles for the layout\n\n// const categories = [\n//   { name: \"Club\", subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"] },\n//   { name: \"Academics\", subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"] },\n//   { name: \"Notices\", subcategories: [] },\n//   { name: \"Skill Hub\", subcategories: [\"Hackathons\",\"Coding contests\",\"Training Programs\"] },\n//   { name: \"Events\", subcategories: [] },\n//   { name: \"Placements\", subcategories: [] },\n// ];\n\n// const NewPost = () => {\n//   const [fileNames, setFileNames] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [uploaderEmail, setUploaderEmail] = useState(\"\");\n//   const [files, setFiles] = useState([]);  // Track uploaded files\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     if (selectedFiles) {\n//       setFileNames([...fileNames, ...selectedFiles.map((file) => file.name)]);\n//       setFiles([...files, ...selectedFiles]);\n//     }\n//   };\n\n//   const handleCategoryChange = (e) => {\n//     const selectedCategory = e.target.value;\n//     setCategory(selectedCategory);\n\n//     // Reset the subCategory field when category changes\n//     const selectedCategoryObject = categories.find((cat) => cat.name === selectedCategory);\n//     if (!selectedCategoryObject?.subcategories.length) {\n//       setSubCategory(\"\");\n//     }\n//   };\n\n//   const handleRemoveFile = (index) => {\n//     const newFileNames = [...fileNames];\n//     const newFiles = [...files];\n//     newFileNames.splice(index, 1);\n//     newFiles.splice(index, 1);\n//     setFileNames(newFileNames);\n//     setFiles(newFiles);\n//   };\n\n//   const handlePost = async () => {\n//     if (!title.trim() || !description.trim() || !category.trim()) {\n//       alert(\"Please fill out all required fields: title, description, and category.\");\n//       return;\n//     }\n\n//     if (files.length === 0) {\n//       alert(\"Please upload at least one file.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title.trim());\n//     formData.append(\"description\", description.trim());\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory || \"\"); // Handle cases where subCategory might be empty\n//     formData.append(\"uploaderEmail\", uploaderEmail.trim());\n\n//     // Append all selected files to the FormData\n//     files.forEach((file) => {\n//       formData.append(\"media\", file);\n//     });\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n\n//       if (response.status === 201) {\n//         alert(\"Post submitted successfully!\");\n//         // Optionally reset the form after a successful submission\n//         setTitle(\"\");\n//         setDescription(\"\");\n//         setCategory(\"\");\n//         setSubCategory(\"\");\n//         setUploaderEmail(\"\");\n//         setFiles([]);\n//         setFileNames([]);\n//       } else {\n//         alert(\"Failed to submit post. Please try again.\");\n//       }\n//     } catch (err) {\n//       console.error(\"Error during post submission:\", err.response || err.message);\n//       alert(\n//         err.response?.data?.message || \"An unexpected error occurred. Please try again.\"\n//       );\n//     }\n//   };\n\n//   const handleSaveToDrafts = async () => {\n//     const draftData = {\n//       title,\n//       description,\n//       category,\n//       subCategory,\n//       uploaderEmail,\n//       files: fileNames,\n//     };\n\n//     // Simulate saving draft (you could save this to a backend or local storage)\n//     console.log(\"Saving to drafts:\", draftData);\n//     alert(\"Draft saved successfully!\");\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {fileNames.length > 0 ? fileNames.join(\", \") : \"Click to browse or drop files here\"}\n//           </label>\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple />\n//         </div>\n\n//         <div className=\"uploaded-files\">\n//           {fileNames.length > 0 && (\n//             <ul>\n//               {fileNames.map((fileName, index) => (\n//                 <li key={index} className=\"file-item\">\n//                   {fileName}\n//                   <span className=\"remove-icon\" onClick={() => handleRemoveFile(index)}>Ã—</span>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title for the file\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"Enter your email\"\n//           value={uploaderEmail}\n//           onChange={(e) => setUploaderEmail(e.target.value)}\n//           required\n//         />\n\n//         <select value={category} onChange={handleCategoryChange} required>\n//           <option value=\"\" disabled>Select a category</option>\n//           {categories.map((cat) => (\n//             <option key={cat.name} value={cat.name}>\n//               {cat.name}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={subCategory}\n//           onChange={(e) => setSubCategory(e.target.value)}\n//           disabled={!categories.find((cat) => cat.name === category)?.subcategories.length}\n//           required\n//         >\n//           <option value=\"\" disabled>Select a subcategory</option>\n//           {categories\n//             .find((cat) => cat.name === category)\n//             ?.subcategories.map((subcat) => (\n//               <option key={subcat} value={subcat}>\n//                 {subcat}\n//               </option>\n//             ))}\n//         </select>\n\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={handlePost} className=\"post-btn\">Post</button>\n//           <button type=\"button\" onClick={handleSaveToDrafts} className=\"draft-btn\">Save to Drafts</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './NewPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  name: \"Club\",\n  subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"]\n}, {\n  name: \"Academics\",\n  subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"]\n}, {\n  name: \"Notices\",\n  subcategories: []\n}, {\n  name: \"Skill Hub\",\n  subcategories: [\"Hackathons\", \"Coding contests\", \"Training Programs\"]\n}, {\n  name: \"Events\",\n  subcategories: []\n}, {\n  name: \"Placements\",\n  subcategories: []\n}];\nconst NewPost = () => {\n  _s();\n  var _categories$find;\n  const [fileNames, setFileNames] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [uploaderEmail, setUploaderEmail] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    if (selectedFiles) {\n      setFileNames([...fileNames, ...selectedFiles.map(file => file.name)]);\n      setFiles([...files, ...selectedFiles]);\n    }\n  };\n  const handleRemoveFile = index => {\n    const updatedFiles = files.filter((_, i) => i !== index);\n    setFiles(updatedFiles);\n    setFileNames(updatedFiles.map(file => file.name));\n  };\n  const handlePost = async () => {\n    if (!title || !description || !category) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"uploaderEmail\", uploaderEmail);\n    files.forEach(file => formData.append(\"media\", file));\n    try {\n      await axios.post(\"http://localhost:3000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Post submitted successfully!\");\n      setTitle(\"\");\n      setDescription(\"\");\n      setCategory(\"\");\n      setSubCategory(\"\");\n      setUploaderEmail(\"\");\n      setFiles([]);\n      setFileNames([]);\n    } catch (error) {\n      console.error(error);\n      alert(\"Error uploading post.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: fileNames.length > 0 ? fileNames.join(\", \") : \"Click to browse or drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          multiple: true,\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), fileNames.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fileNames.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveFile(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 24\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Uploader Email\",\n        value: uploaderEmail,\n        onChange: e => setUploaderEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat.name,\n          children: cat.name\n        }, cat.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), ((_categories$find = categories.find(cat => cat.name === category)) === null || _categories$find === void 0 ? void 0 : _categories$find.subcategories.length) > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: subCategory,\n        onChange: e => setSubCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), categories.find(cat => cat.name === category).subcategories.map(subcat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subcat,\n          children: subcat\n        }, subcat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePost,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"TrpaJbJSqkcCMLltYZdSvvPKKRk=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","categories","name","subcategories","NewPost","_s","_categories$find","fileNames","setFileNames","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","uploaderEmail","setUploaderEmail","files","setFiles","handleFileChange","event","selectedFiles","Array","from","target","map","file","handleRemoveFile","index","updatedFiles","filter","_","i","handlePost","alert","formData","FormData","append","forEach","post","headers","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","join","type","id","multiple","onChange","onClick","placeholder","value","e","cat","find","subcat","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import './NewPost.css';  // Ensure you add appropriate styles for the layout\r\n\r\n// const categories = [\r\n//   { name: \"Club\", subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"] },\r\n//   { name: \"Academics\", subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"] },\r\n//   { name: \"Notices\", subcategories: [] },\r\n//   { name: \"Skill Hub\", subcategories: [\"Hackathons\",\"Coding contests\",\"Training Programs\"] },\r\n//   { name: \"Events\", subcategories: [] },\r\n//   { name: \"Placements\", subcategories: [] },\r\n// ];\r\n\r\n// const NewPost = () => {\r\n//   const [fileNames, setFileNames] = useState([]);\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [uploaderEmail, setUploaderEmail] = useState(\"\");\r\n//   const [files, setFiles] = useState([]);  // Track uploaded files\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     if (selectedFiles) {\r\n//       setFileNames([...fileNames, ...selectedFiles.map((file) => file.name)]);\r\n//       setFiles([...files, ...selectedFiles]);\r\n//     }\r\n//   };\r\n\r\n//   const handleCategoryChange = (e) => {\r\n//     const selectedCategory = e.target.value;\r\n//     setCategory(selectedCategory);\r\n\r\n//     // Reset the subCategory field when category changes\r\n//     const selectedCategoryObject = categories.find((cat) => cat.name === selectedCategory);\r\n//     if (!selectedCategoryObject?.subcategories.length) {\r\n//       setSubCategory(\"\");\r\n//     }\r\n//   };\r\n\r\n//   const handleRemoveFile = (index) => {\r\n//     const newFileNames = [...fileNames];\r\n//     const newFiles = [...files];\r\n//     newFileNames.splice(index, 1);\r\n//     newFiles.splice(index, 1);\r\n//     setFileNames(newFileNames);\r\n//     setFiles(newFiles);\r\n//   };\r\n\r\n//   const handlePost = async () => {\r\n//     if (!title.trim() || !description.trim() || !category.trim()) {\r\n//       alert(\"Please fill out all required fields: title, description, and category.\");\r\n//       return;\r\n//     }\r\n  \r\n//     if (files.length === 0) {\r\n//       alert(\"Please upload at least one file.\");\r\n//       return;\r\n//     }\r\n  \r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title.trim());\r\n//     formData.append(\"description\", description.trim());\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory || \"\"); // Handle cases where subCategory might be empty\r\n//     formData.append(\"uploaderEmail\", uploaderEmail.trim());\r\n  \r\n//     // Append all selected files to the FormData\r\n//     files.forEach((file) => {\r\n//       formData.append(\"media\", file);\r\n//     });\r\n  \r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/upload\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       });\r\n  \r\n//       if (response.status === 201) {\r\n//         alert(\"Post submitted successfully!\");\r\n//         // Optionally reset the form after a successful submission\r\n//         setTitle(\"\");\r\n//         setDescription(\"\");\r\n//         setCategory(\"\");\r\n//         setSubCategory(\"\");\r\n//         setUploaderEmail(\"\");\r\n//         setFiles([]);\r\n//         setFileNames([]);\r\n//       } else {\r\n//         alert(\"Failed to submit post. Please try again.\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error during post submission:\", err.response || err.message);\r\n//       alert(\r\n//         err.response?.data?.message || \"An unexpected error occurred. Please try again.\"\r\n//       );\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleSaveToDrafts = async () => {\r\n//     const draftData = {\r\n//       title,\r\n//       description,\r\n//       category,\r\n//       subCategory,\r\n//       uploaderEmail,\r\n//       files: fileNames,\r\n//     };\r\n\r\n//     // Simulate saving draft (you could save this to a backend or local storage)\r\n//     console.log(\"Saving to drafts:\", draftData);\r\n//     alert(\"Draft saved successfully!\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {fileNames.length > 0 ? fileNames.join(\", \") : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple />\r\n//         </div>\r\n\r\n//         <div className=\"uploaded-files\">\r\n//           {fileNames.length > 0 && (\r\n//             <ul>\r\n//               {fileNames.map((fileName, index) => (\r\n//                 <li key={index} className=\"file-item\">\r\n//                   {fileName}\r\n//                   <span className=\"remove-icon\" onClick={() => handleRemoveFile(index)}>Ã—</span>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           )}\r\n//         </div>\r\n\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title for the file\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Enter your email\"\r\n//           value={uploaderEmail}\r\n//           onChange={(e) => setUploaderEmail(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <select value={category} onChange={handleCategoryChange} required>\r\n//           <option value=\"\" disabled>Select a category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat.name} value={cat.name}>\r\n//               {cat.name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         <select\r\n//           value={subCategory}\r\n//           onChange={(e) => setSubCategory(e.target.value)}\r\n//           disabled={!categories.find((cat) => cat.name === category)?.subcategories.length}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>Select a subcategory</option>\r\n//           {categories\r\n//             .find((cat) => cat.name === category)\r\n//             ?.subcategories.map((subcat) => (\r\n//               <option key={subcat} value={subcat}>\r\n//                 {subcat}\r\n//               </option>\r\n//             ))}\r\n//         </select>\r\n\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={handlePost} className=\"post-btn\">Post</button>\r\n//           <button type=\"button\" onClick={handleSaveToDrafts} className=\"draft-btn\">Save to Drafts</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './NewPost.css';\r\n\r\nconst categories = [\r\n  { name: \"Club\", subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"] },\r\n  { name: \"Academics\", subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"] },\r\n  { name: \"Notices\", subcategories: [] },\r\n  { name: \"Skill Hub\", subcategories: [\"Hackathons\", \"Coding contests\", \"Training Programs\"] },\r\n  { name: \"Events\", subcategories: [] },\r\n  { name: \"Placements\", subcategories: [] },\r\n];\r\n\r\nconst NewPost = () => {\r\n  const [fileNames, setFileNames] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [uploaderEmail, setUploaderEmail] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    if (selectedFiles) {\r\n      setFileNames([...fileNames, ...selectedFiles.map((file) => file.name)]);\r\n      setFiles([...files, ...selectedFiles]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = (index) => {\r\n    const updatedFiles = files.filter((_, i) => i !== index);\r\n    setFiles(updatedFiles);\r\n    setFileNames(updatedFiles.map((file) => file.name));\r\n  };\r\n\r\n  const handlePost = async () => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill in all required fields.\");\r\n      return;\r\n    }\r\n  \r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"uploaderEmail\", uploaderEmail);\r\n  \r\n    files.forEach((file) => formData.append(\"media\", file));\r\n  \r\n    try {\r\n      await axios.post(\"http://localhost:3000/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(\"Post submitted successfully!\");\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setCategory(\"\");\r\n      setSubCategory(\"\");\r\n      setUploaderEmail(\"\");\r\n      setFiles([]);\r\n      setFileNames([]);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error uploading post.\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h2>New Post</h2>\r\n      <form>\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"fileInput\">\r\n            {fileNames.length > 0 ? fileNames.join(\", \") : \"Click to browse or drop files here\"}\r\n          </label>\r\n          <input type=\"file\" id=\"fileInput\" multiple onChange={handleFileChange} />\r\n        </div>\r\n        {fileNames.length > 0 && (\r\n          <ul>\r\n            {fileNames.map((file, index) => (\r\n              <li key={index}>\r\n                {file} <button type=\"button\" onClick={() => handleRemoveFile(index)}>Remove</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Uploader Email\"\r\n          value={uploaderEmail}\r\n          onChange={(e) => setUploaderEmail(e.target.value)}\r\n        />\r\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat.name} value={cat.name}>\r\n              {cat.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {categories.find((cat) => cat.name === category)?.subcategories.length > 0 && (\r\n          <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n            <option value=\"\">Select Subcategory</option>\r\n            {categories\r\n              .find((cat) => cat.name === category)\r\n              .subcategories.map((subcat) => (\r\n                <option key={subcat} value={subcat}>\r\n                  {subcat}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        )}\r\n        <button type=\"button\" onClick={handlePost}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,UAAU,GAAG,CACjB;EAAEC,IAAI,EAAE,MAAM;EAAEC,aAAa,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,mBAAmB,EAAE,MAAM,EAAE,YAAY;AAAE,CAAC,EACjG;EAAED,IAAI,EAAE,WAAW;EAAEC,aAAa,EAAE,CAAC,YAAY,EAAE,aAAa,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}