{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Dashboardcontent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n// const location = useLocation();\n\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       console.log(\"Resetting filters...\");\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n\n//       // Clear the state to avoid repetitive resets\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         console.log(\"Fetching posts from:\", url); // Debugging log\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         console.log(\"Fetched posts:\", data); // Debugging log\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Enhanced Search Functionality (Search across all fields)\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   // Sorting Logic (Based on Created Date)\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\n//   });\n\n//   // Close Full-Screen on Escape Key\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   return (\n//     <div className=\"outer-box\">\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\n//       <div className=\"left-container\">\n//         {/* DASHBOARD SECTION */}\n//         <div className=\"dashboard-section\">\n//           <h1>Dashboard</h1>\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img\n//                       src={category.image}\n//                       alt={`${category.name} Icon`}\n//                       className=\"category-image\"\n//                     />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation(); // Prevent triggering category click\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* FEED SECTION */}\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <h2>Feed</h2>\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button\n//                 className=\"filter-button\"\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\n//               >\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           {/* Feed Grid */}\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel\n//                         showThumbs={false}\n//                         infiniteLoop\n//                         autoPlay\n//                         interval={5000}\n//                         showStatus={false}\n//                       >\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img\n//                                   src={media.url}\n//                                   alt={`${post.title} ${idx}`}\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\n//                                 />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video\n//                                 src={media.url}\n//                                 controls\n//                                 style={{ width: \"100%\", height: \"auto\" }}\n//                               />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p>{post.description}</p>\n//                     {post.link && (\n//                       <a\n//                         href={post.link}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         className=\"post-link\"\n//                       >\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* FULL-SCREEN IMAGE MODAL */}\n//       {fullscreenImage && (\n//         <div\n//           className=\"fullscreen-overlay\"\n//           onClick={() => setFullscreenImage(null)}\n//         >\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img\n//             src={fullscreenImage}\n//             alt=\"Full-Screen Preview\"\n//             className=\"fullscreen-image\"\n//           />\n//         </div>\n//       )}\n\n//       {/* ANALYTICS SECTION */}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img\n//           src=\"/images/powerbi-report.jpg\"\n//           alt=\"Power BI Analytics\"\n//           className=\"analytics-image\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({}); // To track expanded posts\n//   const location = useLocation();\n\n//   // Reset filters when navigating back\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       console.log(\"Resetting filters...\");\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\"; // Default URL\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         console.log(\"Fetching posts from:\", url);\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         console.log(\"Fetched posts:\", data);\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Filter and sort posts\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p\n//                       className={`post-description ${\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\n//                       }`}\n//                     >\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\n//   const [activeCategory, setActiveCategory] = useState(null);\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n//   const [expandedPosts, setExpandedPosts] = useState({});\n//   const location = useLocation();\n\n//   // Reset filters when navigating back\n//   useEffect(() => {\n//     if (location?.state?.resetFilters) {\n//       setSelectedCategory(null);\n//       setSelectedSubcategory(null);\n//       setSearchTerm(\"\");\n//       window.history.replaceState({}, document.title);\n//     }\n//   }, [location?.state?.resetFilters]);\n\n//   // Fetch posts based on selected filters\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         let url = \"http://localhost:3000/fetch/\";\n//         if (selectedCategory || selectedSubcategory) {\n//           const params = new URLSearchParams();\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\n//         }\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         setPosts(data.data || []);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, [selectedCategory, selectedSubcategory]);\n\n//   // Filter and sort posts\n//   const filteredPosts = posts.filter((post) => {\n//     const searchString = searchTerm.toLowerCase();\n//     return Object.values(post).some((value) => {\n//       if (typeof value === \"string\") {\n//         return value.toLowerCase().includes(searchString);\n//       } else if (Array.isArray(value)) {\n//         return value.some(\n//           (item) =>\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\n//         );\n//       }\n//       return false;\n//     });\n//   });\n\n//   const sortedPosts = filteredPosts.sort((a, b) => {\n//     return sortOrder === \"desc\"\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\n//       : new Date(a.createdAt) - new Date(b.createdAt);\n//   });\n\n//   useEffect(() => {\n//     const handleKeyDown = (event) => {\n//       if (event.key === \"Escape\") {\n//         setFullscreenImage(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", handleKeyDown);\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//   }, [fullscreenImage]);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic-excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skillhub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   const toggleExpandPost = (postId) => {\n//     setExpandedPosts((prev) => ({\n//       ...prev,\n//       [postId]: !prev[postId],\n//     }));\n//   };\n\n//   return (\n//     <div className=\"outer-box\">\n//       <div className=\"left-container\">\n//         <div className=\"dashboard-section\">\n//           <div className=\"dashboard-content\">\n//             <div className=\"category-container\">\n//               {categories.map((category) => (\n//                 <div\n//                   key={category.name}\n//                   className=\"category-wrapper\"\n//                   onMouseEnter={() => setActiveCategory(category.name)}\n//                   onMouseLeave={() => setActiveCategory(null)}\n//                   onClick={() => {\n//                     if (category.subcategories.length === 0) {\n//                       setSelectedCategory(category.name);\n//                       setSelectedSubcategory(null);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"category-icon\">\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\n//                   </div>\n//                   <div className=\"category-name\">{category.name}</div>\n//                   {category.subcategories.length > 0 &&\n//                     activeCategory === category.name && (\n//                       <div className=\"sub-category-container\">\n//                         <ul>\n//                           {category.subcategories.map((subcategory, subIndex) => (\n//                             <li\n//                               key={subIndex}\n//                               className=\"subcategory-item\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 setSelectedCategory(category.name);\n//                                 setSelectedSubcategory(subcategory);\n//                               }}\n//                             >\n//                               {subcategory}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       </div>\n//                     )}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"feed-section\">\n//           <div className=\"feed-header\">\n//             <input\n//               type=\"text\"\n//               className=\"search-bar\"\n//               placeholder=\"Search posts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             {searchTerm && (\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\n//                 ×\n//               </button>\n//             )}\n//             <div className=\"filter-container\">\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\n//                 Filter ⌵\n//               </button>\n//               {showFilterOptions && (\n//                 <div className=\"filter-dropdown\">\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"desc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Newest First\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       setSortOrder(\"asc\");\n//                       setShowFilterOptions(false);\n//                     }}\n//                   >\n//                     Oldest First\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"feed-grid\">\n//             {sortedPosts.length > 0 ? (\n//               sortedPosts.map((post, index) => (\n//                 <div className=\"feed-item\" key={index}>\n//                   <div className=\"feed-image\">\n//                     {post.media?.length > 0 && post.media[0]?.url && (\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\n//                         {post.media.map((media, idx) => (\n//                           <div key={idx} className=\"carousel-item\">\n//                             {media.type.startsWith(\"image/\") ? (\n//                               <div\n//                                 onClick={() => setFullscreenImage(media.url)}\n//                                 style={{ cursor: \"pointer\" }}\n//                               >\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\n//                               </div>\n//                             ) : media.type === \"video/mp4\" ? (\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\n//                             ) : media.type === \"application/pdf\" ? (\n//                               <div className=\"pdf-container\">\n//                                 <iframe\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                   title=\"PDF Viewer\"\n//                                 ></iframe>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                       </Carousel>\n//                     )}\n//                   </div>\n//                   <div className=\"feed-content\">\n//                     <h3>{post.title}</h3>\n//                     <p\n//                       className={`post-description ${\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\n//                       }`}\n//                     >\n//                       {post.description}\n//                     </p>\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\n//                     </button>\n//                     {post.link && (\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                         {post.link}\n//                       </a>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No posts available</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//       {fullscreenImage && (\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\n//             ×\n//           </span>\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\n//         </div>\n//       )}\n//       <div className=\"analytics-container\">\n//         <h2>Analytics</h2>\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Newpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst subCategoriesMap = {\n  Club: [\"RMF\", \"Splash Out\", \"VPOD\", \"Rhythmic Thunders\", \"sports\"],\n  Academics: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n  Skillhub: [\"Hackathons\", \"Coding-Contests\", \"Training Programmes\"]\n};\nconst NewPost = ({\n  userEmail\n}) => {\n  _s();\n  var _subCategoriesMap$cat, _subCategoriesMap$cat2;\n  const [draftId, setDraftId] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [media, setMedia] = useState([]);\n\n  // Optional event fields\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDate, setEventDate] = useState(\"\");\n  const [eventTime, setEventTime] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const locationHook = useLocation();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(locationHook.search);\n    const draftIdFromParams = queryParams.get(\"draftId\");\n    if (draftIdFromParams) {\n      setDraftId(draftIdFromParams);\n      fetchDraftData(draftIdFromParams);\n    }\n  }, [locationHook.search]);\n  const fetchDraftData = async id => {\n    try {\n      const response = await fetch(`http://localhost:3000/draftsview/edit/${id}`);\n      if (!response.ok) throw new Error(\"Failed to fetch draft\");\n      const draft = await response.json();\n      setTitle(draft.title);\n      setDescription(draft.description);\n      setCategory(draft.category);\n      setSubCategory(draft.subCategory || \"\");\n      setLink(draft.link || \"\");\n      setMedia(draft.media || []);\n      setEventName(draft.eventName || \"\");\n      setEventDate(draft.eventDate || \"\");\n      setEventTime(draft.eventTime || \"\");\n      setLocation(draft.location || \"\");\n    } catch (error) {\n      alert(\"Could not load draft. Please try again.\");\n    }\n  };\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(prevFiles => [...prevFiles, ...selectedFiles]);\n  };\n  const removeFile = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  const removeExistingFile = async fileId => {\n    try {\n      const response = await fetch(`http://localhost:3000/draftsview/remove-media/${draftId}/${fileId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error(\"Failed to remove media\");\n      setMedia(media.filter(file => file._id !== fileId));\n    } catch (error) {\n      alert(\"Failed to remove file.\");\n    }\n  };\n  const resetForm = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setCategory(\"\");\n    setSubCategory(\"\");\n    setLink(\"\");\n    setFiles([]);\n    setMedia([]);\n    setEventName(\"\");\n    setEventDate(\"\");\n    setEventTime(\"\");\n    setLocation(\"\");\n    setDraftId(null);\n  };\n  const handleSubmit = async (isDraft = false) => {\n    if (!title || !description || !category) {\n      alert(\"Please fill all required fields!\");\n      return;\n    }\n    if (!userEmail) {\n      alert(\"Error: User email is missing!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n    formData.append(\"uploaderEmail\", userEmail);\n    formData.append(\"link\", link);\n    files.forEach(file => formData.append(\"media\", file));\n\n    // Only append optional fields if they have values\n    if (eventName) formData.append(\"eventName\", eventName);\n    if (eventDate) formData.append(\"eventDate\", eventDate);\n    if (eventTime) formData.append(\"eventTime\", eventTime);\n    if (location) formData.append(\"location\", location);\n    try {\n      let url, method;\n      if (draftId) {\n        url = `http://localhost:3000/draftsview/update/${draftId}`;\n        method = \"PUT\";\n      } else {\n        url = \"http://localhost:3000/posts/create-post\";\n        method = \"POST\";\n      }\n      const response = await fetch(url, {\n        method,\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Unknown error\");\n      }\n      alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n      resetForm();\n    } catch (error) {\n      alert(\"Submission failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: draftId ? \"Edit Draft\" : \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange,\n          multiple: true,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: [media.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: file.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: file.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-file\",\n            onClick: () => removeExistingFile(file._id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 15\n          }, this)]\n        }, file._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 13\n        }, this)), files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-file\",\n            onClick: () => removeFile(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Event Name (optional)\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: eventDate,\n        onChange: e => setEventDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: eventTime,\n        onChange: e => setEventTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Location (optional)\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter link (if any)\",\n        value: link,\n        onChange: e => setLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Events\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Club\",\n          children: \"Club\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Academics\",\n          children: \"Academics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Notices\",\n          children: \"Notices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Skillhub\",\n          children: \"Skillhub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Placements\",\n          children: \"Placements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: subCategory,\n        onChange: e => setSubCategory(e.target.value),\n        disabled: !((_subCategoriesMap$cat = subCategoriesMap[category]) !== null && _subCategoriesMap$cat !== void 0 && _subCategoriesMap$cat.length),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 11\n        }, this), (_subCategoriesMap$cat2 = subCategoriesMap[category]) === null || _subCategoriesMap$cat2 === void 0 ? void 0 : _subCategoriesMap$cat2.map((sub, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sub,\n          children: sub\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(false),\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(true),\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: resetForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1059,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"uSbSEx707GpjYaMfDnKhq5hY53k=\", false, function () {\n  return [useLocation];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","subCategoriesMap","Club","Academics","Skillhub","NewPost","userEmail","_s","_subCategoriesMap$cat","_subCategoriesMap$cat2","draftId","setDraftId","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","link","setLink","files","setFiles","media","setMedia","eventName","setEventName","eventDate","setEventDate","eventTime","setEventTime","location","setLocation","locationHook","queryParams","URLSearchParams","search","draftIdFromParams","get","fetchDraftData","id","response","fetch","ok","Error","draft","json","error","alert","handleFileChange","event","selectedFiles","Array","from","target","prevFiles","removeFile","index","filter","_","i","removeExistingFile","fileId","method","file","_id","resetForm","handleSubmit","isDraft","formData","FormData","append","forEach","url","body","errorData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","type","onChange","multiple","style","display","map","href","rel","onClick","name","placeholder","value","e","required","disabled","sub","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Dashboardcontent.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]); // Ensure initial state is an array\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\"); // Default: Newest First\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false); // Toggle Filter Options\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n// const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n// const location = useLocation();\r\n\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       console.log(\"Resetting filters...\");\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n\r\n//       // Clear the state to avoid repetitive resets\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\"; // Default: Fetch all posts\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         console.log(\"Fetching posts from:\", url); // Debugging log\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts:\", data); // Debugging log\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n\r\n//   // Enhanced Search Functionality (Search across all fields)\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   // Sorting Logic (Based on Created Date)\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt) // Newest First\r\n//       : new Date(a.createdAt) - new Date(b.createdAt); // Oldest First\r\n//   });\r\n\r\n//   // Close Full-Screen on Escape Key\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       {/* LEFT CONTAINER (Dashboard & Feed) */}\r\n//       <div className=\"left-container\">\r\n//         {/* DASHBOARD SECTION */}\r\n//         <div className=\"dashboard-section\">\r\n//           <h1>Dashboard</h1>\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img\r\n//                       src={category.image}\r\n//                       alt={`${category.name} Icon`}\r\n//                       className=\"category-image\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation(); // Prevent triggering category click\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* FEED SECTION */}\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <h2>Feed</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button\r\n//                 className=\"filter-button\"\r\n//                 onClick={() => setShowFilterOptions(!showFilterOptions)}\r\n//               >\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Feed Grid */}\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel\r\n//                         showThumbs={false}\r\n//                         infiniteLoop\r\n//                         autoPlay\r\n//                         interval={5000}\r\n//                         showStatus={false}\r\n//                       >\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img\r\n//                                   src={media.url}\r\n//                                   alt={`${post.title} ${idx}`}\r\n//                                   style={{ objectFit: \"cover\", width: \"100%\" }}\r\n//                                 />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video\r\n//                                 src={media.url}\r\n//                                 controls\r\n//                                 style={{ width: \"100%\", height: \"auto\" }}\r\n//                               />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p>{post.description}</p>\r\n//                     {post.link && (\r\n//                       <a\r\n//                         href={post.link}\r\n//                         target=\"_blank\"\r\n//                         rel=\"noopener noreferrer\"\r\n//                         className=\"post-link\"\r\n//                       >\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* FULL-SCREEN IMAGE MODAL */}\r\n//       {fullscreenImage && (\r\n//         <div\r\n//           className=\"fullscreen-overlay\"\r\n//           onClick={() => setFullscreenImage(null)}\r\n//         >\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img\r\n//             src={fullscreenImage}\r\n//             alt=\"Full-Screen Preview\"\r\n//             className=\"fullscreen-image\"\r\n//           />\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* ANALYTICS SECTION */}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img\r\n//           src=\"/images/powerbi-report.jpg\"\r\n//           alt=\"Power BI Analytics\"\r\n//           className=\"analytics-image\"\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({}); // To track expanded posts\r\n//   const location = useLocation();\r\n\r\n//   // Reset filters when navigating back\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       console.log(\"Resetting filters...\");\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\"; // Default URL\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         console.log(\"Fetching posts from:\", url);\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts:\", data);\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   // Filter and sort posts\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p\r\n//                       className={`post-description ${\r\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n//                       }`}\r\n//                     >\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sortOrder, setSortOrder] = useState(\"desc\");\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [showFilterOptions, setShowFilterOptions] = useState(false);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [fullscreenImage, setFullscreenImage] = useState(null);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [selectedSubcategory, setSelectedSubcategory] = useState(null);\r\n//   const [expandedPosts, setExpandedPosts] = useState({});\r\n//   const location = useLocation();\r\n\r\n//   // Reset filters when navigating back\r\n//   useEffect(() => {\r\n//     if (location?.state?.resetFilters) {\r\n//       setSelectedCategory(null);\r\n//       setSelectedSubcategory(null);\r\n//       setSearchTerm(\"\");\r\n//       window.history.replaceState({}, document.title);\r\n//     }\r\n//   }, [location?.state?.resetFilters]);\r\n\r\n//   // Fetch posts based on selected filters\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         let url = \"http://localhost:3000/fetch/\";\r\n//         if (selectedCategory || selectedSubcategory) {\r\n//           const params = new URLSearchParams();\r\n//           if (selectedCategory) params.append(\"category\", selectedCategory);\r\n//           if (selectedSubcategory) params.append(\"subcategory\", selectedSubcategory);\r\n//           url = `http://localhost:3000/fetch/subcategory?${params.toString()}`;\r\n//         }\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         setPosts(data.data || []);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, [selectedCategory, selectedSubcategory]);\r\n\r\n//   // Filter and sort posts\r\n//   const filteredPosts = posts.filter((post) => {\r\n//     const searchString = searchTerm.toLowerCase();\r\n//     return Object.values(post).some((value) => {\r\n//       if (typeof value === \"string\") {\r\n//         return value.toLowerCase().includes(searchString);\r\n//       } else if (Array.isArray(value)) {\r\n//         return value.some(\r\n//           (item) =>\r\n//             typeof item === \"string\" && item.toLowerCase().includes(searchString)\r\n//         );\r\n//       }\r\n//       return false;\r\n//     });\r\n//   });\r\n\r\n//   const sortedPosts = filteredPosts.sort((a, b) => {\r\n//     return sortOrder === \"desc\"\r\n//       ? new Date(b.createdAt) - new Date(a.createdAt)\r\n//       : new Date(a.createdAt) - new Date(b.createdAt);\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const handleKeyDown = (event) => {\r\n//       if (event.key === \"Escape\") {\r\n//         setFullscreenImage(null);\r\n//       }\r\n//     };\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n//   }, [fullscreenImage]);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Sports\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic-excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skillhub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   const toggleExpandPost = (postId) => {\r\n//     setExpandedPosts((prev) => ({\r\n//       ...prev,\r\n//       [postId]: !prev[postId],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"outer-box\">\r\n//       <div className=\"left-container\">\r\n//         <div className=\"dashboard-section\">\r\n//           <div className=\"dashboard-content\">\r\n//             <div className=\"category-container\">\r\n//               {categories.map((category) => (\r\n//                 <div\r\n//                   key={category.name}\r\n//                   className=\"category-wrapper\"\r\n//                   onMouseEnter={() => setActiveCategory(category.name)}\r\n//                   onMouseLeave={() => setActiveCategory(null)}\r\n//                   onClick={() => {\r\n//                     if (category.subcategories.length === 0) {\r\n//                       setSelectedCategory(category.name);\r\n//                       setSelectedSubcategory(null);\r\n//                     }\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"category-icon\">\r\n//                     <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n//                   </div>\r\n//                   <div className=\"category-name\">{category.name}</div>\r\n//                   {category.subcategories.length > 0 &&\r\n//                     activeCategory === category.name && (\r\n//                       <div className=\"sub-category-container\">\r\n//                         <ul>\r\n//                           {category.subcategories.map((subcategory, subIndex) => (\r\n//                             <li\r\n//                               key={subIndex}\r\n//                               className=\"subcategory-item\"\r\n//                               onClick={(e) => {\r\n//                                 e.stopPropagation();\r\n//                                 setSelectedCategory(category.name);\r\n//                                 setSelectedSubcategory(subcategory);\r\n//                               }}\r\n//                             >\r\n//                               {subcategory}\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </div>\r\n//                     )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"feed-section\">\r\n//           <div className=\"feed-header\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"search-bar\"\r\n//               placeholder=\"Search posts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             {searchTerm && (\r\n//               <button className=\"clear-search\" onClick={() => setSearchTerm(\"\")}>\r\n//                 ×\r\n//               </button>\r\n//             )}\r\n//             <div className=\"filter-container\">\r\n//               <button className=\"filter-button\" onClick={() => setShowFilterOptions(!showFilterOptions)}>\r\n//                 Filter ⌵\r\n//               </button>\r\n//               {showFilterOptions && (\r\n//                 <div className=\"filter-dropdown\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"desc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Newest First\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setSortOrder(\"asc\");\r\n//                       setShowFilterOptions(false);\r\n//                     }}\r\n//                   >\r\n//                     Oldest First\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"feed-grid\">\r\n//             {sortedPosts.length > 0 ? (\r\n//               sortedPosts.map((post, index) => (\r\n//                 <div className=\"feed-item\" key={index}>\r\n//                   <div className=\"feed-image\">\r\n//                     {post.media?.length > 0 && post.media[0]?.url && (\r\n//                       <Carousel showThumbs={false} infiniteLoop autoPlay interval={5000} showStatus={false}>\r\n//                         {post.media.map((media, idx) => (\r\n//                           <div key={idx} className=\"carousel-item\">\r\n//                             {media.type.startsWith(\"image/\") ? (\r\n//                               <div\r\n//                                 onClick={() => setFullscreenImage(media.url)}\r\n//                                 style={{ cursor: \"pointer\" }}\r\n//                               >\r\n//                                 <img src={media.url} alt={`${post.title} ${idx}`} style={{ objectFit: \"cover\", width: \"100%\" }} />\r\n//                               </div>\r\n//                             ) : media.type === \"video/mp4\" ? (\r\n//                               <video src={media.url} controls style={{ width: \"100%\", height: \"auto\" }} />\r\n//                             ) : media.type === \"application/pdf\" ? (\r\n//                               <div className=\"pdf-container\">\r\n//                                 <iframe\r\n//                                   src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                   title=\"PDF Viewer\"\r\n//                                 ></iframe>\r\n//                               </div>\r\n//                             ) : null}\r\n//                           </div>\r\n//                         ))}\r\n//                       </Carousel>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"feed-content\">\r\n//                     <h3>{post.title}</h3>\r\n//                     <p\r\n//                       className={`post-description ${\r\n//                         expandedPosts[post.id] ? \"expanded\" : \"collapsed\"\r\n//                       }`}\r\n//                     >\r\n//                       {post.description}\r\n//                     </p>\r\n//                     <button onClick={() => toggleExpandPost(post.id)} className=\"read-more-button\">\r\n//                       {expandedPosts[post.id] ? \"Read Less\" : \"Read More\"}\r\n//                     </button>\r\n//                     {post.link && (\r\n//                       <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                         {post.link}\r\n//                       </a>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             ) : (\r\n//               <p>No posts available</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {fullscreenImage && (\r\n//         <div className=\"fullscreen-overlay\" onClick={() => setFullscreenImage(null)}>\r\n//           <span className=\"close-button\" onClick={() => setFullscreenImage(null)}>\r\n//             ×\r\n//           </span>\r\n//           <img src={fullscreenImage} alt=\"Full-Screen Preview\" className=\"fullscreen-image\" />\r\n//         </div>\r\n//       )}\r\n//       <div className=\"analytics-container\">\r\n//         <h2>Analytics</h2>\r\n//         <img src=\"/images/powerbi-report.jpg\" alt=\"Power BI Analytics\" className=\"analytics-image\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Newpost.css\";\r\n\r\nconst subCategoriesMap = {\r\n  Club: [\"RMF\", \"Splash Out\", \"VPOD\", \"Rhythmic Thunders\", \"sports\"],\r\n  Academics: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n  Skillhub: [\"Hackathons\", \"Coding-Contests\", \"Training Programmes\"],\r\n};\r\n\r\nconst NewPost = ({ userEmail }) => {\r\n  const [draftId, setDraftId] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [media, setMedia] = useState([]);\r\n\r\n  // Optional event fields\r\n  const [eventName, setEventName] = useState(\"\");\r\n  const [eventDate, setEventDate] = useState(\"\");\r\n  const [eventTime, setEventTime] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n\r\n  const locationHook = useLocation();\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(locationHook.search);\r\n    const draftIdFromParams = queryParams.get(\"draftId\");\r\n\r\n    if (draftIdFromParams) {\r\n      setDraftId(draftIdFromParams);\r\n      fetchDraftData(draftIdFromParams);\r\n    }\r\n  }, [locationHook.search]);\r\n\r\n  const fetchDraftData = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/draftsview/edit/${id}`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch draft\");\r\n      const draft = await response.json();\r\n\r\n      setTitle(draft.title);\r\n      setDescription(draft.description);\r\n      setCategory(draft.category);\r\n      setSubCategory(draft.subCategory || \"\");\r\n      setLink(draft.link || \"\");\r\n      setMedia(draft.media || []);\r\n      setEventName(draft.eventName || \"\");\r\n      setEventDate(draft.eventDate || \"\");\r\n      setEventTime(draft.eventTime || \"\");\r\n      setLocation(draft.location || \"\");\r\n    } catch (error) {\r\n      alert(\"Could not load draft. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const removeExistingFile = async (fileId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/draftsview/remove-media/${draftId}/${fileId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!response.ok) throw new Error(\"Failed to remove media\");\r\n      setMedia(media.filter((file) => file._id !== fileId));\r\n    } catch (error) {\r\n      alert(\"Failed to remove file.\");\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setSubCategory(\"\");\r\n    setLink(\"\");\r\n    setFiles([]);\r\n    setMedia([]);\r\n    setEventName(\"\");\r\n    setEventDate(\"\");\r\n    setEventTime(\"\");\r\n    setLocation(\"\");\r\n    setDraftId(null);\r\n  };\r\n\r\n  const handleSubmit = async (isDraft = false) => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    if (!userEmail) {\r\n      alert(\"Error: User email is missing!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n    formData.append(\"uploaderEmail\", userEmail);\r\n    formData.append(\"link\", link);\r\n    files.forEach((file) => formData.append(\"media\", file));\r\n\r\n    // Only append optional fields if they have values\r\n    if (eventName) formData.append(\"eventName\", eventName);\r\n    if (eventDate) formData.append(\"eventDate\", eventDate);\r\n    if (eventTime) formData.append(\"eventTime\", eventTime);\r\n    if (location) formData.append(\"location\", location);\r\n\r\n    try {\r\n      let url, method;\r\n      if (draftId) {\r\n        url = `http://localhost:3000/draftsview/update/${draftId}`;\r\n        method = \"PUT\";\r\n      } else {\r\n        url = \"http://localhost:3000/posts/create-post\";\r\n        method = \"POST\";\r\n      }\r\n\r\n      const response = await fetch(url, { method, body: formData });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Unknown error\");\r\n      }\r\n\r\n      alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n      resetForm();\r\n    } catch (error) {\r\n      alert(\"Submission failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{draftId ? \"Edit Draft\" : \"New Post\"}</h2>\r\n      <form>\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"fileInput\">\r\n            {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n          </label>\r\n          <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n        </div>\r\n\r\n        <div className=\"uploaded-files\">\r\n          {media.map((file) => (\r\n            <div key={file._id} className=\"file-item\">\r\n              <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.url}</a>\r\n              <button type=\"button\" className=\"remove-file\" onClick={() => removeExistingFile(file._id)}>X</button>\r\n            </div>\r\n          ))}\r\n\r\n          {files.map((file, index) => (\r\n            <div key={index} className=\"file-item\">\r\n              <span>{file.name}</span>\r\n              <button type=\"button\" className=\"remove-file\" onClick={() => removeFile(index)}>X</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Required Fields First */}\r\n        <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea placeholder=\"Write a description\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n\r\n        {/* Optional Event Fields */}\r\n        <input type=\"text\" placeholder=\"Enter Event Name (optional)\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\r\n        <input type=\"date\" value={eventDate} onChange={(e) => setEventDate(e.target.value)} />\r\n        <input type=\"time\" value={eventTime} onChange={(e) => setEventTime(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Enter Location (optional)\" value={location} onChange={(e) => setLocation(e.target.value)} />\r\n\r\n        <input type=\"text\" placeholder=\"Enter link (if any)\" value={link} onChange={(e) => setLink(e.target.value)} />\r\n\r\n        <select value={category} onChange={(e) => setCategory(e.target.value)} required>\r\n          <option value=\"\" disabled>Select a category</option>\r\n          <option value=\"Events\">Events</option>\r\n          <option value=\"Club\">Club</option>\r\n          <option value=\"Academics\">Academics</option>\r\n          <option value=\"Notices\">Notices</option>\r\n          <option value=\"Skillhub\">Skillhub</option>\r\n          <option value=\"Placements\">Placements</option>\r\n        </select>\r\n\r\n        <select\r\n          value={subCategory}\r\n          onChange={(e) => setSubCategory(e.target.value)}\r\n          disabled={!subCategoriesMap[category]?.length}\r\n        >\r\n          <option value=\"\" disabled>Select a subcategory</option>\r\n          {subCategoriesMap[category]?.map((sub, index) => (\r\n            <option key={index} value={sub}>{sub}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <div className=\"button-container\">\r\n          <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\r\n          <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\r\n          <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAYA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,mBAAmB,EAAE,QAAQ,CAAC;EAClEC,SAAS,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC;EACrEC,QAAQ,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,qBAAqB;AACnE,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}