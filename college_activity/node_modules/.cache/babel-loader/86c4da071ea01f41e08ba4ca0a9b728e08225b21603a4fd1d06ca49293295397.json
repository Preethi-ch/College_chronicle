{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\studentprofile.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./StudentProfile.css\";\n\n// const StudentProfile = () => {\n//   const [profileImage, setProfileImage] = useState(\n//     \"https://via.placeholder.com/100\" // Default placeholder image\n//   );\n//   const [showOptions, setShowOptions] = useState(false);\n\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       const reader = new FileReader();\n//       reader.onload = () => {\n//         setProfileImage(reader.result);\n//       };\n//       reader.readAsDataURL(file);\n//     }\n//     setShowOptions(false);\n//   };\n\n//   const handleCaptureImage = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       const video = document.createElement(\"video\");\n//       video.srcObject = stream;\n//       video.play();\n\n//       // Wait for the video stream to start\n//       await new Promise((resolve) => (video.onloadedmetadata = resolve));\n\n//       // Create a canvas to capture the video frame\n//       const canvas = document.createElement(\"canvas\");\n//       canvas.width = video.videoWidth;\n//       canvas.height = video.videoHeight;\n//       const context = canvas.getContext(\"2d\");\n//       context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n//       // Stop the video stream\n//       stream.getTracks().forEach((track) => track.stop());\n\n//       // Set the captured image as the profile image\n//       setProfileImage(canvas.toDataURL());\n//     } catch (error) {\n//       console.error(\"Error accessing the webcam:\", error);\n//     }\n//     setShowOptions(false);\n//   };\n\n//   const handleDeleteImage = () => {\n//     setProfileImage(\"https://via.placeholder.com/100\"); // Reset to default\n//     setShowOptions(false);\n//   };\n\n//   return (\n//     <div className=\"profile-container\">\n//       <div className=\"profile-card\">\n//         <div className=\"profile-image-container\">\n//           <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n//           <button\n//             onClick={() => setShowOptions(!showOptions)}\n//             className=\"camera-icon-button\"\n//           >\n//             <img\n//               src=\"/images/camera-icon.jpg\" // Add the camera icon image to your project folder\n//               alt=\"Camera Icon\"\n//               className=\"camera-icon\"\n//             />\n//           </button>\n//         </div>\n//         <h2 className=\"profile-username\">exampleusername</h2>\n//         <p className=\"profile-role\">Student</p>\n//         <div className=\"profile-details\">\n//           <p>\n//             <strong>Name:</strong>\n//           </p>\n//           <p>\n//             <strong>Email:</strong>\n//           </p>\n//           <p>\n//             <strong>Registration No:</strong>\n//           </p>\n//           <p>\n//             <strong>Department:</strong>\n//           </p>\n//           <p>\n//             <strong>Phone Number:</strong>\n//           </p>\n//         </div>\n//         {showOptions && (\n//           <div className=\"options-menu\">\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={handleImageUpload}\n//               className=\"upload-button\"\n//             />\n//             <div className=\"capture-delete-row\">\n//               <button onClick={handleCaptureImage} className=\"capture-button\">\n//                 Capture Image\n//               </button>\n//               <button onClick={handleDeleteImage} className=\"delete-button\">\n//                 <img\n//                   src=\"/images/delete-icon.jpg\" // Replace with the path to your dustbin icon image\n//                   alt=\"Delete\"\n//                   className=\"dustbin-icon\"\n//                 />\n//               </button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default StudentProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"./api/axiosInstance\"; // Ensure this points to your backend API\nimport \"./StudentProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentProfile = ({\n  userEmail\n}) => {\n  _s();\n  const [profileImage, setProfileImage] = useState(\"https://via.placeholder.com/100\" // Default placeholder image\n  );\n  const [showOptions, setShowOptions] = useState(false);\n  const [studentData, setStudentData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Fetch student data based on email\n  useEffect(() => {\n    if (userEmail) {\n      axiosInstance.get(`/studentinfo/${userEmail}`).then(response => {\n        setStudentData(response.data);\n        if (response.data.image) {\n          // Convert binary image data to a URL\n          const imageUrl = URL.createObjectURL(new Blob([response.data.image], {\n            type: \"image/jpeg\"\n          }));\n          setProfileImage(imageUrl);\n        }\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Error fetching student data:\", error);\n        setError(\"Failed to fetch student data\");\n        setLoading(false);\n      });\n    }\n  }, [userEmail]);\n\n  // Handle image upload\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = async () => {\n        try {\n          // Convert the image to a binary buffer\n          const arrayBuffer = await file.arrayBuffer();\n          const buffer = Buffer.from(arrayBuffer);\n\n          // Update the image in the backend\n          const response = await axiosInstance.put(`/studentinfo/${userEmail}/image`, {\n            image: buffer\n          });\n\n          // Update the profile image in the state\n          setProfileImage(reader.result);\n          setStudentData({\n            ...studentData,\n            image: buffer\n          }); // Update local state\n        } catch (error) {\n          console.error(\"Error uploading image:\", error);\n          setError(\"Failed to upload image\");\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n    setShowOptions(false);\n  };\n\n  // Handle image capture (if needed)\n  const handleCaptureImage = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      const video = document.createElement(\"video\");\n      video.srcObject = stream;\n      video.play();\n\n      // Wait for the video stream to start\n      await new Promise(resolve => video.onloadedmetadata = resolve);\n\n      // Create a canvas to capture the video frame\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Stop the video stream\n      stream.getTracks().forEach(track => track.stop());\n\n      // Convert the captured image to a binary buffer\n      const imageData = canvas.toDataURL(\"image/jpeg\");\n      const blob = await fetch(imageData).then(res => res.blob());\n      const arrayBuffer = await blob.arrayBuffer();\n      const buffer = Buffer.from(arrayBuffer);\n\n      // Update the image in the backend\n      const response = await axiosInstance.put(`/studentinfo/${userEmail}/image`, {\n        image: buffer\n      });\n\n      // Update the profile image in the state\n      setProfileImage(imageData);\n      setStudentData({\n        ...studentData,\n        image: buffer\n      }); // Update local state\n    } catch (error) {\n      console.error(\"Error accessing the webcam:\", error);\n      setError(\"Failed to capture image\");\n    }\n    setShowOptions(false);\n  };\n\n  // Handle image deletion\n  const handleDeleteImage = async () => {\n    try {\n      // Delete the image in the backend\n      const response = await axiosInstance.delete(`/studentinfo/${userEmail}/image`);\n\n      // Reset the profile image to the default placeholder\n      setProfileImage(\"https://via.placeholder.com/100\");\n      setStudentData({\n        ...studentData,\n        image: null\n      }); // Update local state\n    } catch (error) {\n      console.error(\"Error deleting image:\", error);\n      setError(\"Failed to delete image\");\n    }\n    setShowOptions(false);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: profileImage,\n          alt: \"Profile\",\n          className: \"profile-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowOptions(!showOptions),\n          className: \"camera-icon-button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/camera-icon.jpg\" // Add the camera icon image to your project folder\n            ,\n            alt: \"Camera Icon\",\n            className: \"camera-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"profile-username\",\n        children: (studentData === null || studentData === void 0 ? void 0 : studentData.name) || \"Student Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-role\",\n        children: \"Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), \" \", studentData === null || studentData === void 0 ? void 0 : studentData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Student ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), \" \", studentData === null || studentData === void 0 ? void 0 : studentData.studentid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Branch:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), \" \", studentData === null || studentData === void 0 ? void 0 : studentData.branch]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), \" \", studentData === null || studentData === void 0 ? void 0 : studentData.phoneno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          className: \"upload-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"capture-delete-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCaptureImage,\n            className: \"capture-button\",\n            children: \"Capture Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteImage,\n            className: \"delete-button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/delete-icon.jpg\" // Replace with the path to your dustbin icon image\n              ,\n              alt: \"Delete\",\n              className: \"dustbin-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentProfile, \"mjEBRX1pE7s1SX5w6N3yFw6qz/g=\");\n_c = StudentProfile;\nexport default StudentProfile;\nvar _c;\n$RefreshReg$(_c, \"StudentProfile\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","StudentProfile","userEmail","_s","profileImage","setProfileImage","showOptions","setShowOptions","studentData","setStudentData","loading","setLoading","error","setError","get","then","response","data","image","imageUrl","URL","createObjectURL","Blob","type","catch","console","handleImageUpload","e","file","target","files","reader","FileReader","onload","arrayBuffer","buffer","Buffer","from","put","result","readAsDataURL","handleCaptureImage","stream","navigator","mediaDevices","getUserMedia","video","document","createElement","srcObject","play","Promise","resolve","onloadedmetadata","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","getTracks","forEach","track","stop","imageData","toDataURL","blob","fetch","res","handleDeleteImage","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","name","email","studentid","branch","phoneno","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/studentprofile.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./StudentProfile.css\";\r\n\r\n// const StudentProfile = () => {\r\n//   const [profileImage, setProfileImage] = useState(\r\n//     \"https://via.placeholder.com/100\" // Default placeholder image\r\n//   );\r\n//   const [showOptions, setShowOptions] = useState(false);\r\n\r\n//   const handleImageUpload = (e) => {\r\n//     const file = e.target.files[0];\r\n//     if (file) {\r\n//       const reader = new FileReader();\r\n//       reader.onload = () => {\r\n//         setProfileImage(reader.result);\r\n//       };\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//     setShowOptions(false);\r\n//   };\r\n\r\n//   const handleCaptureImage = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n//       const video = document.createElement(\"video\");\r\n//       video.srcObject = stream;\r\n//       video.play();\r\n\r\n//       // Wait for the video stream to start\r\n//       await new Promise((resolve) => (video.onloadedmetadata = resolve));\r\n\r\n//       // Create a canvas to capture the video frame\r\n//       const canvas = document.createElement(\"canvas\");\r\n//       canvas.width = video.videoWidth;\r\n//       canvas.height = video.videoHeight;\r\n//       const context = canvas.getContext(\"2d\");\r\n//       context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n//       // Stop the video stream\r\n//       stream.getTracks().forEach((track) => track.stop());\r\n\r\n//       // Set the captured image as the profile image\r\n//       setProfileImage(canvas.toDataURL());\r\n//     } catch (error) {\r\n//       console.error(\"Error accessing the webcam:\", error);\r\n//     }\r\n//     setShowOptions(false);\r\n//   };\r\n\r\n//   const handleDeleteImage = () => {\r\n//     setProfileImage(\"https://via.placeholder.com/100\"); // Reset to default\r\n//     setShowOptions(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <div className=\"profile-card\">\r\n//         <div className=\"profile-image-container\">\r\n//           <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n//           <button\r\n//             onClick={() => setShowOptions(!showOptions)}\r\n//             className=\"camera-icon-button\"\r\n//           >\r\n//             <img\r\n//               src=\"/images/camera-icon.jpg\" // Add the camera icon image to your project folder\r\n//               alt=\"Camera Icon\"\r\n//               className=\"camera-icon\"\r\n//             />\r\n//           </button>\r\n//         </div>\r\n//         <h2 className=\"profile-username\">exampleusername</h2>\r\n//         <p className=\"profile-role\">Student</p>\r\n//         <div className=\"profile-details\">\r\n//           <p>\r\n//             <strong>Name:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Email:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Registration No:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Department:</strong>\r\n//           </p>\r\n//           <p>\r\n//             <strong>Phone Number:</strong>\r\n//           </p>\r\n//         </div>\r\n//         {showOptions && (\r\n//           <div className=\"options-menu\">\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               onChange={handleImageUpload}\r\n//               className=\"upload-button\"\r\n//             />\r\n//             <div className=\"capture-delete-row\">\r\n//               <button onClick={handleCaptureImage} className=\"capture-button\">\r\n//                 Capture Image\r\n//               </button>\r\n//               <button onClick={handleDeleteImage} className=\"delete-button\">\r\n//                 <img\r\n//                   src=\"/images/delete-icon.jpg\" // Replace with the path to your dustbin icon image\r\n//                   alt=\"Delete\"\r\n//                   className=\"dustbin-icon\"\r\n//                 />\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default StudentProfile;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"./api/axiosInstance\"; // Ensure this points to your backend API\r\nimport \"./StudentProfile.css\";\r\n\r\nconst StudentProfile = ({ userEmail }) => {\r\n  const [profileImage, setProfileImage] = useState(\r\n    \"https://via.placeholder.com/100\" // Default placeholder image\r\n  );\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [studentData, setStudentData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch student data based on email\r\n  useEffect(() => {\r\n    if (userEmail) {\r\n      axiosInstance\r\n        .get(`/studentinfo/${userEmail}`)\r\n        .then((response) => {\r\n          setStudentData(response.data);\r\n          if (response.data.image) {\r\n            // Convert binary image data to a URL\r\n            const imageUrl = URL.createObjectURL(\r\n              new Blob([response.data.image], { type: \"image/jpeg\" })\r\n            );\r\n            setProfileImage(imageUrl);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching student data:\", error);\r\n          setError(\"Failed to fetch student data\");\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [userEmail]);\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = async () => {\r\n        try {\r\n          // Convert the image to a binary buffer\r\n          const arrayBuffer = await file.arrayBuffer();\r\n          const buffer = Buffer.from(arrayBuffer);\r\n\r\n          // Update the image in the backend\r\n          const response = await axiosInstance.put(`/studentinfo/${userEmail}/image`, {\r\n            image: buffer,\r\n          });\r\n\r\n          // Update the profile image in the state\r\n          setProfileImage(reader.result);\r\n          setStudentData({ ...studentData, image: buffer }); // Update local state\r\n        } catch (error) {\r\n          console.error(\"Error uploading image:\", error);\r\n          setError(\"Failed to upload image\");\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n    setShowOptions(false);\r\n  };\r\n\r\n  // Handle image capture (if needed)\r\n  const handleCaptureImage = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      const video = document.createElement(\"video\");\r\n      video.srcObject = stream;\r\n      video.play();\r\n\r\n      // Wait for the video stream to start\r\n      await new Promise((resolve) => (video.onloadedmetadata = resolve));\r\n\r\n      // Create a canvas to capture the video frame\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const context = canvas.getContext(\"2d\");\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Stop the video stream\r\n      stream.getTracks().forEach((track) => track.stop());\r\n\r\n      // Convert the captured image to a binary buffer\r\n      const imageData = canvas.toDataURL(\"image/jpeg\");\r\n      const blob = await fetch(imageData).then((res) => res.blob());\r\n      const arrayBuffer = await blob.arrayBuffer();\r\n      const buffer = Buffer.from(arrayBuffer);\r\n\r\n      // Update the image in the backend\r\n      const response = await axiosInstance.put(`/studentinfo/${userEmail}/image`, {\r\n        image: buffer,\r\n      });\r\n\r\n      // Update the profile image in the state\r\n      setProfileImage(imageData);\r\n      setStudentData({ ...studentData, image: buffer }); // Update local state\r\n    } catch (error) {\r\n      console.error(\"Error accessing the webcam:\", error);\r\n      setError(\"Failed to capture image\");\r\n    }\r\n    setShowOptions(false);\r\n  };\r\n\r\n  // Handle image deletion\r\n  const handleDeleteImage = async () => {\r\n    try {\r\n      // Delete the image in the backend\r\n      const response = await axiosInstance.delete(`/studentinfo/${userEmail}/image`);\r\n\r\n      // Reset the profile image to the default placeholder\r\n      setProfileImage(\"https://via.placeholder.com/100\");\r\n      setStudentData({ ...studentData, image: null }); // Update local state\r\n    } catch (error) {\r\n      console.error(\"Error deleting image:\", error);\r\n      setError(\"Failed to delete image\");\r\n    }\r\n    setShowOptions(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-card\">\r\n        <div className=\"profile-image-container\">\r\n          <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\r\n          <button\r\n            onClick={() => setShowOptions(!showOptions)}\r\n            className=\"camera-icon-button\"\r\n          >\r\n            <img\r\n              src=\"/images/camera-icon.jpg\" // Add the camera icon image to your project folder\r\n              alt=\"Camera Icon\"\r\n              className=\"camera-icon\"\r\n            />\r\n          </button>\r\n        </div>\r\n        <h2 className=\"profile-username\">{studentData?.name || \"Student Name\"}</h2>\r\n        <p className=\"profile-role\">Student</p>\r\n        <div className=\"profile-details\">\r\n          <p>\r\n            <strong>Email:</strong> {studentData?.email}\r\n          </p>\r\n          <p>\r\n            <strong>Student ID:</strong> {studentData?.studentid}\r\n          </p>\r\n          <p>\r\n            <strong>Branch:</strong> {studentData?.branch}\r\n          </p>\r\n          <p>\r\n            <strong>Phone Number:</strong> {studentData?.phoneno}\r\n          </p>\r\n        </div>\r\n        {showOptions && (\r\n          <div className=\"options-menu\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleImageUpload}\r\n              className=\"upload-button\"\r\n            />\r\n            <div className=\"capture-delete-row\">\r\n              <button onClick={handleCaptureImage} className=\"capture-button\">\r\n                Capture Image\r\n              </button>\r\n              <button onClick={handleDeleteImage} className=\"delete-button\">\r\n                <img\r\n                  src=\"/images/delete-icon.jpg\" // Replace with the path to your dustbin icon image\r\n                  alt=\"Delete\"\r\n                  className=\"dustbin-icon\"\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}