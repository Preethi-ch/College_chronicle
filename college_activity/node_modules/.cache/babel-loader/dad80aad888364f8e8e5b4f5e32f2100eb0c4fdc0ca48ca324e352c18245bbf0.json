{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./Newpost.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const NewPost = ({ userEmail }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [link, setLink] = useState(\"\"); // State for link field\n//   const [files, setFiles] = useState([]);\n//   const [filePreviews, setFilePreviews] = useState([]);\n\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n\n//     const previews = selectedFiles.map((file) => ({\n//       name: file.name,\n//       url: URL.createObjectURL(file),\n//     }));\n\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\n//   };\n\n//   const handleFileRemove = (index) => {\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\n//   };\n\n//   const resetForm = () => {\n//     setTitle(\"\");\n//     setDescription(\"\");\n//     setCategory(\"\");\n//     setSubCategory(\"\");\n//     setLink(\"\");\n//     setFiles([]);\n//     setFilePreviews([]);\n//   };\n\n//   const handleSubmit = async (isDraft = false) => {\n//     if (!title || !description || !category) {\n//       alert(\"Please fill all the required fields!\");\n//       return;\n//     }\n\n//     if (!userEmail) {\n//       alert(\"Error: User email is missing!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n//     formData.append(\"uploaderEmail\", userEmail);\n//     formData.append(\"link\", link);\n\n//     // Append media only if files are selected\n//     if (files.length > 0) {\n//       files.forEach((file) => {\n//         formData.append(\"media\", file);\n//       });\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (response.ok) {\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n//         resetForm();\n//       } else {\n//         const error = await response.json();\n//         alert( `Error: ${error.error}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting post:\", error);\n//       alert(\"Failed to submit post. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File Upload Section */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\n//           </label>\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\n//         </div>\n\n//         {/* Display Uploaded Files (Show File Names) */}\n//         <div className=\"uploaded-files\">\n//           {filePreviews.map((file, index) => (\n//             <div key={index} className=\"file-item\">\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Text Fields */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         {/* Link Field */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter link (if any)\"\n//           value={link}\n//           onChange={(e) => setLink(e.target.value)}\n//         />\n\n//         {/* Category Selection */}\n//         <select\n//           value={category}\n//           onChange={(e) => {\n//             setCategory(e.target.value);\n//             setSubCategory(\"\");\n//           }}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           <option value=\"events\">Events</option>\n//           <option value=\"clubs\">Clubs</option>\n//           <option value=\"academics\">Academics</option>\n//           <option value=\"notices\">Notices</option>\n//           <option value=\"skillhub\">Skillhub</option>\n//           <option value=\"placements\">Placements</option>\n//         </select>\n\n//         {/* Subcategory Dropdown */}\n//         {category && subCategoriesMap[category]?.length > 0 && (\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\n//             <option value=\"\" disabled>\n//               Select a subcategory\n//             </option>\n//             {subCategoriesMap[category].map((sub, index) => (\n//               <option key={index} value={sub.toLowerCase()}>\n//                 {sub}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\n//             Submit Post\n//           </button>\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\n//             Save as Draft\n//           </button>\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\n//             Cancel\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\n// import React, { useState, useEffect, useMemo } from \"react\";\n// import \"./Newpost.css\";\n// import { useLocation } from \"react-router-dom\";\n\n// const NewPost = ({ userEmail }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [link, setLink] = useState(\"\"); // State for link field\n//   const [files, setFiles] = useState([]);\n//   const [filePreviews, setFilePreviews] = useState([]);\n\n//   const location = useLocation();\n\n//   // Use useMemo to memoize the draft object\n//   const draft = useMemo(() => location.state?.draft || {}, [location.state?.draft]);\n\n//   useEffect(() => {\n//     if (draft) {\n//       setTitle(draft.title || \"\");\n//       setDescription(draft.description || \"\");\n//       setCategory(draft.category || \"\");\n//       setSubCategory(draft.subCategory || \"\");\n//       setLink(draft.link || \"\");\n//       setFilePreviews(draft.media || []);\n//     }\n//   }, [draft]);\n\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n\n//     const previews = selectedFiles.map((file) => ({\n//       name: file.name,\n//       url: URL.createObjectURL(file),\n//     }));\n\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\n//   };\n\n//   const handleFileRemove = (index) => {\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\n//   };\n\n//   const resetForm = () => {\n//     setTitle(\"\");\n//     setDescription(\"\");\n//     setCategory(\"\");\n//     setSubCategory(\"\");\n//     setLink(\"\");\n//     setFiles([]);\n//     setFilePreviews([]);\n//   };\n\n//   const handleSubmit = async (isDraft = false) => {\n//     if (!title || !description || !category) {\n//       alert(\"Please fill all the required fields!\");\n//       return;\n//     }\n\n//     if (!userEmail) {\n//       alert(\"Error: User email is missing!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n//     formData.append(\"uploaderEmail\", userEmail);\n//     formData.append(\"link\", link);\n\n//     // Append media only if files are selected\n//     if (files.length > 0) {\n//       files.forEach((file) => {\n//         formData.append(\"media\", file);\n//       });\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (response.ok) {\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n//         resetForm();\n//       } else {\n//         const error = await response.json();\n//         alert(`Error: ${error.error}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting post:\", error);\n//       alert(\"Failed to submit post. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File Upload Section */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\n//           </label>\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\n//         </div>\n\n//         {/* Display Uploaded Files (Show File Names) */}\n//         <div className=\"uploaded-files\">\n//           {filePreviews.map((file, index) => (\n//             <div key={index} className=\"file-item\">\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Text Fields */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         {/* Link Field */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter link (if any)\"\n//           value={link}\n//           onChange={(e) => setLink(e.target.value)}\n//         />\n\n//         {/* Category Selection */}\n//         <select\n//           value={category}\n//           onChange={(e) => {\n//             setCategory(e.target.value);\n//             setSubCategory(\"\");\n//           }}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           <option value=\"events\">Events</option>\n//           <option value=\"clubs\">Clubs</option>\n//           <option value=\"academics\">Academics</option>\n//           <option value=\"notices\">Notices</option>\n//           <option value=\"skillhub\">Skillhub</option>\n//           <option value=\"placements\">Placements</option>\n//         </select>\n\n//         {/* Subcategory Dropdown */}\n//         {category && subCategoriesMap[category]?.length > 0 && (\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\n//             <option value=\"\" disabled>\n//               Select a subcategory\n//             </option>\n//             {subCategoriesMap[category].map((sub, index) => (\n//               <option key={index} value={sub.toLowerCase()}>\n//                 {sub}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\n//             Submit Post\n//           </button>\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\n//             Save as Draft\n//           </button>\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\n//             Cancel\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"./Newpost.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = ({\n  userEmail\n}) => {\n  _s();\n  var _location$state2, _subCategoriesMap$cat;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [filePreviews, setFilePreviews] = useState([]);\n  const [draftId, setDraftId] = useState(null);\n  const location = useLocation();\n  const draft = useMemo(() => {\n    var _location$state;\n    return ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.draft) || {};\n  }, [(_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.draft]);\n  useEffect(() => {\n    if (draft) {\n      setTitle(draft.title || \"\");\n      setDescription(draft.description || \"\");\n      setCategory(draft.category || \"\");\n      setSubCategory(draft.subCategory || \"\");\n      setLink(draft.link || \"\");\n      setFilePreviews(draft.media || []);\n      setDraftId(draft._id || null); // Store draft ID if editing a draft\n    }\n  }, [draft]);\n  const subCategoriesMap = {\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"]\n  };\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(prevFiles => [...prevFiles, ...selectedFiles]);\n    const previews = selectedFiles.map(file => ({\n      name: file.name,\n      url: URL.createObjectURL(file)\n    }));\n    setFilePreviews(prevPreviews => [...prevPreviews, ...previews]);\n  };\n  const handleFileRemove = index => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n    setFilePreviews(prevPreviews => prevPreviews.filter((_, i) => i !== index));\n  };\n  const resetForm = () => {\n    const confirmCancel = window.confirm(\"Are you sure you want to cancel? Your changes will be lost.\");\n    if (confirmCancel) {\n      setTitle(\"\");\n      setDescription(\"\");\n      setCategory(\"\");\n      setSubCategory(\"\");\n      setLink(\"\");\n      setFiles([]);\n      setFilePreviews([]);\n      setDraftId(null);\n    }\n  };\n  const handleSubmit = async (isDraft = false) => {\n    if (!title || !description || !category) {\n      alert(\"Please fill all the required fields!\");\n      return;\n    }\n    if (!userEmail) {\n      alert(\"Error: User email is missing!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n    formData.append(\"uploaderEmail\", userEmail);\n    formData.append(\"link\", link);\n    if (files.length > 0) {\n      files.forEach(file => {\n        formData.append(\"media\", file);\n      });\n    }\n    try {\n      const url = draftId ? `http://localhost:3000/posts/update-post/${draftId}` : \"http://localhost:3000/posts/create-post\";\n      const method = draftId ? \"PATCH\" : \"POST\";\n      const response = await fetch(url, {\n        method,\n        body: formData\n      });\n      if (response.ok) {\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n        resetForm();\n      } else {\n        const error = await response.json();\n        alert(`Error: ${error.error}`);\n      }\n    } catch (error) {\n      console.error(\"Error submitting post:\", error);\n      alert(\"Failed to submit post. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange,\n          multiple: true,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: filePreviews.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: file.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-button\",\n            onClick: () => handleFileRemove(index),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter link (if any)\",\n        value: link,\n        onChange: e => setLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => {\n          setCategory(e.target.value);\n          setSubCategory(\"\");\n        },\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"events\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"clubs\",\n          children: \"Clubs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"academics\",\n          children: \"Academics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"notices\",\n          children: \"Notices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"skillhub\",\n          children: \"Skillhub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"placements\",\n          children: \"Placements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), category && ((_subCategoriesMap$cat = subCategoriesMap[category]) === null || _subCategoriesMap$cat === void 0 ? void 0 : _subCategoriesMap$cat.length) > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: subCategory,\n        onChange: e => setSubCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this), subCategoriesMap[category].map((sub, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sub.toLowerCase(),\n          children: sub\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(false),\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleSubmit(true),\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: resetForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"jipX77dQRYfmtMzPliYFDjBCp7Y=\", false, function () {\n  return [useLocation];\n});\n_c = NewPost;\nexport default NewPost;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// toast.configure();\n\n// const NewPost = () => {\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     if (id) {\n//       axios.get(`/api/drafts/${id}`).then((response) => {\n//         setTitle(response.data.title);\n//         setContent(response.data.content);\n//       });\n//     }\n//   }, [id]);\n\n//   const handleImageUpload = async (e) => {\n//     const file = e.target.files[0];\n//     setImage(file);\n//   };\n\n//   const uploadImageToCloudinary = async () => {\n//     if (!image) return null;\n//     const formData = new FormData();\n//     formData.append(\"file\", image);\n//     formData.append(\"upload_preset\", \"your_upload_preset\");\n\n//     try {\n//       const response = await axios.post(\"https://api.cloudinary.com/v1_1/your_cloud_name/image/upload\", formData);\n//       return response.data.secure_url;\n//     } catch (error) {\n//       console.error(\"Image upload failed\", error);\n//       toast.error(\"Image upload failed\");\n//       return null;\n//     }\n//   };\n\n//   const handlePost = async () => {\n//     setLoading(true);\n//     const imageUrl = await uploadImageToCloudinary();\n//     const postData = { title, content, status: \"post\", imageUrl };\n\n//     axios.put(`/api/drafts/${id}`, postData)\n//       .then(() => {\n//         toast.success(\"Post published successfully\");\n//         navigate(\"/posts\");\n//       })\n//       .catch(() => toast.error(\"Failed to publish post\"))\n//       .finally(() => setLoading(false));\n//   };\n\n//   const handleDraft = async () => {\n//     setLoading(true);\n//     const imageUrl = await uploadImageToCloudinary();\n//     const draftData = { title, content, status: \"draft\", imageUrl };\n\n//     axios.put(`/api/drafts/${id}`, draftData)\n//       .then(() => toast.success(\"Draft saved successfully\"))\n//       .catch(() => toast.error(\"Failed to save draft\"))\n//       .finally(() => setLoading(false));\n//   };\n\n//   const handleCancel = () => {\n//     if (window.confirm(\"Are you sure you want to discard this draft?\")) {\n//       axios.delete(`/api/drafts/${id}`)\n//         .then(() => {\n//           toast.success(\"Draft deleted\");\n//           navigate(\"/drafts\");\n//         })\n//         .catch(() => toast.error(\"Failed to delete draft\"));\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>{id ? \"Edit Draft\" : \"New Post\"}</h2>\n//       <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\n//       <textarea value={content} onChange={(e) => setContent(e.target.value)} placeholder=\"Content\" />\n//       <input type=\"file\" onChange={handleImageUpload} />\n//       <button onClick={handlePost} disabled={loading}>{loading ? \"Posting...\" : \"Post\"}</button>\n//       <button onClick={handleDraft} disabled={loading}>{loading ? \"Saving...\" : \"Save Draft\"}</button>\n//       <button onClick={handleCancel} disabled={loading}>Cancel</button>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useLocation","jsxDEV","_jsxDEV","NewPost","userEmail","_s","_location$state2","_subCategoriesMap$cat","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","link","setLink","files","setFiles","filePreviews","setFilePreviews","draftId","setDraftId","location","draft","_location$state","state","media","_id","subCategoriesMap","clubs","academics","skillhub","handleFileChange","event","selectedFiles","Array","from","target","prevFiles","previews","map","file","name","url","URL","createObjectURL","prevPreviews","handleFileRemove","index","filter","_","i","resetForm","confirmCancel","window","confirm","handleSubmit","isDraft","alert","formData","FormData","append","length","forEach","method","response","fetch","body","ok","error","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","multiple","style","display","href","rel","onClick","placeholder","value","e","required","disabled","sub","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Newpost.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const NewPost = ({ userEmail }) => {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [link, setLink] = useState(\"\"); // State for link field\r\n//   const [files, setFiles] = useState([]);\r\n//   const [filePreviews, setFilePreviews] = useState([]);\r\n\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n\r\n//     const previews = selectedFiles.map((file) => ({\r\n//       name: file.name,\r\n//       url: URL.createObjectURL(file),\r\n//     }));\r\n\r\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\r\n//   };\r\n\r\n//   const handleFileRemove = (index) => {\r\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setTitle(\"\");\r\n//     setDescription(\"\");\r\n//     setCategory(\"\");\r\n//     setSubCategory(\"\");\r\n//     setLink(\"\");\r\n//     setFiles([]);\r\n//     setFilePreviews([]);\r\n//   };\r\n\r\n//   const handleSubmit = async (isDraft = false) => {\r\n//     if (!title || !description || !category) {\r\n//       alert(\"Please fill all the required fields!\");\r\n//       return;\r\n//     }\r\n  \r\n//     if (!userEmail) {\r\n//       alert(\"Error: User email is missing!\");\r\n//       return;\r\n//     }\r\n  \r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n//     formData.append(\"uploaderEmail\", userEmail);\r\n//     formData.append(\"link\", link);\r\n  \r\n//     // Append media only if files are selected\r\n//     if (files.length > 0) {\r\n//       files.forEach((file) => {\r\n//         formData.append(\"media\", file);\r\n//       });\r\n//     }\r\n  \r\n//     try {\r\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n  \r\n//       if (response.ok) {\r\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n//         resetForm();\r\n//       } else {\r\n//         const error = await response.json();\r\n//         alert( `Error: ${error.error}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting post:\", error);\r\n//       alert(\"Failed to submit post. Please try again later.\");\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File Upload Section */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n//         </div>\r\n\r\n//         {/* Display Uploaded Files (Show File Names) */}\r\n//         <div className=\"uploaded-files\">\r\n//           {filePreviews.map((file, index) => (\r\n//             <div key={index} className=\"file-item\">\r\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\r\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Text Fields */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         {/* Link Field */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter link (if any)\"\r\n//           value={link}\r\n//           onChange={(e) => setLink(e.target.value)}\r\n//         />\r\n\r\n//         {/* Category Selection */}\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => {\r\n//             setCategory(e.target.value);\r\n//             setSubCategory(\"\");\r\n//           }}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>\r\n//             Select a category\r\n//           </option>\r\n//           <option value=\"events\">Events</option>\r\n//           <option value=\"clubs\">Clubs</option>\r\n//           <option value=\"academics\">Academics</option>\r\n//           <option value=\"notices\">Notices</option>\r\n//           <option value=\"skillhub\">Skillhub</option>\r\n//           <option value=\"placements\">Placements</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Dropdown */}\r\n//         {category && subCategoriesMap[category]?.length > 0 && (\r\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n//             <option value=\"\" disabled>\r\n//               Select a subcategory\r\n//             </option>\r\n//             {subCategoriesMap[category].map((sub, index) => (\r\n//               <option key={index} value={sub.toLowerCase()}>\r\n//                 {sub}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         )}\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\r\n//             Submit Post\r\n//           </button>\r\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\r\n//             Save as Draft\r\n//           </button>\r\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\r\n//             Cancel\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n// import React, { useState, useEffect, useMemo } from \"react\";\r\n// import \"./Newpost.css\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const NewPost = ({ userEmail }) => {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [link, setLink] = useState(\"\"); // State for link field\r\n//   const [files, setFiles] = useState([]);\r\n//   const [filePreviews, setFilePreviews] = useState([]);\r\n\r\n//   const location = useLocation();\r\n\r\n//   // Use useMemo to memoize the draft object\r\n//   const draft = useMemo(() => location.state?.draft || {}, [location.state?.draft]);\r\n\r\n//   useEffect(() => {\r\n//     if (draft) {\r\n//       setTitle(draft.title || \"\");\r\n//       setDescription(draft.description || \"\");\r\n//       setCategory(draft.category || \"\");\r\n//       setSubCategory(draft.subCategory || \"\");\r\n//       setLink(draft.link || \"\");\r\n//       setFilePreviews(draft.media || []);\r\n//     }\r\n//   }, [draft]);\r\n\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n\r\n//     const previews = selectedFiles.map((file) => ({\r\n//       name: file.name,\r\n//       url: URL.createObjectURL(file),\r\n//     }));\r\n\r\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\r\n//   };\r\n\r\n//   const handleFileRemove = (index) => {\r\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setTitle(\"\");\r\n//     setDescription(\"\");\r\n//     setCategory(\"\");\r\n//     setSubCategory(\"\");\r\n//     setLink(\"\");\r\n//     setFiles([]);\r\n//     setFilePreviews([]);\r\n//   };\r\n\r\n//   const handleSubmit = async (isDraft = false) => {\r\n//     if (!title || !description || !category) {\r\n//       alert(\"Please fill all the required fields!\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!userEmail) {\r\n//       alert(\"Error: User email is missing!\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n//     formData.append(\"uploaderEmail\", userEmail);\r\n//     formData.append(\"link\", link);\r\n\r\n//     // Append media only if files are selected\r\n//     if (files.length > 0) {\r\n//       files.forEach((file) => {\r\n//         formData.append(\"media\", file);\r\n//       });\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n//         resetForm();\r\n//       } else {\r\n//         const error = await response.json();\r\n//         alert(`Error: ${error.error}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting post:\", error);\r\n//       alert(\"Failed to submit post. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File Upload Section */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n//         </div>\r\n\r\n//         {/* Display Uploaded Files (Show File Names) */}\r\n//         <div className=\"uploaded-files\">\r\n//           {filePreviews.map((file, index) => (\r\n//             <div key={index} className=\"file-item\">\r\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\r\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Text Fields */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         {/* Link Field */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter link (if any)\"\r\n//           value={link}\r\n//           onChange={(e) => setLink(e.target.value)}\r\n//         />\r\n\r\n//         {/* Category Selection */}\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => {\r\n//             setCategory(e.target.value);\r\n//             setSubCategory(\"\");\r\n//           }}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>\r\n//             Select a category\r\n//           </option>\r\n//           <option value=\"events\">Events</option>\r\n//           <option value=\"clubs\">Clubs</option>\r\n//           <option value=\"academics\">Academics</option>\r\n//           <option value=\"notices\">Notices</option>\r\n//           <option value=\"skillhub\">Skillhub</option>\r\n//           <option value=\"placements\">Placements</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Dropdown */}\r\n//         {category && subCategoriesMap[category]?.length > 0 && (\r\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n//             <option value=\"\" disabled>\r\n//               Select a subcategory\r\n//             </option>\r\n//             {subCategoriesMap[category].map((sub, index) => (\r\n//               <option key={index} value={sub.toLowerCase()}>\r\n//                 {sub}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         )}\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\r\n//             Submit Post\r\n//           </button>\r\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\r\n//             Save as Draft\r\n//           </button>\r\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\r\n//             Cancel\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport \"./Newpost.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst NewPost = ({ userEmail }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [filePreviews, setFilePreviews] = useState([]);\r\n  const [draftId, setDraftId] = useState(null);\r\n\r\n  const location = useLocation();\r\n\r\n  const draft = useMemo(() => location.state?.draft || {}, [location.state?.draft]);\r\n\r\n  useEffect(() => {\r\n    if (draft) {\r\n      setTitle(draft.title || \"\");\r\n      setDescription(draft.description || \"\");\r\n      setCategory(draft.category || \"\");\r\n      setSubCategory(draft.subCategory || \"\");\r\n      setLink(draft.link || \"\");\r\n      setFilePreviews(draft.media || []);\r\n      setDraftId(draft._id || null); // Store draft ID if editing a draft\r\n    }\r\n  }, [draft]);\r\n\r\n  const subCategoriesMap = {\r\n    clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n    academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n    skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n\r\n    const previews = selectedFiles.map((file) => ({\r\n      name: file.name,\r\n      url: URL.createObjectURL(file),\r\n    }));\r\n\r\n    setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\r\n  };\r\n\r\n  const handleFileRemove = (index) => {\r\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n    setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    const confirmCancel = window.confirm(\"Are you sure you want to cancel? Your changes will be lost.\");\r\n    if (confirmCancel) {\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setCategory(\"\");\r\n      setSubCategory(\"\");\r\n      setLink(\"\");\r\n      setFiles([]);\r\n      setFilePreviews([]);\r\n      setDraftId(null);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleSubmit = async (isDraft = false) => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill all the required fields!\");\r\n      return;\r\n    }\r\n\r\n    if (!userEmail) {\r\n      alert(\"Error: User email is missing!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n    formData.append(\"uploaderEmail\", userEmail);\r\n    formData.append(\"link\", link);\r\n\r\n    if (files.length > 0) {\r\n      files.forEach((file) => {\r\n        formData.append(\"media\", file);\r\n      });\r\n    }\r\n\r\n    try {\r\n      const url = draftId\r\n        ? `http://localhost:3000/posts/update-post/${draftId}`\r\n        : \"http://localhost:3000/posts/create-post\";\r\n\r\n      const method = draftId ? \"PATCH\" : \"POST\";\r\n\r\n      const response = await fetch(url, {\r\n        method,\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n        resetForm();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error: ${error.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting post:\", error);\r\n      alert(\"Failed to submit post. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>New Post</h2>\r\n      <form>\r\n        {/* File Upload Section */}\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"fileInput\">\r\n            {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n          </label>\r\n          <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n        </div>\r\n\r\n        {/* Display Uploaded Files */}\r\n        <div className=\"uploaded-files\">\r\n          {filePreviews.map((file, index) => (\r\n            <div key={index} className=\"file-item\">\r\n              <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\r\n              <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Text Fields */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Write a description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        ></textarea>\r\n\r\n        {/* Link Field */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter link (if any)\"\r\n          value={link}\r\n          onChange={(e) => setLink(e.target.value)}\r\n        />\r\n\r\n        {/* Category Selection */}\r\n        <select\r\n          value={category}\r\n          onChange={(e) => {\r\n            setCategory(e.target.value);\r\n            setSubCategory(\"\");\r\n          }}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a category\r\n          </option>\r\n          <option value=\"events\">Events</option>\r\n          <option value=\"clubs\">Clubs</option>\r\n          <option value=\"academics\">Academics</option>\r\n          <option value=\"notices\">Notices</option>\r\n          <option value=\"skillhub\">Skillhub</option>\r\n          <option value=\"placements\">Placements</option>\r\n        </select>\r\n\r\n        {/* Subcategory Dropdown */}\r\n        {category && subCategoriesMap[category]?.length > 0 && (\r\n          <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n            <option value=\"\" disabled>\r\n              Select a subcategory\r\n            </option>\r\n            {subCategoriesMap[category].map((sub, index) => (\r\n              <option key={index} value={sub.toLowerCase()}>\r\n                {sub}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n\r\n        {/* Buttons */}\r\n        <div className=\"button-container\">\r\n          <button type=\"button\" onClick={() => handleSubmit(false)}>\r\n            Submit Post\r\n          </button>\r\n          <button type=\"button\" onClick={() => handleSubmit(true)}>\r\n            Save as Draft\r\n          </button>\r\n          <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// toast.configure();\r\n\r\n// const NewPost = () => {\r\n//   const { id } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [image, setImage] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     if (id) {\r\n//       axios.get(`/api/drafts/${id}`).then((response) => {\r\n//         setTitle(response.data.title);\r\n//         setContent(response.data.content);\r\n//       });\r\n//     }\r\n//   }, [id]);\r\n\r\n//   const handleImageUpload = async (e) => {\r\n//     const file = e.target.files[0];\r\n//     setImage(file);\r\n//   };\r\n\r\n//   const uploadImageToCloudinary = async () => {\r\n//     if (!image) return null;\r\n//     const formData = new FormData();\r\n//     formData.append(\"file\", image);\r\n//     formData.append(\"upload_preset\", \"your_upload_preset\");\r\n\r\n//     try {\r\n//       const response = await axios.post(\"https://api.cloudinary.com/v1_1/your_cloud_name/image/upload\", formData);\r\n//       return response.data.secure_url;\r\n//     } catch (error) {\r\n//       console.error(\"Image upload failed\", error);\r\n//       toast.error(\"Image upload failed\");\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   const handlePost = async () => {\r\n//     setLoading(true);\r\n//     const imageUrl = await uploadImageToCloudinary();\r\n//     const postData = { title, content, status: \"post\", imageUrl };\r\n\r\n//     axios.put(`/api/drafts/${id}`, postData)\r\n//       .then(() => {\r\n//         toast.success(\"Post published successfully\");\r\n//         navigate(\"/posts\");\r\n//       })\r\n//       .catch(() => toast.error(\"Failed to publish post\"))\r\n//       .finally(() => setLoading(false));\r\n//   };\r\n\r\n//   const handleDraft = async () => {\r\n//     setLoading(true);\r\n//     const imageUrl = await uploadImageToCloudinary();\r\n//     const draftData = { title, content, status: \"draft\", imageUrl };\r\n\r\n//     axios.put(`/api/drafts/${id}`, draftData)\r\n//       .then(() => toast.success(\"Draft saved successfully\"))\r\n//       .catch(() => toast.error(\"Failed to save draft\"))\r\n//       .finally(() => setLoading(false));\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     if (window.confirm(\"Are you sure you want to discard this draft?\")) {\r\n//       axios.delete(`/api/drafts/${id}`)\r\n//         .then(() => {\r\n//           toast.success(\"Draft deleted\");\r\n//           navigate(\"/drafts\");\r\n//         })\r\n//         .catch(() => toast.error(\"Failed to delete draft\"));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{id ? \"Edit Draft\" : \"New Post\"}</h2>\r\n//       <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\r\n//       <textarea value={content} onChange={(e) => setContent(e.target.value)} placeholder=\"Content\" />\r\n//       <input type=\"file\" onChange={handleImageUpload} />\r\n//       <button onClick={handlePost} disabled={loading}>{loading ? \"Posting...\" : \"Post\"}</button>\r\n//       <button onClick={handleDraft} disabled={loading}>{loading ? \"Saving...\" : \"Save Draft\"}</button>\r\n//       <button onClick={handleCancel} disabled={loading}>Cancel</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}