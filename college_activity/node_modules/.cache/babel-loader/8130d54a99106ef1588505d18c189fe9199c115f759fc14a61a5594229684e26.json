{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Newpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./Newpost.css\";\n\n// const NewPost = ({ userEmail }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [subCategory, setSubCategory] = useState(\"\");\n//   const [link, setLink] = useState(\"\"); // State for link field\n//   const [files, setFiles] = useState([]);\n//   const [filePreviews, setFilePreviews] = useState([]);\n\n//   const subCategoriesMap = {\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\n//   };\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n\n//     const previews = selectedFiles.map((file) => ({\n//       name: file.name,\n//       url: URL.createObjectURL(file),\n//     }));\n\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\n//   };\n\n//   const handleFileRemove = (index) => {\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\n//   };\n\n//   const resetForm = () => {\n//     setTitle(\"\");\n//     setDescription(\"\");\n//     setCategory(\"\");\n//     setSubCategory(\"\");\n//     setLink(\"\");\n//     setFiles([]);\n//     setFilePreviews([]);\n//   };\n\n//   const handleSubmit = async (isDraft = false) => {\n//     if (!title || !description || !category) {\n//       alert(\"Please fill all the required fields!\");\n//       return;\n//     }\n\n//     if (!userEmail) {\n//       alert(\"Error: User email is missing!\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"description\", description);\n//     formData.append(\"category\", category);\n//     formData.append(\"subCategory\", subCategory);\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n//     formData.append(\"uploaderEmail\", userEmail);\n//     formData.append(\"link\", link);\n\n//     // Append media only if files are selected\n//     if (files.length > 0) {\n//       files.forEach((file) => {\n//         formData.append(\"media\", file);\n//       });\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (response.ok) {\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n//         resetForm();\n//       } else {\n//         const error = await response.json();\n//         alert( `Error: ${error.error}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting post:\", error);\n//       alert(\"Failed to submit post. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>New Post</h2>\n//       <form>\n//         {/* File Upload Section */}\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"fileInput\">\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\n//           </label>\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\n//         </div>\n\n//         {/* Display Uploaded Files (Show File Names) */}\n//         <div className=\"uploaded-files\">\n//           {filePreviews.map((file, index) => (\n//             <div key={index} className=\"file-item\">\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Text Fields */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Write a description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         ></textarea>\n\n//         {/* Link Field */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter link (if any)\"\n//           value={link}\n//           onChange={(e) => setLink(e.target.value)}\n//         />\n\n//         {/* Category Selection */}\n//         <select\n//           value={category}\n//           onChange={(e) => {\n//             setCategory(e.target.value);\n//             setSubCategory(\"\");\n//           }}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           <option value=\"events\">Events</option>\n//           <option value=\"clubs\">Clubs</option>\n//           <option value=\"academics\">Academics</option>\n//           <option value=\"notices\">Notices</option>\n//           <option value=\"skillhub\">Skillhub</option>\n//           <option value=\"placements\">Placements</option>\n//         </select>\n\n//         {/* Subcategory Dropdown */}\n//         {category && subCategoriesMap[category]?.length > 0 && (\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\n//             <option value=\"\" disabled>\n//               Select a subcategory\n//             </option>\n//             {subCategoriesMap[category].map((sub, index) => (\n//               <option key={index} value={sub.toLowerCase()}>\n//                 {sub}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         {/* Buttons */}\n//         <div className=\"button-container\">\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\n//             Submit Post\n//           </button>\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\n//             Save as Draft\n//           </button>\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\n//             Cancel\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewPost;\n\n// newposts.js\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"./Newpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = ({\n  userEmail\n}) => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const draft = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.draft) || {};\n  const [title, setTitle] = useState(draft.title || \"\");\n  const [description, setDescription] = useState(draft.description || \"\");\n  const [category, setCategory] = useState(draft.category || \"\");\n  const [subCategory, setSubCategory] = useState(draft.subCategory || \"\");\n  const [link, setLink] = useState(draft.link || \"\");\n  const [files, setFiles] = useState([]);\n  const [filePreviews, setFilePreviews] = useState(draft.media || []);\n  useEffect(() => {\n    if (draft.media) {\n      setFilePreviews(draft.media);\n    }\n  }, [draft]);\n  const handleSubmit = async (isDraft = false) => {\n    if (!title || !description || !category) {\n      alert(\"Please fill all the required fields!\");\n      return;\n    }\n    if (!userEmail) {\n      alert(\"Error: User email is missing!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\n    formData.append(\"uploaderEmail\", userEmail);\n    formData.append(\"link\", link);\n    if (files.length > 0) {\n      files.forEach(file => {\n        formData.append(\"media\", file);\n      });\n    }\n    try {\n      const endpoint = draft._id ? `http://localhost:3000/posts/update-post/${draft._id}` : \"http://localhost:3000/posts/create-post\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\n        navigate(\"/\");\n      } else {\n        const error = await response.json();\n        alert(`Error: ${error.error}`);\n      }\n    } catch (error) {\n      console.error(\"Error submitting post:\", error);\n      alert(\"Failed to submit post. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: draft._id ? \"Edit Draft\" : \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: link,\n        onChange: e => setLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleSubmit(false),\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleSubmit(true),\n        children: \"Save as Draft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"X/hkMoMCeuHYNt/wDICcXIkXIow=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","NewPost","userEmail","_s","_location$state","location","navigate","draft","state","title","setTitle","description","setDescription","category","setCategory","subCategory","setSubCategory","link","setLink","files","setFiles","filePreviews","setFilePreviews","media","handleSubmit","isDraft","alert","formData","FormData","append","length","forEach","file","endpoint","_id","response","fetch","method","body","ok","error","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Newpost.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Newpost.css\";\r\n\r\n\r\n// const NewPost = ({ userEmail }) => {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [subCategory, setSubCategory] = useState(\"\");\r\n//   const [link, setLink] = useState(\"\"); // State for link field\r\n//   const [files, setFiles] = useState([]);\r\n//   const [filePreviews, setFilePreviews] = useState([]);\r\n\r\n//   const subCategoriesMap = {\r\n//     clubs: [\"RMF\", \"Splashout\", \"VPOD\", \"Rhythmic Thunders\", \"Happy Club\"],\r\n//     academics: [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\"],\r\n//     skillhub: [\"Hackathons\", \"Coding Contests\", \"Training Programs\"],\r\n//   };\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFiles = Array.from(event.target.files);\r\n//     setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\r\n\r\n//     const previews = selectedFiles.map((file) => ({\r\n//       name: file.name,\r\n//       url: URL.createObjectURL(file),\r\n//     }));\r\n\r\n//     setFilePreviews((prevPreviews) => [...prevPreviews, ...previews]);\r\n//   };\r\n\r\n//   const handleFileRemove = (index) => {\r\n//     setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index));\r\n//     setFilePreviews((prevPreviews) => prevPreviews.filter((_, i) => i !== index));\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setTitle(\"\");\r\n//     setDescription(\"\");\r\n//     setCategory(\"\");\r\n//     setSubCategory(\"\");\r\n//     setLink(\"\");\r\n//     setFiles([]);\r\n//     setFilePreviews([]);\r\n//   };\r\n\r\n//   const handleSubmit = async (isDraft = false) => {\r\n//     if (!title || !description || !category) {\r\n//       alert(\"Please fill all the required fields!\");\r\n//       return;\r\n//     }\r\n  \r\n//     if (!userEmail) {\r\n//       alert(\"Error: User email is missing!\");\r\n//       return;\r\n//     }\r\n  \r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"category\", category);\r\n//     formData.append(\"subCategory\", subCategory);\r\n//     formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n//     formData.append(\"uploaderEmail\", userEmail);\r\n//     formData.append(\"link\", link);\r\n  \r\n//     // Append media only if files are selected\r\n//     if (files.length > 0) {\r\n//       files.forEach((file) => {\r\n//         formData.append(\"media\", file);\r\n//       });\r\n//     }\r\n  \r\n//     try {\r\n//       const response = await fetch(\"http://localhost:3000/posts/create-post\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n  \r\n//       if (response.ok) {\r\n//         alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n//         resetForm();\r\n//       } else {\r\n//         const error = await response.json();\r\n//         alert( `Error: ${error.error}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting post:\", error);\r\n//       alert(\"Failed to submit post. Please try again later.\");\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>New Post</h2>\r\n//       <form>\r\n//         {/* File Upload Section */}\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"fileInput\">\r\n//             {files.length > 0 ? \"Add more files\" : \"Click to browse or drop files here\"}\r\n//           </label>\r\n//           <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} multiple style={{ display: \"none\" }} />\r\n//         </div>\r\n\r\n//         {/* Display Uploaded Files (Show File Names) */}\r\n//         <div className=\"uploaded-files\">\r\n//           {filePreviews.map((file, index) => (\r\n//             <div key={index} className=\"file-item\">\r\n//               <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\r\n//               <button type=\"button\" className=\"remove-button\" onClick={() => handleFileRemove(index)}>‚ùå</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Text Fields */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter title\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           placeholder=\"Write a description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         ></textarea>\r\n\r\n//         {/* Link Field */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter link (if any)\"\r\n//           value={link}\r\n//           onChange={(e) => setLink(e.target.value)}\r\n//         />\r\n\r\n//         {/* Category Selection */}\r\n//         <select\r\n//           value={category}\r\n//           onChange={(e) => {\r\n//             setCategory(e.target.value);\r\n//             setSubCategory(\"\");\r\n//           }}\r\n//           required\r\n//         >\r\n//           <option value=\"\" disabled>\r\n//             Select a category\r\n//           </option>\r\n//           <option value=\"events\">Events</option>\r\n//           <option value=\"clubs\">Clubs</option>\r\n//           <option value=\"academics\">Academics</option>\r\n//           <option value=\"notices\">Notices</option>\r\n//           <option value=\"skillhub\">Skillhub</option>\r\n//           <option value=\"placements\">Placements</option>\r\n//         </select>\r\n\r\n//         {/* Subcategory Dropdown */}\r\n//         {category && subCategoriesMap[category]?.length > 0 && (\r\n//           <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)}>\r\n//             <option value=\"\" disabled>\r\n//               Select a subcategory\r\n//             </option>\r\n//             {subCategoriesMap[category].map((sub, index) => (\r\n//               <option key={index} value={sub.toLowerCase()}>\r\n//                 {sub}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         )}\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"button-container\">\r\n//           <button type=\"button\" onClick={() => handleSubmit(false)}>\r\n//             Submit Post\r\n//           </button>\r\n//           <button type=\"button\" onClick={() => handleSubmit(true)}>\r\n//             Save as Draft\r\n//           </button>\r\n//           <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\r\n//             Cancel\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewPost;\r\n\r\n\r\n\r\n\r\n\r\n// newposts.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"./Newpost.css\";\r\n\r\nconst NewPost = ({ userEmail }) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const draft = location.state?.draft || {};\r\n\r\n  const [title, setTitle] = useState(draft.title || \"\");\r\n  const [description, setDescription] = useState(draft.description || \"\");\r\n  const [category, setCategory] = useState(draft.category || \"\");\r\n  const [subCategory, setSubCategory] = useState(draft.subCategory || \"\");\r\n  const [link, setLink] = useState(draft.link || \"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [filePreviews, setFilePreviews] = useState(draft.media || []);\r\n\r\n  useEffect(() => {\r\n    if (draft.media) {\r\n      setFilePreviews(draft.media);\r\n    }\r\n  }, [draft]);\r\n\r\n  const handleSubmit = async (isDraft = false) => {\r\n    if (!title || !description || !category) {\r\n      alert(\"Please fill all the required fields!\");\r\n      return;\r\n    }\r\n\r\n    if (!userEmail) {\r\n      alert(\"Error: User email is missing!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"subCategory\", subCategory);\r\n    formData.append(\"status\", isDraft ? \"draft\" : \"posted\");\r\n    formData.append(\"uploaderEmail\", userEmail);\r\n    formData.append(\"link\", link);\r\n\r\n    if (files.length > 0) {\r\n      files.forEach((file) => {\r\n        formData.append(\"media\", file);\r\n      });\r\n    }\r\n\r\n    try {\r\n      const endpoint = draft._id\r\n        ? `http://localhost:3000/posts/update-post/${draft._id}`\r\n        : \"http://localhost:3000/posts/create-post\";\r\n\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(isDraft ? \"Draft saved successfully!\" : \"Post submitted successfully!\");\r\n        navigate(\"/\");\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error: ${error.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting post:\", error);\r\n      alert(\"Failed to submit post. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{draft._id ? \"Edit Draft\" : \"New Post\"}</h2>\r\n      <form>\r\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n        <input type=\"text\" value={link} onChange={(e) => setLink(e.target.value)} />\r\n        <button type=\"button\" onClick={() => handleSubmit(false)}>Submit Post</button>\r\n        <button type=\"button\" onClick={() => handleSubmit(true)}>Save as Draft</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACjC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAG,EAAAH,eAAA,GAAAC,QAAQ,CAACG,KAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}