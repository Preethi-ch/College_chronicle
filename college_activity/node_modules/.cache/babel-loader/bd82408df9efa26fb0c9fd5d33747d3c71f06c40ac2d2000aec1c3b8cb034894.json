{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Postspage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./Postspage.css\";\nimport { AuthContext } from \"./contextauth\"; // Import AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userEmail\n  } = useContext(AuthContext); // Get logged-in user's email\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    console.log(\"Checking userEmail in PostsPage:\", userEmail);\n    if (!userEmail) {\n      console.warn(\"User email is not available, skipping fetch.\");\n      return;\n    }\n    const fetchPosts = async () => {\n      try {\n        console.log(\"Fetching posts for user:\", userEmail);\n        const response = await fetch(`http://localhost:3000/postview/posted?email=${userEmail}`);\n        const data = await response.json();\n        console.log(\"Fetched posts from backend:\", data);\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [userEmail]); // Fetch posts when userEmail changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-grid\",\n      children: posts.length > 0 ? posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by latest\n      .map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-item\",\n        children: [post.media && post.media.length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n          showThumbs: false,\n          infiniteLoop: true,\n          autoPlay: true,\n          interval: 3000,\n          showStatus: false,\n          children: post.media.map((media, idx) => media.url && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: media.url,\n              alt: `${post.title} ${idx}`,\n              className: \"feed-image-item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-post-button\",\n      onClick: () => navigate(\"/Newpost\"),\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsPage, \"IE0WhKHv/UmLpzZWHf4nHXmUBEo=\", false, function () {\n  return [useNavigate];\n});\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","Carousel","AuthContext","jsxDEV","_jsxDEV","PostsPage","_s","navigate","userEmail","posts","setPosts","console","log","warn","fetchPosts","response","fetch","data","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","sort","a","b","Date","createdAt","map","post","index","media","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","url","src","alt","title","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Postspage.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./Postspage.css\";\r\nimport { AuthContext } from \"./contextauth\"; // Import AuthContext\r\n\r\nconst PostsPage = () => {\r\n  const navigate = useNavigate();\r\n  const { userEmail } = useContext(AuthContext); // Get logged-in user's email\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Checking userEmail in PostsPage:\", userEmail);\r\n\r\n    if (!userEmail) {\r\n      console.warn(\"User email is not available, skipping fetch.\");\r\n      return;\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n      try {\r\n        console.log(\"Fetching posts for user:\", userEmail);\r\n\r\n        const response = await fetch(`http://localhost:3000/postview/posted?email=${userEmail}`);\r\n        const data = await response.json();\r\n\r\n        console.log(\"Fetched posts from backend:\", data);\r\n\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [userEmail]); // Fetch posts when userEmail changes\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      <h1>Your Posts</h1>\r\n\r\n      <div className=\"feed-grid\">\r\n        {posts.length > 0 ? (\r\n          posts\r\n            .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort by latest\r\n            .map((post, index) => (\r\n              <div key={index} className=\"feed-item\">\r\n                {post.media && post.media.length > 0 && (\r\n                  <Carousel\r\n                    showThumbs={false}\r\n                    infiniteLoop\r\n                    autoPlay\r\n                    interval={3000}\r\n                    showStatus={false}\r\n                  >\r\n                    {post.media.map(\r\n                      (media, idx) =>\r\n                        media.url && (\r\n                          <div key={idx}>\r\n                            <img src={media.url} alt={`${post.title} ${idx}`} className=\"feed-image-item\" />\r\n                          </div>\r\n                        )\r\n                    )}\r\n                  </Carousel>\r\n                )}\r\n\r\n                <div className=\"feed-content\">\r\n                  <h3>{post.title}</h3>\r\n                  <p>{post.description}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n        ) : (\r\n          <p>No posts available.</p>\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"new-post-button\" onClick={() => navigate(\"/Newpost\")}>\r\n        New Post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}