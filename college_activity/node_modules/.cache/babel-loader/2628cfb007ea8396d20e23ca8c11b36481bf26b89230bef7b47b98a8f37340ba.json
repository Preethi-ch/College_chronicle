{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chpre\\\\OneDrive\\\\Desktop\\\\college\\\\PROJECTS\\\\miniproject\\\\college_activity\\\\src\\\\Dashboardcontent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [activeCategory, setActiveCategory] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         console.log(\"Fetching posts...\"); // Log before fetching\n//         const response = await fetch(\"http://localhost:3000/fetch/\"); // Adjust API URL if needed\n//         const data = await response.json();\n//         console.log(\"Fetched posts data:\", data);  // Log the data received from the backend\n//         setPosts(data);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, []);\n\n//   const categories = [\n//     {\n//       name: \"Club\",\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"],\n//       image: \"/images/clubs-image.jpg\",\n//     },\n//     {\n//       name: \"Academics\",\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\n//       image: \"/images/academic excellence.jpg\",\n//     },\n//     {\n//       name: \"Notices\",\n//       subcategories: [],\n//       image: \"/images/notice.jpg\",\n//     },\n//     {\n//       name: \"Skill Hub\",\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\n//       image: \"/images/skill-hub.jpg\",\n//     },\n//     {\n//       name: \"Events\",\n//       subcategories: [],\n//       image: \"/images/events-icon.jpg\",\n//     },\n//     {\n//       name: \"Placements\",\n//       subcategories: [],\n//       image: \"/images/placements.jpg\",\n//     },\n//   ];\n\n//   console.log(\"Posts array in state:\", posts); // Log the posts array in the component state\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <h1>Dashboard</h1>\n\n//       {/* CATEGORY SECTION */}\n//       <div className=\"category-container\">\n//         {categories.map((category) => (\n//           <div\n//             key={category.name}\n//             className=\"category-wrapper\"\n//             onMouseEnter={() => setActiveCategory(category.name)}\n//             onMouseLeave={() => setActiveCategory(null)}\n//           >\n//             <div className=\"category-icon\">\n//               <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\n//             </div>\n//             <div className=\"category-name\">{category.name}</div>\n//             {category.subcategories.length > 0 && activeCategory === category.name && (\n//               <div className=\"sub-category-container\">\n//                 <ul>\n//                   {category.subcategories.map((subcategory, subIndex) => (\n//                     <li key={subIndex} className=\"subcategory-item\">\n//                       {subcategory === \"RMF\" ? (\n//                         <Link to=\"/rmfpage\" className=\"subcategory-link\">\n//                           RMF\n//                         </Link>\n//                       ) : (\n//                         subcategory\n//                       )}\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* FEED SECTION */}\n//       <div className=\"feed-section\">\n//         <h2>Feed</h2>\n//         <div className=\"feed-grid\">\n//           {posts\n//             .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by createdAt in descending order\n//             .map((post, index) => (\n//               <div className=\"feed-item\" key={index}>\n//                 <div className=\"feed-image\">\n//                   {/* Check if there are multiple media items */}\n//                   {post.media.length > 0 && post.media[0].url && (\n//                     <Carousel\n//                       showThumbs={false}\n//                       infiniteLoop={true}\n//                       autoPlay={true}  // Enable auto-play for the carousel\n//                       interval={3000}  // Set interval for auto-play\n//                       showStatus={false}\n//                     >\n//                       {post.media.map((media, idx) => (\n//                         media.url && (\n//                           <div key={idx}>\n//                             <img src={media.url} alt={`${post.title} ${idx}`} />\n//                           </div>\n//                         )\n//                       ))}\n//                     </Carousel>\n//                   )}\n//                 </div>\n//                 <div className=\"feed-content\">\n//                   <h3>{post.title}</h3>\n//                   <p>{post.description}</p>\n\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import \"./DashboardContent.css\";\n\n// const DashboardContent = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [activeCategory, setActiveCategory] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         console.log(\"Fetching posts...\");\n//         const response = await fetch(\"http://localhost:3000/fetch/\");\n//         const data = await response.json();\n//         console.log(\"Fetched posts data:\", data);\n//         setPosts(data);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//       }\n//     };\n//     fetchPosts();\n//   }, []);\n\n//   const categories = []; // Define categories if needed\n\n//   const handleVideoClick = (url) => {\n//     const videoElement = document.createElement(\"video\");\n//     videoElement.src = url;\n//     videoElement.controls = true;\n//     videoElement.autoplay = true;\n//     videoElement.style.position = \"fixed\";\n//     videoElement.style.top = \"50%\";\n//     videoElement.style.left = \"50%\";\n//     videoElement.style.transform = \"translate(-50%, -50%)\";\n//     videoElement.style.zIndex = 9999;\n//     videoElement.style.width = \"80vw\";\n//     videoElement.style.height = \"80vh\";\n//     document.body.appendChild(videoElement);\n//     videoElement.requestFullscreen();\n//   };\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <h1>Dashboard</h1>\n\n//       {/* CATEGORY SECTION */}\n//       <div className=\"category-container\">\n//         {categories.map((category) => (\n//           <div\n//             key={category.name}\n//             className=\"category-wrapper\"\n//             onMouseEnter={() => setActiveCategory(category.name)}\n//             onMouseLeave={() => setActiveCategory(null)}\n//           >\n//             <div className=\"category-icon\">\n//               <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\n//             </div>\n//             <div className=\"category-name\">{category.name}</div>\n//             {category.subcategories.length > 0 && activeCategory === category.name && (\n//               <div className=\"sub-category-container\">\n//                 <ul>\n//                   {category.subcategories.map((subcategory, subIndex) => (\n//                     <li key={subIndex} className=\"subcategory-item\">\n//                       {subcategory === \"RMF\" ? (\n//                         <Link to=\"/rmfpage\" className=\"subcategory-link\">\n//                           RMF\n//                         </Link>\n//                       ) : (\n//                         subcategory\n//                       )}\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* FEED SECTION */}\n//       <div className=\"feed-section\">\n//         <h2>Feed</h2>\n//         <div className=\"feed-grid\">\n//           {posts\n//             .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by date\n//             .map((post, index) => (\n//               <div className=\"feed-item\" key={index}>\n//                 <div className=\"feed-image\">\n//                   {post.media.length > 0 && post.media[0].url && (\n//                     <Carousel\n//                       showThumbs={false}\n//                       infiniteLoop={true}\n//                       autoPlay={true}\n//                       interval={3000}\n//                       showStatus={false}\n//                     >\n//                       {post.media.map((media, idx) => {\n//                         if (media.type === \"image/jpeg\" || media.type === \"image/png\" || media.type === \"image/gif\") {\n//                           return (\n//                             <div key={idx}>\n//                               <img src={media.url} alt={`${post.title} ${idx}`} />\n//                             </div>\n//                           );\n//                         } else if (media.type === \"application/pdf\") {\n//                           return (\n//                             <div key={idx} className=\"pdf-container\">\n//                               <iframe\n//                                 src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\n//                                 title=\"PDF Viewer\"\n//                                 width=\"100%\"\n//                                 height=\"500px\"\n//                                 style={{ border: \"none\" }}\n//                               ></iframe>\n//                             </div>\n//                           );\n//                         } else if (media.type === \"video/mp4\") {\n//                           return (\n//                             <div key={idx}>\n//                               <button onClick={() => handleVideoClick(media.url)}>Play Video</button>\n//                             </div>\n//                           );\n//                         }\n//                         return null;\n//                       })}\n//                     </Carousel>\n//                   )}\n//                 </div>\n//                 <div className=\"feed-content\">\n//                   <h3>{post.title}</h3>\n//                   <p>{post.description}</p>\n//                   {post.link && (\n//                     <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\n//                       {post.link}\n//                     </a>\n//                   )}\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardContent;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./DashboardContent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContent = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        console.log(\"Fetching posts...\");\n        const response = await fetch(\"http://localhost:3000/fetch/\");\n        const data = await response.json();\n        console.log(\"Fetched posts data:\", data);\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const categories = []; // Define categories if needed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-grid\",\n        children: posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by date\n        .map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feed-image\",\n            children: post.media.length > 0 && post.media[0].url && /*#__PURE__*/_jsxDEV(Carousel, {\n              showThumbs: false,\n              infiniteLoop: true,\n              autoPlay: true,\n              interval: 3000,\n              showStatus: false,\n              children: post.media.map((media, idx) => {\n                if (media.type.startsWith(\"image/\")) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: media.url,\n                      alt: `${post.title} ${idx}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 31\n                    }, this)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 29\n                  }, this);\n                } else if (media.type === \"application/pdf\") {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pdf-preview\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: media.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      className: \"pdf-link\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: \"https://upload.wikimedia.org/wikipedia/commons/8/87/PDF_file_icon.svg\",\n                        alt: \"PDF Preview\",\n                        className: \"pdf-thumbnail\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"pdf-filename\",\n                        children: media.filename || \"View PDF\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 31\n                    }, this)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 29\n                  }, this);\n                } else if (media.type === \"video/mp4\") {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"video\", {\n                      controls: true,\n                      width: \"100%\",\n                      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                        src: media.url,\n                        type: \"video/mp4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 33\n                      }, this), \"Your browser does not support the video tag.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 31\n                    }, this)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 29\n                  }, this);\n                }\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feed-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), post.link && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"post-link\",\n              children: post.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardContent, \"z7lEZYXb1qv+423CayGGvGFU8nc=\");\n_c = DashboardContent;\nexport default DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["React","useEffect","useState","Link","Carousel","jsxDEV","_jsxDEV","DashboardContent","_s","posts","setPosts","activeCategory","setActiveCategory","fetchPosts","console","log","response","fetch","data","json","error","categories","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","Date","createdAt","map","post","index","media","length","url","showThumbs","infiniteLoop","autoPlay","interval","showStatus","idx","type","startsWith","src","alt","title","href","target","rel","filename","controls","width","description","link","_c","$RefreshReg$"],"sources":["C:/Users/chpre/OneDrive/Desktop/college/PROJECTS/miniproject/college_activity/src/Dashboardcontent.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         console.log(\"Fetching posts...\"); // Log before fetching\r\n//         const response = await fetch(\"http://localhost:3000/fetch/\"); // Adjust API URL if needed\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts data:\", data);  // Log the data received from the backend\r\n//         setPosts(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const categories = [\r\n//     {\r\n//       name: \"Club\",\r\n//       subcategories: [\"RMF\", \"Splash Out\", \"Rhythmic Thunders\", \"VPOD\", \"Happy Club\"],\r\n//       image: \"/images/clubs-image.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Academics\",\r\n//       subcategories: [\"First year\", \"Second year\", \"Third year\", \"Fourth year\"],\r\n//       image: \"/images/academic excellence.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Notices\",\r\n//       subcategories: [],\r\n//       image: \"/images/notice.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Skill Hub\",\r\n//       subcategories: [\"Hackathons\", \"Coding-Contests\", \"Training programmes\"],\r\n//       image: \"/images/skill-hub.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Events\",\r\n//       subcategories: [],\r\n//       image: \"/images/events-icon.jpg\",\r\n//     },\r\n//     {\r\n//       name: \"Placements\",\r\n//       subcategories: [],\r\n//       image: \"/images/placements.jpg\",\r\n//     },\r\n//   ];\r\n\r\n//   console.log(\"Posts array in state:\", posts); // Log the posts array in the component state\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container\">\r\n//       <h1>Dashboard</h1>\r\n\r\n//       {/* CATEGORY SECTION */}\r\n//       <div className=\"category-container\">\r\n//         {categories.map((category) => (\r\n//           <div\r\n//             key={category.name}\r\n//             className=\"category-wrapper\"\r\n//             onMouseEnter={() => setActiveCategory(category.name)}\r\n//             onMouseLeave={() => setActiveCategory(null)}\r\n//           >\r\n//             <div className=\"category-icon\">\r\n//               <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n//             </div>\r\n//             <div className=\"category-name\">{category.name}</div>\r\n//             {category.subcategories.length > 0 && activeCategory === category.name && (\r\n//               <div className=\"sub-category-container\">\r\n//                 <ul>\r\n//                   {category.subcategories.map((subcategory, subIndex) => (\r\n//                     <li key={subIndex} className=\"subcategory-item\">\r\n//                       {subcategory === \"RMF\" ? (\r\n//                         <Link to=\"/rmfpage\" className=\"subcategory-link\">\r\n//                           RMF\r\n//                         </Link>\r\n//                       ) : (\r\n//                         subcategory\r\n//                       )}\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* FEED SECTION */}\r\n//       <div className=\"feed-section\">\r\n//         <h2>Feed</h2>\r\n//         <div className=\"feed-grid\">\r\n//           {posts\r\n//             .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by createdAt in descending order\r\n//             .map((post, index) => (\r\n//               <div className=\"feed-item\" key={index}>\r\n//                 <div className=\"feed-image\">\r\n//                   {/* Check if there are multiple media items */}\r\n//                   {post.media.length > 0 && post.media[0].url && (\r\n//                     <Carousel\r\n//                       showThumbs={false}\r\n//                       infiniteLoop={true}\r\n//                       autoPlay={true}  // Enable auto-play for the carousel\r\n//                       interval={3000}  // Set interval for auto-play\r\n//                       showStatus={false}\r\n//                     >\r\n//                       {post.media.map((media, idx) => (\r\n//                         media.url && (\r\n//                           <div key={idx}>\r\n//                             <img src={media.url} alt={`${post.title} ${idx}`} />\r\n//                           </div>\r\n//                         )\r\n//                       ))}\r\n//                     </Carousel>\r\n//                   )}\r\n//                 </div>\r\n//                 <div className=\"feed-content\">\r\n//                   <h3>{post.title}</h3>\r\n//                   <p>{post.description}</p>\r\n                  \r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Carousel } from \"react-responsive-carousel\";\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n// import \"./DashboardContent.css\";\r\n\r\n// const DashboardContent = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       try {\r\n//         console.log(\"Fetching posts...\");\r\n//         const response = await fetch(\"http://localhost:3000/fetch/\");\r\n//         const data = await response.json();\r\n//         console.log(\"Fetched posts data:\", data);\r\n//         setPosts(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching posts:\", error);\r\n//       }\r\n//     };\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const categories = []; // Define categories if needed\r\n\r\n//   const handleVideoClick = (url) => {\r\n//     const videoElement = document.createElement(\"video\");\r\n//     videoElement.src = url;\r\n//     videoElement.controls = true;\r\n//     videoElement.autoplay = true;\r\n//     videoElement.style.position = \"fixed\";\r\n//     videoElement.style.top = \"50%\";\r\n//     videoElement.style.left = \"50%\";\r\n//     videoElement.style.transform = \"translate(-50%, -50%)\";\r\n//     videoElement.style.zIndex = 9999;\r\n//     videoElement.style.width = \"80vw\";\r\n//     videoElement.style.height = \"80vh\";\r\n//     document.body.appendChild(videoElement);\r\n//     videoElement.requestFullscreen();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container\">\r\n//       <h1>Dashboard</h1>\r\n\r\n//       {/* CATEGORY SECTION */}\r\n//       <div className=\"category-container\">\r\n//         {categories.map((category) => (\r\n//           <div\r\n//             key={category.name}\r\n//             className=\"category-wrapper\"\r\n//             onMouseEnter={() => setActiveCategory(category.name)}\r\n//             onMouseLeave={() => setActiveCategory(null)}\r\n//           >\r\n//             <div className=\"category-icon\">\r\n//               <img src={category.image} alt={`${category.name} Icon`} className=\"category-image\" />\r\n//             </div>\r\n//             <div className=\"category-name\">{category.name}</div>\r\n//             {category.subcategories.length > 0 && activeCategory === category.name && (\r\n//               <div className=\"sub-category-container\">\r\n//                 <ul>\r\n//                   {category.subcategories.map((subcategory, subIndex) => (\r\n//                     <li key={subIndex} className=\"subcategory-item\">\r\n//                       {subcategory === \"RMF\" ? (\r\n//                         <Link to=\"/rmfpage\" className=\"subcategory-link\">\r\n//                           RMF\r\n//                         </Link>\r\n//                       ) : (\r\n//                         subcategory\r\n//                       )}\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* FEED SECTION */}\r\n//       <div className=\"feed-section\">\r\n//         <h2>Feed</h2>\r\n//         <div className=\"feed-grid\">\r\n//           {posts\r\n//             .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by date\r\n//             .map((post, index) => (\r\n//               <div className=\"feed-item\" key={index}>\r\n//                 <div className=\"feed-image\">\r\n//                   {post.media.length > 0 && post.media[0].url && (\r\n//                     <Carousel\r\n//                       showThumbs={false}\r\n//                       infiniteLoop={true}\r\n//                       autoPlay={true}\r\n//                       interval={3000}\r\n//                       showStatus={false}\r\n//                     >\r\n//                       {post.media.map((media, idx) => {\r\n//                         if (media.type === \"image/jpeg\" || media.type === \"image/png\" || media.type === \"image/gif\") {\r\n//                           return (\r\n//                             <div key={idx}>\r\n//                               <img src={media.url} alt={`${post.title} ${idx}`} />\r\n//                             </div>\r\n//                           );\r\n//                         } else if (media.type === \"application/pdf\") {\r\n//                           return (\r\n//                             <div key={idx} className=\"pdf-container\">\r\n//                               <iframe\r\n//                                 src={`https://docs.google.com/gview?url=${media.url}&embedded=true`}\r\n//                                 title=\"PDF Viewer\"\r\n//                                 width=\"100%\"\r\n//                                 height=\"500px\"\r\n//                                 style={{ border: \"none\" }}\r\n//                               ></iframe>\r\n//                             </div>\r\n//                           );\r\n//                         } else if (media.type === \"video/mp4\") {\r\n//                           return (\r\n//                             <div key={idx}>\r\n//                               <button onClick={() => handleVideoClick(media.url)}>Play Video</button>\r\n//                             </div>\r\n//                           );\r\n//                         }\r\n//                         return null;\r\n//                       })}\r\n//                     </Carousel>\r\n//                   )}\r\n//                 </div>\r\n//                 <div className=\"feed-content\">\r\n//                   <h3>{post.title}</h3>\r\n//                   <p>{post.description}</p>\r\n//                   {post.link && (\r\n//                     <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n//                       {post.link}\r\n//                     </a>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardContent;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./DashboardContent.css\";\r\n\r\nconst DashboardContent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        console.log(\"Fetching posts...\");\r\n        const response = await fetch(\"http://localhost:3000/fetch/\");\r\n        const data = await response.json();\r\n        console.log(\"Fetched posts data:\", data);\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const categories = []; // Define categories if needed\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Dashboard</h1>\r\n\r\n      {/* FEED SECTION */}\r\n      <div className=\"feed-section\">\r\n        <h2>Feed</h2>\r\n        <div className=\"feed-grid\">\r\n          {posts\r\n            .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)) // Sort posts by date\r\n            .map((post, index) => (\r\n              <div className=\"feed-item\" key={index}>\r\n                <div className=\"feed-image\">\r\n                  {post.media.length > 0 && post.media[0].url && (\r\n                    <Carousel\r\n                      showThumbs={false}\r\n                      infiniteLoop={true}\r\n                      autoPlay={true}\r\n                      interval={3000}\r\n                      showStatus={false}\r\n                    >\r\n                      {post.media.map((media, idx) => {\r\n                        if (media.type.startsWith(\"image/\")) {\r\n                          return (\r\n                            <div key={idx}>\r\n                              <img src={media.url} alt={`${post.title} ${idx}`} />\r\n                            </div>\r\n                          );\r\n                        } else if (media.type === \"application/pdf\") {\r\n                          return (\r\n                            <div key={idx} className=\"pdf-preview\">\r\n                              <a\r\n                                href={media.url}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"pdf-link\"\r\n                              >\r\n                                <img\r\n                                  src=\"https://upload.wikimedia.org/wikipedia/commons/8/87/PDF_file_icon.svg\"\r\n                                  alt=\"PDF Preview\"\r\n                                  className=\"pdf-thumbnail\"\r\n                                />\r\n                                <p className=\"pdf-filename\">{media.filename || \"View PDF\"}</p>\r\n                              </a>\r\n                            </div>\r\n                          );\r\n                        } else if (media.type === \"video/mp4\") {\r\n                          return (\r\n                            <div key={idx}>\r\n                              <video controls width=\"100%\">\r\n                                <source src={media.url} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                              </video>\r\n                            </div>\r\n                          );\r\n                        }\r\n                        return null;\r\n                      })}\r\n                    </Carousel>\r\n                  )}\r\n                </div>\r\n                <div className=\"feed-content\">\r\n                  <h3>{post.title}</h3>\r\n                  <p>{post.description}</p>\r\n                  {post.link && (\r\n                    <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n                      {post.link}\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}